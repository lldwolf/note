<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<link rel="Stylesheet" type="text/css" id="MzCss_imagesshowmeshowmecss" href="js大全_files/showme.css">
<link rel="Stylesheet" type="text/css" id="MzCss_httpwwwcsdnnetuistylesdefaultNoticeWindowcss" href="js大全_files/NoticeWindow.css">
<link rel="Stylesheet" type="text/css" id="MzCss_httpblogcsdnnetscriptsSystem_resourceMzFormcss" href="js大全_files/MzForm.css">
<title>转载 js大全 - asp专栏 - CSDNBlog</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="keywords" content="lvlingwy,js">
<meta name="description" content="js">
<script type="text/javascript" src="_files/jsframework.js"></script>
<script type="text/javascript">eval(System._codebase['System.Global']);</script>
<script type="text/javascript">eval(System._codebase['Csdn.Common']);</script>
<script type="text/javascript" src="js大全_files/tabber.js"></script>
<script type="text/javascript" src="js大全_files/feedBackToolTips.js"></script>
<link rel="stylesheet" href="js大全_files/tabber.css" type="text/css" media="screen">
<link rel="Shortcut Icon" href="http://profile.csdn.net/lvlingwy/picture/1.ico">
<link href="js大全_files/style.css" type="text/css" rel="stylesheet" media="all">
<link href="js大全_files/print.htm" type="text/css" rel="stylesheet" media="print">
<link href="http://blog.csdn.net/lvlingwy/rss.aspx" title="RSS" type="application/rss+xml" rel="alternate">
<script type="text/javascript">eval(System._codebase['Csdn.Blog.UserOnline']);</script>
<script type="text/javascript">eval(System._codebase['Csdn.Blog.ShowmeDataDeal']);</script>
<link rel="pingback" href="http://blog.csdn.net/lvlingwy/Services/Pingback.aspx">
</head>
<body>
<h1 align="center">JS大全</h1>
<div class="postText">
      <div class="postText" align="left">
        <ul>
          <font size="2"><strong> </strong>
          <li><strong>事件源对象 <br>
            </strong></li>
          <strong> </strong>
          <li><strong><font size="2">捕获释放 <br>
            </font><font size="3"><span style="color: red; font-family: Arial;">event.srcElement.setCapture();&nbsp; <br>
            event.srcElement.releaseCapture();&nbsp; </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">事件按键 <br>
            </font><font size="3"><span style="color: red;">event.keyCode <br>
            event.shiftKey <br>
            event.altKey <br>
            event.ctrlKey </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">事件返回值 <br>
            </font><font size="3"><span style="color: red;">event.returnValue</span> </font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">鼠标位置 <br>
            </font><font size="3"><span style="color: red;">event.x <br>
            event.y </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">窗体活动元素 <br>
            </font><font size="3"><span style="color: red;">document.activeElement</span> </font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">绑定事件 <br>
            </font><font size="3"><span style="color: red;">document.captureEvents(Event.KEYDOWN);</span> </font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">访问窗体元素 <br>
            </font><font size="3"><span style="color: red;">document.all("txt").focus(); <br>
            document.all("txt").select(); </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">窗体命令 <br>
            </font><font size="3"><span style="color: red;">document.execCommand</span> </font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">窗体COOKIE <br>
            </font><font size="3"><span style="color: red;">document.cookie</span> </font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">菜单事件 <br>
            </font><font size="3"><span style="color: red;">document.oncontextmenu</span> </font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">创建元素 <br>
            </font><font size="3"><span style="color: red;">document.createElement("SPAN");&nbsp; </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">根据鼠标获得元素： <br>
            </font><font size="3"><span style="color: red;">document.elementFromPoint(event.x,event.y).tagName=="TD <br>
            document.elementFromPoint(event.x,event.y).appendChild(ms)&nbsp; </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">窗体图片 <br>
            </font><font size="3"><span style="color: red;">document.images[索引] </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">窗体事件绑定 <br>
            </font><font size="3"><span style="color: red;">document.onmousedown=scrollwindow; </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">元素 <br>
            </font><font size="3"><span style="color: red;">document.窗体.elements[索引] </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">对象绑定事件 <br>
            </font><font size="3"><span style="color: red;">document.all.xxx.detachEvent(’onclick’,a); </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">插件数目 <br>
            </font><font size="3"><span style="color: red;">navigator.plugins </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">取变量类型 <br>
            </font><font size="3"><span style="color: red;">typeof($js_libpath) == "undefined" </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">下拉框 <br>
            </font><font size="3"><span style="color: red;">下拉框.options[索引] <br>
            下拉框.options.length </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><font size="2">查找对象 <br>
            </font><font size="3"><span style="color: red;">document.getElementsByName("r1"); <br>
            document.getElementById(id); </span></font><strong></strong></strong></li>
          <strong> </strong>
          <li><strong><strong><font size="2">定时 <br>
            </font><font size="3"><span style="color: red;">alert(decodeURIComponent(encodeURIComponent("http://你好.com?as= hehe"))) <br>
            encodeURIComponent对":"、"/"、";" 和 "?"也编码 </span></font><strong><font size="2"><strong><font size="2"><strong><font size="2"><font size="2"><font size="2"></font></font></font></strong></font></strong></font><font size="3"><span style="color: red;">&lt;tr onmouseover="this.bgColor=’#f0f0f0’" onmouseout="this.bgColor=’#ffffff’"&gt; <br>
            </span>//各种尺寸 </font></strong></strong><font size="2"><span style="color: red;">timer=setInterval(’scrollwindow()’,delay); <br>
            clearInterval(timer);</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>UNCODE编码 <br>
            </strong><font size="2"><span style="color: red;">escape() ,unescape</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>父对象</strong> <br>
            <font size="2"><span style="color: red;">obj.parentElement(dhtml) <br>
            obj.parentNode(dom)</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>交换表的行 <br>
            </strong><span style="color: red;"><font size="2">TableID.moveRow(2,1)</font></span><strong><span style="color: red;"><font size="2"> </font></span></strong></strong></li>
          <strong> </strong>
          <li><strong><strong>替换CSS</strong> <br>
            <span style="color: red;"><font size="2">document.all.csss.href = "a.css";</font></span><strong><span style="color: red;"><font size="2"> </font></span></strong></strong></li>
          <strong> </strong>
          <li><strong><strong>并排显示</strong> <br>
            <font size="2"><span style="color: red;">display:inline</span><span style="color: red;"><font size="2"> </font></span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>隐藏焦点 <br>
            </strong><font size="2"><span style="color: red;">hidefocus=true</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>根据宽度换行 <br>
            </strong><font size="2"><span style="color: red;">style="word-break:break-all"</span><span style="color: red;"><font size="2"> </font></span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>自动刷新 <br>
            </strong><font size="2"><span style="color: red;">&lt;meta HTTP-EQUIV="refresh" CONTENT="8;URL=http://c98.yeah.net"&gt;</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>简单邮件 <br>
            </strong><span style="color: red;"><font size="2">&lt;a&nbsp; href="</font></span><a href="mailto:aaa@bbb.com?subject=ccc&amp;amp;amp;body=xxxyyy"><span style="color: red;"><u><font size="2">mailto:aaa@bbb.com?subject=ccc&amp;body=xxxyyy</font></u></span></a><span style="color: red;"><font size="2">"&gt;&nbsp; </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>快速转到位置 <br>
            </strong><font size="2"><span style="color: red;">obj.scrollIntoView(true)</span><span style="color: red;"><font size="2"> </font></span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>锚 <br>
            </strong><font size="2"><span style="color: red;">&lt;a name="first"&gt; <br>
&lt;a href="#first"&gt;anchors&lt;/a&gt;</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>网页传递参数 <br>
            </strong><font size="2"><span style="color: red;">location.search();</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>可编辑 <br>
            </strong><span style="color: red;"><font size="2">obj.contenteditable=true </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>执行菜单命令</strong> <br>
            <font size="2"><span style="color: red;">obj.execCommand</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>双字节字符</strong> <br>
            <font size="2"><span style="color: red;">/[^\x00-\xff]/ <br>
            汉字 <br>
            /[\u4e00-\u9fa5]/</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>让英文字符串超出表格宽度自动换行</strong> <br>
            <span style="color: red;"><font size="2">word-wrap: break-word; word-break: break-all; </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>透明背景</strong> <br>
            <font size="2"><span style="color: red;">&lt;IFRAME src="1.htm" width=300 height=180 allowtransparency&gt;&lt;/iframe&gt;</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>获得style内容 <br>
            </strong><font size="2"><span style="color: red;">obj.style.cssText</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>HTML标签</strong> <br>
            <font size="2"><span style="color: red;">document.documentElement.innerHTML</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>第一个style标签</strong> <br>
            <font size="2"><span style="color: red;">document.styleSheets[0]</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>style标签里的第一个样式</strong> <br>
            <font size="2"><span style="color: red;">document.styleSheets[0].rules[0]</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>防止点击空链接时，页面往往重置到页首端。 <br>
            </strong><span style="color: red;"><font size="2">&lt;a href="javascript:function()"&gt;word&lt;/a&gt; </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>上一网页源</strong> <br>
            <span style="color: red;"><font size="2">asp: <br>
            request.servervariables("HTTP_REFERER") <br>
            </font></span><span style="color: red;"><font size="2">javascript: <br>
            document.referrer </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>释放内存 <br>
            </strong><font size="2"><span style="color: red;">CollectGarbage();</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>禁止右键</strong> <br>
            <span style="color: red;"><font size="2">document.oncontextmenu = function() { return false;} </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>禁止保存</strong> <br>
            <span style="color: red;"><font size="2">&lt;noscript&gt;&lt;iframe src="*.htm"&gt;&lt;/iframe&gt;&lt;/noscript&gt; </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>禁止选取</strong>&lt;body&nbsp;oncontextmenu=<font size="2"><span style="color: rgb(255, 0, 255);">"return&nbsp;false"</span>&nbsp;ondragstart=<span style="color: rgb(255, 0, 255);">"return&nbsp;false"</span>&nbsp; </font></strong></li>
          <strong> </strong>
          <li><strong>onselectstart&nbsp;=<font size="2"><span style="color: rgb(255, 0, 255);">"return&nbsp;false"</span>&nbsp;onselect=<span style="color: rgb(255, 0, 255);">"document.selection.empty()"</span>&nbsp;oncopy=<span style="color: rgb(255, 0, 255);">"document.selection.empty()"</span>&nbsp;onbeforecopy=<span style="color: rgb(255, 0, 255);">"return&nbsp;false"</span>onmouseup=<span style="color: rgb(255, 0, 255);">"document.selection.empty()&gt;</span><span style="color: rgb(255, 0, 255);">&nbsp;</span> </font></strong></li>
          <strong> </strong>
          <li><strong><strong>禁止粘贴</strong> <br>
            <font size="2"><span style="color: red;">&lt;input type=text onpaste="return false"&gt;</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>地址栏图标</strong> <br>
            <font size="2"><span style="color: red;">&lt;link rel="Shortcut Icon" href="favicon.ico"&gt; <br>
            favicon.ico 名字最好不变16*16的16色,放虚拟目录根目录下</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>收藏栏图标</strong> <br>
            <span style="color: red;"><font size="2">&lt;link rel="Bookmark" href="favicon.ico"&gt; </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>查看源码</strong> <br>
            <span style="color: red;"><font size="2">&lt;input type=button value=查看网页源代码 onclick="window.location = ’view-source:’+ ’http://www.csdn.net/’"&gt; </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>关闭输入法</strong> <br>
            <span style="color: red;"><font size="2">&lt;input style="ime-mode:disabled"&gt; </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>自动全选</strong> <br>
            <span style="color: red;"><font size="2">&lt;input type=text name=text1 value="123" onfocus="this.select()"&gt; </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>ENTER键可以让光标移到下一个输入框 <br>
            </strong><font size="2"><span style="color: red;">&lt;input onkeydown="if(event.keyCode==13)event.keyCode=9"&gt;</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>文本框的默认值 <br>
            </strong><span style="color: red;"><font size="2">&lt;input type=text value="123" onfocus="alert(this.defaultValue)"&gt; </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>title换行 <br>
            </strong><span style="color: red;"><font size="2">obj.title = "123 sdfs " </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>获得时间所代表的微秒 <br>
            </strong><font size="2"><span style="color: red;">var n1 = new Date("2004-10-10".replace(/-/g, "\/")).getTime()</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>窗口是否关闭 <br>
            </strong><span style="color: red;"><font size="2">win.closed </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>checkbox扁平 <br>
            </strong><font size="2"><span style="color: red;">&lt;input type=checkbox style="position: absolute; clip:rect(5px 15px 15px 5px)"&gt;&lt;br&gt;</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>获取选中内容 <br>
            </strong><span style="color: red;"><font size="2">document.selection.createRange().duplicate().text </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>自动完成功能 <br>
            </strong><span style="color: red;"><font size="2">&lt;input&nbsp; type=text&nbsp; autocomplete=on&gt;打开该功能&nbsp; <br>
&lt;input&nbsp; type=text&nbsp; autocomplete=off&gt;关闭该功能&nbsp;&nbsp;&nbsp; </font></span></strong></li>
          <strong> </strong>
          <li><strong><strong>窗口最大化</strong> <br>
            <font size="2"><span style="color: red;">&lt;body onload="window.resizeTo(window.screen.width - 4,window.screen.height-50);window.moveTo(-4,-4)"&gt;</span><span style="color: red;"> </span></font></strong></li>
          <strong> </strong>
          <li><strong><strong>无关闭按钮IE <br>
            </strong><span style="color: red;"><font size="2">window.open("aa.htm", "meizz", "fullscreen=7"); </font></span></strong></li>
          <strong> </strong>
          <li><strong>统一编码/解码 <br>
            </strong></li>
          <strong> </strong>
          <li><strong><font size="2">表格行指示 <br>
            </font></strong></li>
          <strong> </strong>
          <li><strong>
            <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);">s&nbsp;&nbsp;+=&nbsp;&nbsp;<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"\r\n网页可见区域宽："</span>+&nbsp;&nbsp;document.body.clientWidth;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n网页可见区域高："</span>+&nbsp;&nbsp;document.body.clientHeight;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n网页可见区域高："</span>+&nbsp;&nbsp;document.body.offsetWeight&nbsp;&nbsp;+<span style="color: rgb(255, 0, 255);">"&nbsp;&nbsp;(包括边线的宽)"</span>;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n网页可见区域高："</span>+&nbsp;&nbsp;document.body.offsetHeight&nbsp;&nbsp;+<span style="color: rgb(255, 0, 255);">"&nbsp;&nbsp;(包括边线的宽)"</span>;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n网页正文全文宽："</span>+&nbsp;&nbsp;document.body.scrollWidth;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n网页正文全文高："</span>+&nbsp;&nbsp;document.body.scrollHeight;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n网页被卷去的高："</span>+&nbsp;&nbsp;document.body.scrollTop;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n网页被卷去的左："</span>+&nbsp;&nbsp;document.body.scrollLeft;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n网页正文部分上："</span>+&nbsp;&nbsp;window.screenTop;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n网页正文部分左："</span>+&nbsp;&nbsp;window.screenLeft;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n屏幕分辨率的高："</span>+&nbsp;&nbsp;window.screen.height;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n屏幕分辨率的宽："</span>+&nbsp;&nbsp;window.screen.width;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n屏幕可用工作区高度："</span>+&nbsp;&nbsp;window.screen.availHeight;&nbsp;&nbsp; <br>
              s&nbsp;&nbsp;+=&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"\r\n屏幕可用工作区宽度："</span></font></font>+&nbsp;&nbsp;window.screen.availWidth;&nbsp;&nbsp; </div>
            </strong></li>
          <strong> </strong></font><font size="3"><span style="color: red;">event.srcElement.tagName <br>
          event.srcElement.type</span> </font><strong></strong>
        </ul>
      </div>
      <p align="left"><font size="2"><strong>//过滤数字</strong> </font></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;input&nbsp;type=text&nbsp;onkeypress=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"return&nbsp;event.keyCode&gt;=48&amp;&amp;event.keyCode&lt;=57||(this.value.indexOf(’.’)&lt;0?event.keyCode==46:false)"</span>&nbsp;onpaste=<span style="color: rgb(255, 0, 255);">"return&nbsp;!clipboardData.getData(’text’).match(/\D/)"</span>&nbsp;ondragenter=<span style="color: rgb(255, 0, 255);">"return&nbsp;false"</span>&gt; </font></font></div>
      <p align="left"><font size="2"><strong>//特殊用途</strong> </font></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;input&nbsp;type=button&nbsp;value=导入收藏夹&nbsp;onclick=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"window.external.ImportExportFavorites(true,’http:<span style="color: rgb(0, 128, 0);">//localhost’);"</span>&gt; </span><br>
&lt;input&nbsp;type=button&nbsp;value=导出收藏夹&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"window.external.ImportExportFavorites(false,’http:<span style="color: rgb(0, 128, 0);">//localhost’);"</span>&gt; </span><br>
&lt;input&nbsp;type=button&nbsp;value=整理收藏夹&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"window.external.ShowBrowserUI(’OrganizeFavorites’,&nbsp;null)"</span>&gt; <br>
&lt;input&nbsp;type=button&nbsp;value=语言设置&nbsp;&nbsp;&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"window.external.ShowBrowserUI(’LanguageDialog’,&nbsp;null)"</span>&gt; <br>
&lt;input&nbsp;type=button&nbsp;value=加入收藏夹&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"window.external.AddFavorite(’http:<span style="color: rgb(0, 128, 0);">//www.google.com/’,&nbsp;’google’)"</span>&gt; </span><br>
&lt;input&nbsp;type=button&nbsp;value=加入到频道&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"window.external.addChannel(’http:<span style="color: rgb(0, 128, 0);">//www.google.com/’)"</span>&gt; </span><br>
&lt;input&nbsp;type=button&nbsp;value=加入到频道&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"window.external.showBrowserUI(’PrivacySettings’,null)"</span>&gt; </font></font></div>
      <p align="left"><font size="2"><strong>//不缓存</strong> </font> </p>
      <p align="left"><br>
        <font size="2"><strong>//正则匹配</strong></font><font size="3"> </font></p>
      <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">匹配中文字符的正则表达式：&nbsp;[\u4e00-\u9fa5] <br>
        匹配双字节字符(包括汉字在内)：[^\x00-\xff] <br>
        匹配空行的正则表达式：\n[\s|&nbsp;]*\r <br>
        匹配HTML标记的正则表达式：/&lt;(.*)&gt;.*&lt;\/\1&gt;|&lt;(.*)&nbsp;\/&gt;/&nbsp; <br>
        匹配首尾空格的正则表达式：(^\s*)|(\s*$)（像vbscript那样的trim函数） <br>
        匹配Email地址的正则表达式：\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)* <br>
        匹配网址URL的正则表达式：http:<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 128, 0);">//([\w-]+\.)+[\w-]+(/[\w-&nbsp;./?%&amp;=]*)? </span><br>
        以下是例子： <br>
        利用正则表达式限制网页表单里的文本框输入内容： <br>
        用正则表达式限制只能输入中文：onkeyup=<span style="color: rgb(255, 0, 255);">"value=value.replace(/[^\u4E00-\u9FA5]/g,’’)"</span>&nbsp;onbeforepaste=<span style="color: rgb(255, 0, 255);">"clipboardData.setData(’text’,clipboardData.getData(’text’).replace(/[^\u4E00-\u9FA5]/g,’’))"</span> <br>
        1.用正则表达式限制只能输入全角字符：&nbsp;onkeyup=<span style="color: rgb(255, 0, 255);">"value=value.replace(/[^\uFF00-\uFFFF]/g,’’)"</span>&nbsp;onbeforepaste=<span style="color: rgb(255, 0, 255);">"clipboardData.setData(’text’,clipboardData.getData(’text’).replace(/[^\uFF00-\uFFFF]/g,’’))"</span> <br>
        2.用正则表达式限制只能输入数字：onkeyup=<span style="color: rgb(255, 0, 255);">"value=value.replace(/[^\d]/g,’’)&nbsp;"</span>onbeforepaste=<span style="color: rgb(255, 0, 255);">"clipboardData.setData(’text’,clipboardData.getData(’text’).replace(/[^\d]/g,’’))"</span> <br>
        3.用正则表达式限制只能输入数字和英文：onkeyup=<span style="color: rgb(255, 0, 255);">"value=value.replace(/[\W]/g,’’)&nbsp;"</span>onbeforepaste=<span style="color: rgb(255, 0, 255);">"clipboardData.setData(’text’,clipboardData.getData(’text’).replace(/[^\d]/g,’’))"</span></font></font> </div>
      <p align="left"><font size="2"><strong>//消除图像工具栏</strong> </font></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left"><strong><font style="background-color: rgb(238, 238, 238);">&lt;IMG&nbsp;SRC=</font><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"mypicture.jpg"</span>&nbsp;HEIGHT=<span style="color: rgb(255, 0, 255);">"100px"</span>&nbsp;WIDTH=<span style="color: rgb(255, 0, 255);">"100px"</span>&nbsp;GALLERYIMG=<span style="color: rgb(255, 0, 255);">"false"</span>&gt;&nbsp; <br>
        or <br>
&lt;head&gt; <br>
&lt;meta&nbsp;http-equiv=<span style="color: rgb(255, 0, 255);">"imagetoolbar"</span>&nbsp;content=<span style="color: rgb(255, 0, 255);">"no"</span>&gt; <br>
&lt;/head&gt;</font></font></strong> </div>
      </font>
      <p align="left"><font size="2"><strong>//无提示关闭 <br>
        </strong></font>
      <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left"><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 0, 255);">function</span>&nbsp;Close() <br>
        { <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;ua=navigator.userAgent <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;ie=navigator.appName==<span style="color: rgb(255, 0, 255);">"Microsoft&nbsp;Internet&nbsp;Explorer"</span>?<span style="color: rgb(0, 0, 255);">true</span>:false <br>
&nbsp;<span style="color: rgb(0, 0, 255);">if</span>(ie) <br>
&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;IEversion=parseFloat(ua.substring(ua.indexOf(<span style="color: rgb(255, 0, 255);">"MSIE&nbsp;"</span>)+5,ua.indexOf(<span style="color: rgb(255, 0, 255);">";"</span>,ua.indexOf(<span style="color: rgb(255, 0, 255);">"MSIE&nbsp;"</span>)))) <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>(IEversion&lt;&nbsp;5.5) <br>
&nbsp;&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;str&nbsp;&nbsp;=&nbsp;’&lt;object&nbsp;id=noTipClose&nbsp;classid=<span style="color: rgb(255, 0, 255);">"clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"</span>&gt;’ <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str&nbsp;+=&nbsp;’&lt;param&nbsp;name=<span style="color: rgb(255, 0, 255);">"Command"</span>&nbsp;value=<span style="color: rgb(255, 0, 255);">"Close"</span>&gt;&lt;/object&gt;’; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.body.insertAdjacentHTML(<span style="color: rgb(255, 0, 255);">"beforeEnd"</span>,&nbsp;str); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.all.noTipClose.Click(); <br>
&nbsp;&nbsp;} <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else <br>
&nbsp;&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.opener&nbsp;=<span style="color: rgb(0, 0, 255);">null</span></font></font>; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.close(); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <br>
&nbsp;&nbsp;&nbsp;} <br>
&nbsp;else <br>
&nbsp;{ <br>
&nbsp;&nbsp;window.close() <br>
&nbsp;&nbsp;&nbsp;} <br>
        } </div>
      </font>
      </p>
      <p align="left"><font size="2"><strong>//取得控件得绝对位置(1)</strong> <br>
        </font>
      <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;script&nbsp;language=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"javascript"</span>&gt;&nbsp; <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;getoffset(e) <br>
        {&nbsp; <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;t=e.offsetTop;&nbsp; <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;l=e.offsetLeft;&nbsp; <br>
&nbsp;<span style="color: rgb(0, 0, 255);">while</span>(e=e.offsetParent) <br>
&nbsp;{&nbsp; <br>
&nbsp;&nbsp;t+=e.offsetTop;&nbsp; <br>
&nbsp;&nbsp;l+=e.offsetLeft;&nbsp; <br>
&nbsp;}&nbsp; <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;rec&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">Array</span>(1); <br>
&nbsp;rec[0]&nbsp;&nbsp;=&nbsp;t; <br>
&nbsp;rec[1]&nbsp;=&nbsp;l; <br>
&nbsp;<span style="color: rgb(0, 0, 255);">return</span>&nbsp;rec <br>
        }&nbsp; <br>
        <font size="2">&lt;/script&gt; </font></font></font></div>
      <p align="left"><strong>//获得控件的绝对位置(2)</strong> </p>
      </font>
      </p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">oRect&nbsp;=&nbsp;obj.getBoundingClientRect(); <br>
        oRect.left <br>
        oRect. </div>
      <p align="left"><font size="2"><strong>//最小化,最大化,关闭</strong> </font></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;object&nbsp;id=min&nbsp;classid=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"</span>&gt;&nbsp; <br>
&lt;param&nbsp;name=<span style="color: rgb(255, 0, 255);">"Command"</span>&nbsp;value=<span style="color: rgb(255, 0, 255);">"Minimize"</span>&gt;&lt;/object&gt;&nbsp; <br>
&lt;object&nbsp;id=max&nbsp;classid=<span style="color: rgb(255, 0, 255);">"clsid:ADB880A6-D8FF-11CF-9377-00AA003B7A11"</span>&gt;&nbsp; <br>
&lt;param&nbsp;name=<span style="color: rgb(255, 0, 255);">"Command"</span>&nbsp;value=<span style="color: rgb(255, 0, 255);">"Maximize"</span>&gt;&lt;/object&gt;&nbsp; <br>
&lt;OBJECT&nbsp;id=close&nbsp;classid=<span style="color: rgb(255, 0, 255);">"clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"</span>&gt;&nbsp; <br>
&lt;PARAM&nbsp;NAME=<span style="color: rgb(255, 0, 255);">"Command"</span>&nbsp;value=<span style="color: rgb(255, 0, 255);">"Close"</span>&gt;&lt;/OBJECT&gt;&nbsp; <br>
&lt;input&nbsp;type=button&nbsp;value=最小化&nbsp;onclick=min.Click()&gt;&nbsp; <br>
&lt;input&nbsp;type=button&nbsp;value=最大化&nbsp;onclick=max.Click()&gt;&nbsp; <br>
&lt;input&nbsp;type=button&nbsp;value=关闭&nbsp;onclick=close.Click()&gt;&nbsp; </font></font></div>
      <p align="left"><font style="background-color: rgb(238, 238, 238);" size="2"></font></p>
      <p align="left"><font size="2"><strong>//光标停在文字最后</strong> </font><font size="2"></font> </p>
      <p align="left"><font size="2"><strong>//页面进入和退出的特效 <br>
        </strong></font>
      <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">进入页面&lt;meta&nbsp;http-equiv=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"Page-Enter"</span>&nbsp;content=<span style="color: rgb(255, 0, 255);">"revealTrans(duration=x,&nbsp;transition=y)"</span>&gt; <br>
        推出页面&lt;meta&nbsp;http-equiv=<span style="color: rgb(255, 0, 255);">"Page-Exit"</span>&nbsp;content=<span style="color: rgb(255, 0, 255);">"revealTrans(duration=x,&nbsp;transition=y)"</span></font></font>&gt;&nbsp; <br>
        这个是页面被载入和调出时的一些特效。duration表示特效的持续时间，以秒为单位。transition表示使 <br>
        用哪种特效，取值为1-23: <br>
        　　 0&nbsp;矩形缩小&nbsp; <br>
        　　 1&nbsp;矩形扩大&nbsp; <br>
        　　 2&nbsp;圆形缩小 <br>
        　　 3&nbsp;圆形扩大&nbsp; <br>
        　　 4&nbsp;下到上刷新&nbsp; <br>
        　　 5&nbsp;上到下刷新 <br>
        　　 6&nbsp;左到右刷新&nbsp; <br>
        　　 7&nbsp;右到左刷新&nbsp; <br>
        　　 8&nbsp;竖百叶窗 <br>
        　　 9&nbsp;横百叶窗&nbsp; <br>
        　　 10&nbsp;错位横百叶窗&nbsp; <br>
        　　 11&nbsp;错位竖百叶窗 <br>
        　　 12&nbsp;点扩散&nbsp; <br>
        　　 13&nbsp;左右到中间刷新&nbsp; <br>
        　　 14&nbsp;中间到左右刷新 <br>
        　　 15&nbsp;中间到上下 <br>
        　　 16&nbsp;上下到中间&nbsp; <br>
        　　 17&nbsp;右下到左上 <br>
        　　 18&nbsp;右上到左下&nbsp; <br>
        　　 19&nbsp;左上到右下&nbsp; <br>
        　　 20&nbsp;左下到右上 <br>
        　　 21&nbsp;横条&nbsp; <br>
        　　 22&nbsp;竖条&nbsp; <br>
        　　 23&nbsp; </div>
      </font>
      </p>
      <p align="left"><font size="2"><strong>//网页是否被检索</strong> </font> </p>
      <p align="left"><br>
        <font size="2"><strong>//打印分页</strong> </font> </p>
      <p align="left"><br>
        <font size="2"><strong>//设置打印</strong> <br>
        </font>
      <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;object&nbsp;id=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"factory"</span>&nbsp;style=<span style="color: rgb(255, 0, 255);">"display:none"</span>&nbsp;viewastext <br>
&nbsp;&nbsp;classid=<span style="color: rgb(255, 0, 255);">"clsid:1663ed61-23eb-11d2-b92f-008048fdd814"</span> <br>
&nbsp;&nbsp;codebase=<span style="color: rgb(255, 0, 255);">"http:<span style="color: rgb(0, 128, 0);">//www.meadroid.com/scriptx/ScriptX.cab#Version=5,60,0,360"</span> </span><br>
&gt;&lt;/object&gt; <br>
&lt;input&nbsp;type=button&nbsp;value=页面设置&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"factory.printing.PageSetup()"</span>&gt; <br>
&lt;input&nbsp;type=button&nbsp;value=打印预览&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"factory.printing.Preview()"</span>&gt; <br>
&nbsp; <br>
&lt;script&nbsp;language=javascript&gt; <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;window.onload() <br>
        { <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//&nbsp;--&nbsp;advanced&nbsp;features </span><br>
&nbsp;&nbsp;&nbsp;factory.printing.SetMarginMeasure(2)&nbsp;<span style="color: rgb(0, 128, 0);">//&nbsp;measure&nbsp;margins&nbsp;in&nbsp;inches </span><br>
&nbsp;&nbsp;&nbsp;factory.printing.SetPageRange(<span style="color: rgb(0, 0, 255);">false</span>,&nbsp;1,&nbsp;3)&nbsp;<span style="color: rgb(0, 128, 0);">//&nbsp;need&nbsp;pages&nbsp;from&nbsp;1&nbsp;to&nbsp;3 </span><br>
&nbsp;&nbsp;&nbsp;factory.printing.printer&nbsp;=&nbsp;<span style="color: rgb(255, 0, 255);">"HP&nbsp;DeskJet&nbsp;870C"</span> <br>
&nbsp;&nbsp;&nbsp;factory.printing.copies&nbsp;=&nbsp;2 <br>
&nbsp;&nbsp;&nbsp;factory.printing.collate&nbsp;=&nbsp;true <br>
&nbsp;&nbsp;&nbsp;factory.printing.paperSize&nbsp;=&nbsp;<span style="color: rgb(255, 0, 255);">"A4"</span> <br>
&nbsp;&nbsp;&nbsp;factory.printing.paperSource&nbsp;=&nbsp;<span style="color: rgb(255, 0, 255);">"Manual&nbsp;feed"</span> <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//&nbsp;--&nbsp;basic&nbsp;features </span><br>
&nbsp;&nbsp;&nbsp;factory.printing.header&nbsp;=&nbsp;<span style="color: rgb(255, 0, 255);">"居左显示&amp;b居中显示&amp;b居右显示页码，第&amp;p页/共&amp;P页"</span> <br>
&nbsp;&nbsp;&nbsp;factory.printing.footer&nbsp;=&nbsp;<span style="color: rgb(255, 0, 255);">"（自定义页脚）"</span> <br>
&nbsp;&nbsp;&nbsp;factory.printing.portrait&nbsp;=&nbsp;false <br>
&nbsp;&nbsp;&nbsp;factory.printing.leftMargin&nbsp;=&nbsp;0.75 <br>
&nbsp;&nbsp;&nbsp;factory.printing.topMargin&nbsp;=&nbsp;1.5 <br>
&nbsp;&nbsp;&nbsp;factory.printing.rightMargin&nbsp;=&nbsp;0.75 <br>
&nbsp;&nbsp;&nbsp;factory.printing.bottomMargin&nbsp;=&nbsp;1.5 <br>
        } <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;Print(frame)&nbsp;{ <br>
&nbsp;&nbsp;factory.printing.Print(<span style="color: rgb(0, 0, 255);">true</span>,&nbsp;frame)&nbsp;<span style="color: rgb(0, 128, 0);">//&nbsp;print&nbsp;with&nbsp;prompt </span><br>
        } <br>
&lt;/script&gt; <br>
&lt;input&nbsp;type=button&nbsp;value=<span style="color: rgb(255, 0, 255);">"打印本页"</span>&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"factory.printing.Print(false)"</span>&gt; <br>
&lt;input&nbsp;type=button&nbsp;value=<span style="color: rgb(255, 0, 255);">"页面设置"</span>&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"factory.printing.PageSetup()"</span>&gt; <br>
&lt;input&nbsp;type=button&nbsp;value=<span style="color: rgb(255, 0, 255);">"打印预览"</span>&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"factory.printing.Preview()"</span>&gt;&lt;br&gt; <br>
&lt;a&nbsp;href=<span style="color: rgb(255, 0, 255);">"http:<span style="color: rgb(0, 128, 0);">//www.meadroid.com/scriptx/docs/printdoc.htm?static"</span>&nbsp;&nbsp;target=_blank&gt;具体使用手册，更多信息，点这里&lt;/a&gt; </span><br>
        <strong>&nbsp;</strong></font></font> </div>
      <p align="left"><strong>//自带的打印预览</strong> </p>
      </font><font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">WebBrowser.ExecWB(1,1)&nbsp;打开&nbsp; <br>
        Web.ExecWB(2,1)&nbsp;关闭现在所有的IE窗口，并打开一个新窗口&nbsp; <br>
        Web.ExecWB(4,1)&nbsp;保存网页&nbsp; <br>
        Web.ExecWB(6,1)&nbsp;打印&nbsp; <br>
        Web.ExecWB(7,1)&nbsp;打印预览&nbsp; <br>
        Web.ExecWB(8,1)&nbsp;打印页面设置&nbsp; <br>
        Web.ExecWB(10,1)&nbsp;查看页面属性&nbsp; <br>
        Web.ExecWB(15,1)&nbsp;好像是撤销，有待确认&nbsp; <br>
        Web.ExecWB(17,1)&nbsp;全选&nbsp; <br>
        Web.ExecWB(22,1)&nbsp;刷新&nbsp; <br>
        Web.ExecWB(45,1)&nbsp;关闭窗体无提示&nbsp; <br>
&lt;style&nbsp;media=print&gt;&nbsp; <br>
        .Noprint&lt;!--用本样式在打印时隐藏非打印项目--&gt;&nbsp; <br>
        .PageNext&lt;!--控制分页--&gt;&nbsp; <br>
&lt;/style&gt;&nbsp; <br>
&lt;object&nbsp;&nbsp;id=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"WebBrowser"</span>&nbsp;&nbsp;width=0&nbsp;&nbsp;height=0&nbsp;&nbsp;classid=<span style="color: rgb(255, 0, 255);">"CLSID:8856F961-340A-11D0-A96B-00C04FD705A2"</span>&gt;&nbsp;&nbsp;&nbsp;&nbsp; <br>
&lt;/object&gt;&nbsp;&nbsp;&nbsp;&nbsp; <br>
&nbsp; <br>
&lt;center&nbsp;class=<span style="color: rgb(255, 0, 255);">"Noprint"</span></font></font>&nbsp;&gt; <br>
&lt;input&nbsp;type=button&nbsp;value=打印&nbsp;onclick=document.all.WebBrowser.ExecWB(6,1)&gt;&nbsp; <br>
&lt;input&nbsp;type=button&nbsp;value=直接打印&nbsp;onclick=document.all.WebBrowser.ExecWB(6,6)&gt;&nbsp; <br>
&lt;input&nbsp;type=button&nbsp;value=页面设置&nbsp;onclick=document.all.WebBrowser.ExecWB(8,1)&gt;&nbsp; <br>
&lt;/p&gt;&nbsp; <br>
&lt;p&gt;&nbsp;&lt;input&nbsp;type=button&nbsp;value=打印预览&nbsp;onclick=document.all.WebBrowser.ExecWB(7,1)&gt;&nbsp; <br>
&lt;/center&gt; </div>
      </font>
      </p>
      <p align="left"><font size="2"><strong>//去掉打印时的页眉页脚</strong> <br>
        </font>
  <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;script&nbsp;&nbsp;language=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"JavaScript"</span>&gt;&nbsp;&nbsp; <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;HKEY_Root,HKEY_Path,HKEY_Key; <br>
        HKEY_Root=<span style="color: rgb(255, 0, 255);">"HKEY_CURRENT_USER"</span>; <br>
        HKEY_Path=<span style="color: rgb(255, 0, 255);">"\\Software\\Microsoft\\Internet&nbsp;Explorer\\PageSetup\\"</span>; <br>
        <span style="color: rgb(0, 128, 0);">//设置网页打印的页眉页脚为空 </span><br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;PageSetup_Null() <br>
        { <br>
&nbsp;try <br>
&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;Wsh=<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">ActiveXObject</span>(<span style="color: rgb(255, 0, 255);">"WScript.Shell"</span>); <br>
&nbsp;&nbsp;HKEY_Key=<span style="color: rgb(255, 0, 255);">"header"</span>; <br>
&nbsp;&nbsp;Wsh.RegWrite(HKEY_Root+HKEY_Path+HKEY_Key,<span style="color: rgb(255, 0, 255);">""</span>); <br>
&nbsp;&nbsp;HKEY_Key=<span style="color: rgb(255, 0, 255);">"footer"</span>; <br>
&nbsp;&nbsp;Wsh.RegWrite(HKEY_Root+HKEY_Path+HKEY_Key,<span style="color: rgb(255, 0, 255);">""</span>); <br>
&nbsp;} <br>
&nbsp;<span style="color: rgb(0, 0, 255);">catch</span>(e){} <br>
        } <br>
        <span style="color: rgb(0, 128, 0);">//设置网页打印的页眉页脚为默认值 </span><br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;&nbsp;PageSetup_Default() <br>
        {&nbsp;&nbsp; <br>
&nbsp;try <br>
&nbsp;{ <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;Wsh=<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">ActiveXObject</span>(<span style="color: rgb(255, 0, 255);">"WScript.Shell"</span>); <br>
&nbsp;&nbsp;HKEY_Key=<span style="color: rgb(255, 0, 255);">"header"</span>; <br>
&nbsp;&nbsp;Wsh.RegWrite(HKEY_Root+HKEY_Path+HKEY_Key,<span style="color: rgb(255, 0, 255);">"&amp;w&amp;b页码,&amp;p/&amp;P"</span>); <br>
&nbsp;&nbsp;HKEY_Key=<span style="color: rgb(255, 0, 255);">"footer"</span>; <br>
&nbsp;&nbsp;Wsh.RegWrite(HKEY_Root+HKEY_Path+HKEY_Key,<span style="color: rgb(255, 0, 255);">"&amp;u&amp;b&amp;d"</span>); <br>
&nbsp;} <br>
&nbsp;<span style="color: rgb(0, 0, 255);">catch</span>(e){} <br>
        } <br>
&lt;/script&gt; <br>
&lt;input&nbsp;type=<span style="color: rgb(255, 0, 255);">"button"</span>&nbsp;value=<span style="color: rgb(255, 0, 255);">"清空页码"</span>&nbsp;onclick=PageSetup_Null()&gt; <br>
&lt;input&nbsp;type=<span style="color: rgb(255, 0, 255);">"button"</span>&nbsp;value=<span style="color: rgb(255, 0, 255);">"恢复页码"</span></font></font>&nbsp;onclick=PageSetup_Default()&gt; </div>
      <p align="left"><font size="2"><strong>//浏览器验证</strong> <br>
        </font></p>
      </font><font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left"><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 0, 255);">function</span>&nbsp;checkBrowser() <br>
        {&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ver=navigator.appVersion&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.dom=document.getElementById?1:0&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ie6=(<span style="color: rgb(0, 0, 255);">this</span>.ver.indexOf(<span style="color: rgb(255, 0, 255);">"MSIE&nbsp;6"</span>)&gt;-1&nbsp;&amp;&amp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.dom)?1:0;&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ie5=(<span style="color: rgb(0, 0, 255);">this</span>.ver.indexOf(<span style="color: rgb(255, 0, 255);">"MSIE&nbsp;5"</span>)&gt;-1&nbsp;&amp;&amp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.dom)?1:0;&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ie4=(document.all&nbsp;&amp;&amp;&nbsp;!<span style="color: rgb(0, 0, 255);">this</span>.dom)?1:0;&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ns5=(<span style="color: rgb(0, 0, 255);">this</span>.dom&nbsp;&amp;&amp;&nbsp;parseInt(<span style="color: rgb(0, 0, 255);">this</span>.ver)&nbsp;&gt;=&nbsp;5)&nbsp;?1:0;&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ns4=(document.layers&nbsp;&amp;&amp;&nbsp;!<span style="color: rgb(0, 0, 255);">this</span>.dom)?1:0;&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.mac=(<span style="color: rgb(0, 0, 255);">this</span>.ver.indexOf(’Mac’)&nbsp;&gt;&nbsp;-1)&nbsp;?1:0;&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ope=(navigator.userAgent.indexOf(’Opera’)&gt;-1);&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ie=(<span style="color: rgb(0, 0, 255);">this</span>.ie6&nbsp;||&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ie5&nbsp;||&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ie4)&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ns=(<span style="color: rgb(0, 0, 255);">this</span>.ns4&nbsp;||&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ns5)&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.bw=(<span style="color: rgb(0, 0, 255);">this</span>.ie6&nbsp;||&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ie5&nbsp;||&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ie4&nbsp;||&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ns5&nbsp;||&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ns4&nbsp;||&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.mac&nbsp;<br>
        ||&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.ope)&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">this</span>.nbw=(!<span style="color: rgb(0, 0, 255);">this</span>.bw)&nbsp; <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">return</span>&nbsp;<span style="color: rgb(0, 0, 255);">this</span></font></font>; <br>
        } </div>
      <p align="left"><strong>//计算内容宽和高</strong><font size="2"> </font></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;SCRIPT&nbsp;&nbsp;language=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"javascript"</span>&gt;&nbsp;&nbsp; <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;&nbsp;test(obj)&nbsp;&nbsp; <br>
        {&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;&nbsp;range&nbsp;&nbsp;=&nbsp;&nbsp;obj.createTextRange();&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(<span style="color: rgb(255, 0, 255);">"内容区宽度:&nbsp;&nbsp;"</span>&nbsp;&nbsp;+&nbsp;&nbsp;range.boundingWidth&nbsp;&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"px\r\n内容区高度:&nbsp;&nbsp;"</span>&nbsp;&nbsp;+&nbsp;&nbsp;range.boundingHeight&nbsp;&nbsp;+&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"px"</span>);&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>
        }&nbsp;&nbsp; <br>
&lt;/SCRIPT&gt;&nbsp;&nbsp; <br>
&lt;BODY&gt;&nbsp;&nbsp; <br>
&lt;Textarea&nbsp;id=<span style="color: rgb(255, 0, 255);">"txt"</span>&nbsp;height=<span style="color: rgb(255, 0, 255);">"150"</span>&gt;sdf&lt;/textarea&gt;&lt;INPUT&nbsp;&nbsp;type=<span style="color: rgb(255, 0, 255);">"button"</span>&nbsp;&nbsp;value=<span style="color: rgb(255, 0, 255);">"计算内容宽度"</span>&nbsp;&nbsp;onClick=<span style="color: rgb(255, 0, 255);">"test(txt)"</span></font></font>&gt;&nbsp;&nbsp; <br>
&lt;/BODY&gt; </div>
      <p align="left"><strong>//无模式的提示框</strong><font size="2"> </font></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left"><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 0, 255);">function</span>&nbsp;modelessAlert(Msg) <br>
        { <br>
&nbsp;&nbsp;&nbsp;window.showModelessDialog(<span style="color: rgb(255, 0, 255);">"javascript:alert(\""</span>+escape(Msg)+<span style="color: rgb(255, 0, 255);">"\");window.close();"</span>,<span style="color: rgb(255, 0, 255);">""</span>,</font></font><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"status:no;resizable:no;help:no;<br>
        dialogHeight:height:30px;dialogHeight:40px;"</span>); <br>
        } </font></font></div>
      <p align="left"><font style="background-color: rgb(238, 238, 238);" size="2"></font></p>
      <p align="left"><strong><font size="2">//屏蔽按键</font></strong> <font size="2"></font> </p>
      <p align="left"><font size="2"><strong>//移动的图层，拖动 <br>
        </strong></font>
      <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">1.&lt;span&nbsp;style=’position:absolute;width:200;height:200;background:red’&nbsp;<br>
        onmousedown=MouseDown(<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 0, 255);">this</span>)&nbsp;onmousemove=MouseMove()&nbsp;onmouseup=MouseUp()&gt;meizz&lt;/span&gt; <br>
&lt;script&nbsp;language=javascript&gt; <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;Obj; <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;MouseDown(obj) <br>
        { <br>
&nbsp;&nbsp;Obj=obj; <br>
&nbsp;&nbsp;Obj.setCapture(); <br>
&nbsp;&nbsp;Obj.l=event.x-Obj.style.pixelLeft; <br>
&nbsp;&nbsp;Obj.t=event.y-Obj.style.pixelTop; <br>
        } <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;MouseMove() <br>
        { <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>(Obj!=<span style="color: rgb(0, 0, 255);">null</span>) <br>
&nbsp;&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;&nbsp;Obj.style.left&nbsp;=&nbsp;event.x-Obj.l; <br>
&nbsp;&nbsp;&nbsp;&nbsp;Obj.style.top&nbsp;=&nbsp;event.y-Obj.t; <br>
&nbsp;&nbsp;} <br>
        } <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;MouseUp() <br>
        { <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>(Obj!=<span style="color: rgb(0, 0, 255);">null</span>) <br>
&nbsp;&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;&nbsp;Obj.releaseCapture(); <br>
&nbsp;&nbsp;&nbsp;&nbsp;Obj=<span style="color: rgb(0, 0, 255);">null</span>; <br>
&nbsp;&nbsp;} <br>
        } <br>
&lt;/script&gt; <br>
        2. <br>
&lt;div&nbsp;id=<span style="color: rgb(255, 0, 255);">"myDiv"</span>&nbsp;src=<span style="color: rgb(255, 0, 255);">"logo.gif"</span>&nbsp;ondrag=<span style="color: rgb(255, 0, 255);">"doDrag();"</span>&nbsp;onmouseover=<span style="color: rgb(255, 0, 255);">"this.style.cursor=’hand’"</span>&nbsp;<br>
        style=<span style="color: rgb(255, 0, 255);">"position:absolute;left=100;top=100;"</span>&nbsp;<br>
        onmousedown=<span style="color: rgb(255, 0, 255);">"doMouseDown();"</span>&gt; <br>
&lt;a&nbsp;href=<span style="color: rgb(255, 0, 255);">"#"</span>&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"return&nbsp;false"</span>&gt;&lt;h1&gt;wlecome&lt;/h1&gt;&lt;/a&gt; <br>
&lt;/div&gt; <br>
&lt;script&nbsp;language=<span style="color: rgb(255, 0, 255);">"JavaScript"</span>&nbsp;type=<span style="color: rgb(255, 0, 255);">"text/javascript"</span>&gt; <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;orgMouseX; <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;orgMouseY; <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;orgObjX; <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;orgObjY; <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;doDrag() <br>
        { <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;myObject=document.all.myDiv; <br>
        <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;x=event.clientX; <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;y=event.clientY; <br>
        myObject.style.left=x-(orgMouseX-orgObjX); <br>
        myObject.style.top=y-(orgMouseY-orgObjY); <br>
&nbsp; <br>
        } <br>
        <span style="color: rgb(0, 0, 255);">function</span></font></font>&nbsp;doMouseDown() <br>
        { <br>
        orgMouseX=event.clientX; <br>
        orgMouseY=event.clientY; <br>
        orgObjX=parseInt(document.all.myDiv.style.left); <br>
        orgObjY=parseInt(document.all.myDiv.style.top); <br>
        } <br>
        <br>
&lt;/script&gt; <br>
&nbsp; </div>
      <p align="left"><font size="2"><strong>//文档状态改变 <br>
        </strong></font></p>
      </font><font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;iframe&nbsp;src=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"a.html"</span>&nbsp;id=<span style="color: rgb(255, 0, 255);">"f"</span>&nbsp;name=<span style="color: rgb(255, 0, 255);">"f"</span>&nbsp;scrolling=<span style="color: rgb(255, 0, 255);">"no"</span>&nbsp;frameborder=0&nbsp;<br>
        marginwidth=0&nbsp;marginheight=0&gt;&lt;/iframe&gt; <br>
&lt;script&gt; <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;doc=window.frames[<span style="color: rgb(255, 0, 255);">"f"</span>].document; <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;s(){ <br>
&nbsp;<span style="color: rgb(0, 0, 255);">if</span>&nbsp;(doc.readyState==<span style="color: rgb(255, 0, 255);">"complete"</span>){ <br>
&nbsp;&nbsp;document.all.f.style.height=doc.body.scrollHeight <br>
&nbsp;&nbsp;document.all.f.style.width=doc.body.scrollWidth <br>
&nbsp;} <br>
        } <br>
        doc.onreadystatechange=s <br>
&lt;/script&gt; <br>
        </font></font></div>
      <span style="color: rgb(0, 128, 0);"></span></font>
      </p>
      <p align="left"><font size="2"><strong>//刷新后不变的文本框</strong> </font> </p>
      <p align="left">&nbsp;<font size="2"><strong>//访问剪贴板</strong> </font> </p>
      <p align="left">&nbsp;<font size="2"><strong>//操作COOKIE</strong> <br>
        </font>
      <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left"><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 0, 255);">function</span>&nbsp;SetCookie(sName,&nbsp;sValue) <br>
        { <br>
&nbsp;document.cookie&nbsp;=&nbsp;sName&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"="</span>&nbsp;+&nbsp;escape(sValue)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">";&nbsp;"</span>; <br>
        } <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;GetCookie(sName) <br>
        { <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;aCookie&nbsp;=&nbsp;document.cookie.split(<span style="color: rgb(255, 0, 255);">";&nbsp;"</span>); <br>
&nbsp;for&nbsp;(<span style="color: rgb(0, 0, 255);">var</span>&nbsp;i=0;&nbsp;i&nbsp;&lt;&nbsp;aCookie.length;&nbsp;i++) <br>
&nbsp;{ <br>
&nbsp;&nbsp; <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;aCrumb&nbsp;=&nbsp;aCookie[i].split(<span style="color: rgb(255, 0, 255);">"="</span>); <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>&nbsp;(sName&nbsp;==&nbsp;aCrumb[0])&nbsp; <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">return</span>&nbsp;unescape(aCrumb[1]); <br>
&nbsp;} <br>
&nbsp; <br>
        } <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;DelCookie(sName) <br>
        { <br>
        document.cookie&nbsp;=&nbsp;sName&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"="</span>&nbsp;+&nbsp;escape(sValue)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">";&nbsp;expires=Fri,&nbsp;31&nbsp;Dec&nbsp;1999&nbsp;23:59:59&nbsp;GMT;"</span></font></font>; <br>
        } </div>
      <p align="left"><strong>//setTimeout增加参数</strong> </p>
      </font>
      </p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;script&gt; <br>
        <font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 0, 255);">var</span>&nbsp;_st&nbsp;=&nbsp;window.setTimeout; <br>
        window.setTimeout&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">function</span>(fRef,&nbsp;mDelay)&nbsp;{ <br>
&nbsp;<span style="color: rgb(0, 0, 255);">if</span>(typeof&nbsp;fRef&nbsp;==&nbsp;’<span style="color: rgb(0, 0, 255);">function</span>’){ <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;argu&nbsp;=&nbsp;<span style="color: rgb(255, 0, 0);">Array</span>.prototype.slice.call(arguments,2); <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;f&nbsp;=&nbsp;(<span style="color: rgb(0, 0, 255);">function</span>(){&nbsp;fRef.apply(<span style="color: rgb(0, 0, 255);">null</span>,&nbsp;argu);&nbsp;}); <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">return</span>&nbsp;_st(f,&nbsp;mDelay); <br>
&nbsp;} <br>
&nbsp;<span style="color: rgb(0, 0, 255);">return</span>&nbsp;_st(fRef,mDelay); <br>
        } <br>
        <span style="color: rgb(0, 0, 255);">function</span></font></font>&nbsp;test(x){ <br>
&nbsp;alert(x); <br>
        } <br>
        window.setTimeout(test,1000,’fason’); <br>
&lt;/script&gt; </div>
      <p align="left"><br>
        <font size="2"><strong>//自定义的apply,call</strong></font> </p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">Function.prototype.apply&nbsp;=&nbsp;<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 0, 255);">function</span>&nbsp;(obj,&nbsp;argu)&nbsp;{ <br>
&nbsp;<span style="color: rgb(0, 0, 255);">if</span>&nbsp;(obj)&nbsp;obj.constructor.prototype._caller&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">this</span>;&nbsp; <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;argus&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">Array</span>(); <br>
&nbsp;for&nbsp;(<span style="color: rgb(0, 0, 255);">var</span>&nbsp;i=0;i&lt;argu.length;i++) <br>
&nbsp;&nbsp;argus[i]&nbsp;=&nbsp;<span style="color: rgb(255, 0, 255);">"argu["</span>&nbsp;+&nbsp;i&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"]"</span>; <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;r; <br>
&nbsp;eval(<span style="color: rgb(255, 0, 255);">"r&nbsp;=&nbsp;"</span>&nbsp;+&nbsp;(obj&nbsp;?&nbsp;(<span style="color: rgb(255, 0, 255);">"obj._caller("</span>&nbsp;+&nbsp;argus.join(<span style="color: rgb(255, 0, 255);">","</span>)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">");"</span>)&nbsp;:&nbsp;(<span style="color: rgb(255, 0, 255);">"this("</span>&nbsp;+&nbsp;argus.join(<span style="color: rgb(255, 0, 255);">","</span>)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">");"</span>))); <br>
&nbsp;<span style="color: rgb(0, 0, 255);">return</span>&nbsp;r; <br>
        }; <br>
        Function.prototype.call&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">function</span>&nbsp;(obj)&nbsp;{ <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;argu&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">Array</span>(); <br>
&nbsp;for&nbsp;(<span style="color: rgb(0, 0, 255);">var</span>&nbsp;i=1;i&lt;arguments.length;i++) <br>
&nbsp;&nbsp;argu[i-1]&nbsp;=&nbsp;arguments[i]; <br>
&nbsp;<span style="color: rgb(0, 0, 255);">return</span>&nbsp;<span style="color: rgb(0, 0, 255);">this</span></font></font>.apply(obj,&nbsp;argu); <br>
        };&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </div>
      <p align="left"><br>
        <font size="2"><strong>//下载文件</strong></font> </p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left"><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 0, 255);">function</span>&nbsp;DownURL(strRemoteURL,strLocalURL) <br>
        { <br>
&nbsp;try <br>
&nbsp;{ <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;xmlHTTP=<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">ActiveXObject</span>(<span style="color: rgb(255, 0, 255);">"Microsoft.XMLHTTP"</span>); <br>
&nbsp;&nbsp;xmlHTTP.open(<span style="color: rgb(255, 0, 255);">"Get"</span>,strRemoteURL,<span style="color: rgb(0, 0, 255);">false</span>); <br>
&nbsp;&nbsp;xmlHTTP.send(); <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;adodbStream=<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">ActiveXObject</span>(<span style="color: rgb(255, 0, 255);">"ADODB.Stream"</span>); <br>
&nbsp;&nbsp;adodbStream.Type=1;<span style="color: rgb(0, 128, 0);">//1=adTypeBinary </span><br>
&nbsp;&nbsp;adodbStream.Open(); <br>
&nbsp;&nbsp;adodbStream.write(xmlHTTP.responseBody); <br>
&nbsp;&nbsp;adodbStream.SaveToFile(strLocalURL,2); <br>
&nbsp;&nbsp;adodbStream.Close(); <br>
&nbsp;&nbsp;adodbStream=<span style="color: rgb(0, 0, 255);">null</span>; <br>
&nbsp;&nbsp;xmlHTTP=<span style="color: rgb(0, 0, 255);">null</span>; <br>
&nbsp;&nbsp; <br>
&nbsp;} <br>
&nbsp;<span style="color: rgb(0, 0, 255);">catch</span>(e) <br>
&nbsp;{ <br>
&nbsp;&nbsp;window.confirm(<span style="color: rgb(255, 0, 255);">"下载URL出错!"</span>); <br>
&nbsp;} <br>
&nbsp;<span style="color: rgb(0, 128, 0);">//window.confirm(<span style="color: rgb(255, 0, 255);">"下载完成."</span>); </span><br>
        </font></font>} </div>
      <p align="left"><br>
        <font size="2"><strong>//检验连接是否有效</strong> </font></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left"><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 0, 255);">function</span>&nbsp;getXML(URL)&nbsp; <br>
        { <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;xmlhttp&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">ActiveXObject</span>(<span style="color: rgb(255, 0, 255);">"microsoft.xmlhttp"</span>); <br>
&nbsp;xmlhttp.Open(<span style="color: rgb(255, 0, 255);">"GET"</span>,URL,&nbsp;<span style="color: rgb(0, 0, 255);">false</span>);&nbsp; <br>
&nbsp;try <br>
&nbsp;{&nbsp; <br>
&nbsp;&nbsp;xmlhttp.Send(); <br>
&nbsp;} <br>
&nbsp;<span style="color: rgb(0, 0, 255);">catch</span>(e){} <br>
&nbsp;<span style="color: rgb(0, 0, 255);">finally</span>&nbsp; <br>
&nbsp;{ <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;result&nbsp;=&nbsp;xmlhttp.responseText; <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>(result)&nbsp; <br>
&nbsp;&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>(xmlhttp.Status==200) <br>
&nbsp;&nbsp;&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">return</span>(<span style="color: rgb(0, 0, 255);">true</span>); <br>
&nbsp;&nbsp;&nbsp;} <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">else</span>&nbsp; <br>
&nbsp;&nbsp;&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">return</span>(<span style="color: rgb(0, 0, 255);">false</span>); <br>
&nbsp;&nbsp;&nbsp;} <br>
&nbsp;&nbsp;} <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">else</span>&nbsp; <br>
&nbsp;&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">return</span>(<span style="color: rgb(0, 0, 255);">false</span></font></font>); <br>
&nbsp;&nbsp;} <br>
&nbsp;} <br>
        } </div>
      <p align="left"><font size="2"><strong>//POST代替FORM</strong></font><font size="2"> </font></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;SCRIPT&nbsp;language=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"VBScript"</span>&gt; <br>
        Function&nbsp;URLEncoding(vstrIn) <br>
&nbsp;&nbsp;&nbsp;&nbsp;strReturn&nbsp;=&nbsp;<span style="color: rgb(255, 0, 255);">""</span> <br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;i&nbsp;=&nbsp;1&nbsp;To&nbsp;Len(vstrIn) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ThisChr&nbsp;=&nbsp;Mid(vStrIn,i,1) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;Abs(Asc(ThisChr))&nbsp;&lt;&nbsp;&amp;HFF&nbsp;Then <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strReturn&nbsp;=&nbsp;strReturn&nbsp;&amp;&nbsp;ThisChr <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;innerCode&nbsp;=&nbsp;Asc(ThisChr) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;innerCode&nbsp;&lt;&nbsp;0&nbsp;Then <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;innerCode&nbsp;=&nbsp;innerCode&nbsp;+&nbsp;&amp;H10000 <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hight8&nbsp;=&nbsp;(innerCode&nbsp;&nbsp;And&nbsp;&amp;HFF00)\&nbsp;&amp;HFF <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Low8&nbsp;=&nbsp;innerCode&nbsp;And&nbsp;&amp;HFF <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strReturn&nbsp;=&nbsp;strReturn&nbsp;&amp;&nbsp;<span style="color: rgb(255, 0, 255);">"%"</span>&nbsp;&amp;&nbsp;Hex(Hight8)&nbsp;&amp;&nbsp;&nbsp;<span style="color: rgb(255, 0, 255);">"%"</span>&nbsp;&amp;&nbsp;Hex(Low8) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If <br>
&nbsp;&nbsp;&nbsp;&nbsp;Next <br>
&nbsp;&nbsp;&nbsp;&nbsp;URLEncoding&nbsp;=&nbsp;strReturn <br>
        End&nbsp;Function <br>
        Function&nbsp;bytes2BSTR(vIn) <br>
&nbsp;&nbsp;&nbsp;&nbsp;strReturn&nbsp;=&nbsp;<span style="color: rgb(255, 0, 255);">""</span> <br>
&nbsp;&nbsp;&nbsp;&nbsp;For&nbsp;i&nbsp;=&nbsp;1&nbsp;To&nbsp;LenB(vIn) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ThisCharCode&nbsp;=&nbsp;AscB(MidB(vIn,i,1)) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If&nbsp;ThisCharCode&nbsp;&lt;&nbsp;&amp;H80&nbsp;Then <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strReturn&nbsp;=&nbsp;strReturn&nbsp;&amp;&nbsp;Chr(ThisCharCode) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NextCharCode&nbsp;=&nbsp;AscB(MidB(vIn,i+1,1)) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strReturn&nbsp;=&nbsp;strReturn&nbsp;&amp;&nbsp;Chr(CLng(ThisCharCode)&nbsp;*&nbsp;&amp;H100&nbsp;+&nbsp;CInt(NextCharCode)) <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;i&nbsp;+&nbsp;1 <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End&nbsp;If <br>
&nbsp;&nbsp;&nbsp;&nbsp;Next <br>
&nbsp;&nbsp;&nbsp;&nbsp;bytes2BSTR&nbsp;=&nbsp;strReturn <br>
        End&nbsp;Function <br>
        dim&nbsp;strA,oReq <br>
        strA&nbsp;=&nbsp;URLEncoding(<span style="color: rgb(255, 0, 255);">"submit1=Submit&amp;text1=中文"</span>) <br>
        set&nbsp;oReq&nbsp;=&nbsp;CreateObject(<span style="color: rgb(255, 0, 255);">"MSXML2.XMLHTTP"</span>) <br>
        oReq.open&nbsp;<span style="color: rgb(255, 0, 255);">"POST"</span>,<span style="color: rgb(255, 0, 255);">"http:<span style="color: rgb(0, 128, 0);">//ServerName/VDir/TstResult.asp"</span>,false </span><br>
        oReq.setRequestHeader&nbsp;<span style="color: rgb(255, 0, 255);">"Content-Length"</span>,Len(strA) <br>
        oReq.setRequestHeader&nbsp;<span style="color: rgb(255, 0, 255);">"CONTENT-TYPE"</span>,<span style="color: rgb(255, 0, 255);">"application/x-www-form-urlencoded"</span></font></font> <br>
        oReq.send&nbsp;strA <br>
        msgbox&nbsp;bytes2BSTR(oReq.responseBody) <br>
&lt;/SCRIPT&gt; </div>
      <p align="left">//readystate是xmlhttp返回数据的进度，0=载入中,1=未初始化,2=已载入,3=运行中,4=完成</p>
      <p align="left"><font size="2"><strong>//组件是否安装</strong> <br>
        isComponentInstalled("", "componentID")) </font></p>
      <p align="left"><font size="2"><strong>//检查网页是否存在</strong> <br>
        </font>
      <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left"><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 0, 255);">function</span>&nbsp;CheckURL(URL) <br>
        { <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;xmlhttp&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">ActiveXObject</span>(<span style="color: rgb(255, 0, 255);">"Microsoft.XMLHTTP"</span>); <br>
&nbsp;&nbsp;xmlhttp.Open(<span style="color: rgb(255, 0, 255);">"GET"</span>,URL,&nbsp;<span style="color: rgb(0, 0, 255);">false</span>); <br>
&nbsp;&nbsp;try <br>
&nbsp;&nbsp;{&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;xmlhttp.Send();&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;result&nbsp;=&nbsp;xmlhttp.status; <br>
&nbsp;&nbsp;} <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">catch</span>(e)&nbsp;{<span style="color: rgb(0, 0, 255);">return</span>(<span style="color: rgb(0, 0, 255);">false</span>);&nbsp;} <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>(result==200) <br>
&nbsp;&nbsp;{&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">return</span>&nbsp;<span style="color: rgb(0, 0, 255);">true</span>; <br>
&nbsp;&nbsp;} <br>
&nbsp;&nbsp;xmlhttp&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">null</span>; <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">return</span>&nbsp;<span style="color: rgb(0, 0, 255);">false</span></font></font>; <br>
        } </div>
      </font>
      </p>
      <p align="left"><font size="2"><strong>//连接数据库</strong> <br>
        </font>
      <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;script&nbsp;language=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"javascript"</span>&gt; <br>
&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//用&nbsp;JavaScript&nbsp;写服务器端连接数据库的代码示例 </span><br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;conn&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">ActiveXObject</span>(<span style="color: rgb(255, 0, 255);">"ADODB.Connection"</span>); <br>
&nbsp;&nbsp;conn.Open(<span style="color: rgb(255, 0, 255);">"Provider=SQLOLEDB.1;&nbsp;Data&nbsp;Source=localhost;&nbsp;User&nbsp;ID=sa;&nbsp;"</span> <br>
&nbsp;&nbsp;&nbsp;&nbsp;+<span style="color: rgb(255, 0, 255);">"Password=;&nbsp;Initial&nbsp;Catalog=pubs"</span>); <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;rs&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">new</span>&nbsp;<span style="color: rgb(255, 0, 0);">ActiveXObject</span>(<span style="color: rgb(255, 0, 255);">"ADODB.Recordset"</span>); <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;sql=<span style="color: rgb(255, 0, 255);">"select&nbsp;*&nbsp;from&nbsp;authors"</span>; <br>
&nbsp;&nbsp;rs.open(sql,&nbsp;conn); <br>
&nbsp;shtml&nbsp;=&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;table&nbsp;width=’100%’&nbsp;border=1&gt;"</span>; <br>
&nbsp;shtml&nbsp;+=</font></font><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"&lt;tr&nbsp;bgcolor=’#f4f4f4’&gt;&lt;td&gt;au_id&lt;/td&gt;&lt;td&gt;<br>
        au_lname&lt;/td&gt;&lt;td&gt;au_fname<br>
&lt;/td&gt;&lt;td&gt;phone&lt;/td&gt;&lt;td&gt;address&lt;/td&gt;&lt;td&gt;&nbsp;city&lt;/td&gt;<br>
&lt;td&gt;state&lt;/td&gt;&lt;td&gt;zip&lt;/td&gt;&lt;/tr&gt;"</span>; <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">while</span>(!rs.EOF) <br>
&nbsp;&nbsp;{ <br>
&nbsp;shtml&nbsp;+=&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;tr&gt;&lt;td&gt;"</span>&nbsp;+&nbsp;rs(<span style="color: rgb(255, 0, 255);">"au_id"</span>)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;/td&gt;&lt;td&gt;"</span>&nbsp;+&nbsp;rs(<span style="color: rgb(255, 0, 255);">"au_lname"</span>)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;/td&gt;&lt;td&gt;"</span>&nbsp;+&nbsp;rs(<span style="color: rgb(255, 0, 255);">"au_fname"</span>)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;/td&gt;&lt;td&gt;"</span>&nbsp;+&nbsp;rs(<span style="color: rgb(255, 0, 255);">"phone"</span>)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;/td&gt;&lt;td&gt;"</span>&nbsp;+&nbsp;rs(<span style="color: rgb(255, 0, 255);">"address"</span>)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;/td&gt;&lt;td&gt;"</span>&nbsp;+&nbsp;rs(<span style="color: rgb(255, 0, 255);">"city"</span>)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;/td&gt;&lt;td&gt;"</span>&nbsp;+&nbsp;rs(<span style="color: rgb(255, 0, 255);">"state"</span>)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;/td&gt;&lt;td&gt;"</span>&nbsp;+&nbsp;rs(<span style="color: rgb(255, 0, 255);">"zip"</span>)&nbsp;+&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;/td&gt;&lt;/tr&gt;"</span>; <br>
&nbsp;rs.moveNext; <br>
&nbsp;&nbsp;} <br>
&nbsp;&nbsp;shtml&nbsp;+=&nbsp;<span style="color: rgb(255, 0, 255);">"&lt;/table&gt;"</span>; <br>
&nbsp;&nbsp;document.write(shtml); <br>
&nbsp;&nbsp;rs.close();&nbsp; <br>
&nbsp;&nbsp;rs&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">null</span>;&nbsp; <br>
&nbsp;&nbsp;conn.close();&nbsp; <br>
&nbsp;&nbsp;conn&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">null</span></font></font>; <br>
&lt;/script&gt; </div>
      <p align="left"><strong>//使用数据岛</strong> <br>
      </p>
      <font size="2">
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;html&gt; <br>
&lt;body&gt; <br>
        srno：&lt;input&nbsp;type=text&nbsp;datasrc=#xmldate&nbsp;DataFLD=srno&nbsp;size=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"76"</span>&gt;&lt;BR&gt; <br>
        times：&lt;input&nbsp;type=text&nbsp;datasrc=#xmldate&nbsp;DataFLD=times&nbsp;size=<span style="color: rgb(255, 0, 255);">"76"</span>&gt;&lt;BR&gt; <br>
&lt;input&nbsp;id=<span style="color: rgb(255, 0, 255);">"first"</span>&nbsp;TYPE=button&nbsp;value=<span style="color: rgb(255, 0, 255);">"&lt;&lt;　第一条记录"</span>&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"xmldate.recordset.moveFirst()"</span>&gt; <br>
&lt;input&nbsp;id=<span style="color: rgb(255, 0, 255);">"prev"</span>&nbsp;TYPE=button&nbsp;value=<span style="color: rgb(255, 0, 255);">"&lt;上一条记录"</span>&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"xmldate.recordset.movePrevious()"</span>&gt;&nbsp;&nbsp; <br>
&lt;input&nbsp;id=<span style="color: rgb(255, 0, 255);">"next"</span>&nbsp;TYPE=button&nbsp;value=<span style="color: rgb(255, 0, 255);">"下一条记录&gt;"</span>&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"xmldate.recordset.moveNext()"</span>&gt;&nbsp;&nbsp; <br>
&lt;input&nbsp;id=<span style="color: rgb(255, 0, 255);">"last"</span>&nbsp;TYPE=button&nbsp;value=<span style="color: rgb(255, 0, 255);">"最后一条记录&gt;&gt;"</span>&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"xmldate.recordset.moveLast()"</span>&gt;&nbsp;&nbsp;&nbsp; <br>
&lt;input&nbsp;id=<span style="color: rgb(255, 0, 255);">"Add"</span>&nbsp;TYPE=button&nbsp;value=<span style="color: rgb(255, 0, 255);">"添加新记录"</span>&nbsp;onclick=<span style="color: rgb(255, 0, 255);">"xmldate.recordset.addNew()"</span>&gt;&nbsp;&nbsp; <br>
        <br>
&lt;XML&nbsp;ID=<span style="color: rgb(255, 0, 255);">"xmldate"</span>&gt; <br>
&lt;infolist&gt; <br>
&lt;info&nbsp;&gt;&lt;srno&gt;20041025-01&lt;/srno&gt;&lt;times&gt;<span style="color: rgb(0, 0, 255);">null</span></font></font>&lt;/times&gt;&lt;/info&gt; <br>
&lt;info&nbsp;&gt;&lt;srno&gt;20041101-09&lt;/srno&gt;&lt;times&gt;2004年10月1*2点22分0秒&lt;/times&gt;&lt;/info&gt; <br>
&lt;/infolist&gt; <br>
&lt;/XML&gt; <br>
&lt;/body&gt; <br>
&lt;/html&gt; </div>
      <p align="left"><strong>//获得参数</strong><font size="2"> </font></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;body&gt; <br>
&lt;a&nbsp;href=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"javascript:location.href=location.href&nbsp;+&nbsp;’?a=1&amp;b=2’"</span>&gt;search&lt;/a&gt; <br>
&lt;script&nbsp;language=<span style="color: rgb(255, 0, 255);">"JavaScript"</span>&gt; <br>
&lt;!-- <br>
        <span style="color: rgb(0, 0, 255);">var</span>&nbsp;a&nbsp;=&nbsp;location.search.substr(1); <br>
        <span style="color: rgb(0, 0, 255);">if</span>(a.length&gt;0) <br>
        { <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;re&nbsp;=&nbsp;/([^&amp;]*?)\=([^&amp;]*)/g <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;s&nbsp;=&nbsp;a.match(re); <br>
&nbsp;for(<span style="color: rgb(0, 0, 255);">var</span>&nbsp;i=&nbsp;0;i&lt;s.length;i++) <br>
&nbsp;{ <br>
&nbsp;&nbsp;alert(s[i]); <br>
&nbsp;&nbsp;alert(s[i].split(<span style="color: rgb(255, 0, 255);">"="</span>)[1]); <br>
&nbsp;} <br>
        } <br>
        <span style="color: rgb(0, 128, 0);">//--&gt; </span><br>
        </font></font>&lt;/script&gt; <br>
&lt;/body&gt; </div>
      <p align="left"><strong>//可编辑SELECT</strong><font size="2"> </font></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;input&nbsp;type=text&nbsp;name=re_name&nbsp;style=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"width:100px;height:21px;font-size:10pt;"</span>&gt;&lt;span&nbsp;style=<span style="color: rgb(255, 0, 255);">"width:18px;border:0px&nbsp;solid&nbsp;red;"</span>&gt;&lt;select&nbsp;<br>
        name=<span style="color: rgb(255, 0, 255);">"r00"</span>&nbsp;style=<span style="color: rgb(255, 0, 255);">"margin-left:-100px;width:118px;&nbsp;background-color:#FFEEEE;"</span>&nbsp;onChange=<span style="color: rgb(255, 0, 255);">"document.all.re_name.value=this.value;"</span>&gt; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&nbsp;value=<span style="color: rgb(255, 0, 255);">"1"</span>&gt;11111111&lt;option&gt; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&nbsp;value=<span style="color: rgb(255, 0, 255);">"2"</span>&gt;222222&lt;/option&gt; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;option&nbsp;value=<span style="color: rgb(255, 0, 255);">"3"</span></font></font>&gt;333333&lt;/option&gt; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/select&gt; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;</div>
      </font></font>
      <!-- END TIDE_LOG_LIST -->
      <!-- BEGIN TIDE_LOG_LIST -->
                      <h1 align="left">&nbsp;</h1>
                      <h1 align="left"><span class="td2">[ASP.NET2.0]ASP.NET中在线用户统计</span></h1>
                      </font><p align="left">&nbsp;</p>
                      <p align="left"><font size="2">作者：追风&nbsp;来自:网络</font></p>
                      <font size="2"><p align="left"> 统计在线用户的作用不言而喻，就是为了网站管理者可以知道当前用户的多少，然后根据用户数量来观察服务器或者程序的性能，从而可以直观的了解到网站的吸引力 或者网站程序的效率。现在，我们就介绍一个简单明了的方法来统计在线用户的多少，该方法的特点就是充分的利用了ASP.NET的特点，结合 global.asax文件，用Application和Session巧妙的实现在线用户的统计，由于程序中只用到一个Application，所以， 程序占用系统资源几乎可以忽略不及，当然，这也是网站管理者最关心的问题之一。</p>
                      <p align="left"> 一、用户显示页面的使用</p>
                      <p align="left">&nbsp;首先，我们来看看怎样现实当前网站的访问用户数量，程序代码如下：</p>
                      <p align="left">&lt;%@ Page Language="c#" debug="true" %&gt;<br>
&lt;html&gt;<br>
&lt;head&gt;<br>
&lt;SCRIPT LANGUAGE="c#" RUNAT="server"&gt;<br>
  private void Page_Load(object sender, System.EventArgs e)<br>
  {&nbsp;&nbsp; <br>
  Visitors.Text = "本站当前有：&nbsp; &lt;b&gt;" + Application["user_sessions"].ToString() + "" + "&lt;/b&gt;&nbsp; 位访问者 !";<br>
  }<br>
&lt;title&gt;在线用户&lt;/title&gt;<br>
&lt;/head&gt;<br>
&lt;body&gt;<br>
&lt;asp:label id="visitors" runat="server" /&gt;&lt;br&gt;<br>
&lt;/body&gt;<br>
&lt;/html&gt;</p>
                      <p align="left"> &nbsp; 可以看出，以上的程序特别简单，就是调用Application。当然，我们不必要专门设计一个页面来显示在线用户数量，在网站的任何页面，我们都可以直 接调用Application("user_sessions").ToString()来显示当前用户数量。</p>
                      <p align="left"> 二、global.asax文件实现</p>
                      <p align="left"> global.asax文件的作用我们自不必说，现在，我们直接来看统计当前在线用户数量如何实现：</p>
                      <p align="left">&lt;script language="c#" runat="Server"&gt;<br>
                        protected void Application_Start(Object sender, EventArgs e)<br>
                        {<br>
&nbsp;Application["user_sessions"] = 0;<br>
}<br>
protected void Session_Start(Object sender, EventArgs e)<br>
{<br>
&nbsp;Application.Lock();<br>
&nbsp;Application["user_sessions"] = (int)Application["user_sessions"] + 1;<br>
&nbsp;Application.Unlock();<br>
}<br>
protected void Session_End(Object sender, EventArgs e)<br>
{<br>
&nbsp;Application.Lock();<br>
&nbsp;Application["user_sessions"] = (int)Application["user_sessions"] - 1;<br>
&nbsp;Application.Unlock();<br>
}<br>
&lt;/script&gt;</p>
                      </font><p align="left"><font size="2">以上代码很容易理解，当网站开始服务的时候（Application开始的时候），程序设置Application["user_sessions"]为 零，然后，当用户进入网站（Session开始的时候）的时候，锁定Application，然后，将application ("user_sessions")加一，用户退出网站的时候，application("user_sessions")减一。这样，就很巧妙的实现了 在线用户的统计。</font></p>
                      <p align="left"><font size="2"> 三、一点讨论</font></p>
                      <p align="left"><font size="2">&nbsp;以上的统计，简明扼要，程序很容易实现。但是，如果我们仔细考虑，发现该方法有一定的局限，统 计出来的在线用户数量可能稍微有点误差。因为我们在以上程序中，是根据用户建立和退出会话（Session）来实现在线人数的加减的，而我们知道，如果用 户没有关闭浏览器，而进入另外一个网站，那么，这个会话在一定的时间内是不会结束的，这个时间我们可以通过TimeOut来设置，一般的，我们设置为20 分钟。所以，在用户数量统计上面，还是存在一点误差的。</font></p>
                      <p align="left"><font size="2"> 另外，我们知道，在ASP中，如果用户将浏览器上面的Cookies设置为“禁用”，那 么，Session就不能再被传递，显然，这样设置让以上的统计程序无能为力。不过，在ASP.NET中我们有解决方法，在config.web文件中， 我们将&lt;sessionstate cookieless="false" /&gt;设置为true就可以了，也就说，不使用Cookies也可以传递Session。这样，我们的程序就可以在不同的访问者环境中顺利运行。</font></p>
                      <p align="left"><font size="2"> 四、总结</font></p>
                      <p align="left"><font size="2">&nbsp;以上的统计程序特别简单，但是，细节的东西我们不一定想到，这也是我们在编程中需要多一点考虑的。&nbsp; </font></p>
                      <font size="2">
      <!-- END TIDE_LOG_LIST -->
      <!-- BEGIN TIDE_LOG_LIST -->

                      <h2 align="left">&nbsp;</h2>
                      <h1 align="left"><span class="td2">ASP.NET验证控件祥解</span></h1>
                      <p align="left"> Author:&nbsp;From:Internet<br>
                      </p>
                      <p align="left">　　ASP.NET是微软推出的下一代WEB开发工具，其强大的功能立即吸引了一大批WEB开发者投入它的靡下。现在，我们来看看ASP.NET的验证控件，感受ASP.NET的强大功能同时方便我们现在的WEB开发。</p>
                      <p align="left"> 　 　WEB开发者特别是ASP开发者，一直对数据验证比较恼火，当你好不容易写出数据提交程序的主体以后，还不得不花大把时间去验证用户的每一个输入是否合 法。如果开发者熟悉JavaScript或者VBScript，可以用这些脚本语言轻松实现验证，但是又要考虑用户浏览器是否支持这些脚本语言；如果对这 些不是很熟悉或者想支持所有用户浏览器，就必须在ASP程序里面验证，但是这样验证就会增加服务器负担。现在，有了ASP.NET，你不但可以轻松的实现 对用户输入的验证，而且，还可以选择验证在服务器端进行还是在客户端进行，再也不必考虑那么多了，程序员们可以将重要精力放在主程序的设计上了。</p>
                      <p align="left">asp.net公有六种验证控件，分别如下：　</p>
                      </font><p align="left"><font size="2">控件名 功能描叙 </font></p>
                      <p align="left"><font size="2"> RequiredFieldValidator（必须字段验证） 用于检查是否有输入值 <br>
                      CompareValidator（比较验证） 按设定比较两个输入 <br>
                      RangeValidator（范围验证） 输入是否在指定范围 <br>
                      RegularExpressionValidator（正则表达式验证） 正则表达式验证控件 <br>
                      CustomValidator（自定义验证） 自定义验证控件 <br>
                      ValidationSummary（验证总结） 总结验证结果 </font></p>
                      <font size="2"><p align="left">&nbsp;</p>
                      <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tbody>
          <tr>
            <td><table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td class="td1" align="center" height="215" valign="top"><br>
                      <p align="left"><br>
&nbsp;</p>
                      <p align="left">&nbsp;</p>
                      <p align="left"><br>
&nbsp;</p>
                      <p align="left">下面，我们来看这些控件的使用 <br>
                        　　 一：RequiredFieldValidator（必须字段验证）的使用<br>
                        　　 RequiredFieldValidator控件使用的标准代码如下：<br>
                        ＜ASP:RequiredFieldValidator id="Validator_Name" Runat="Server"<br>
                        　　　 ControlToValidate="要检查的控件名"<br>
                        　　　 ErrorMessage="出错信息"<br>
                        　　　 Display="Static|Dymatic|None"<br>
                        　 ＞<br>
                        　 占位符<br>
                        ＜/ASP: RequiredFieldValidator ＞</p>
                      <p align="left"><br>
&nbsp;</p>
                      <p align="left">在以上标准代码中：<br>
                        　　 ControlToValidate：表示要进行检查控件ID；<br>
                        　　 ErrorMessage：表示当检查不合法时，出现的错误信息；<br>
                        　　 Display：错误信息的显示方式；Static表示控件的错误信息在页面中占有肯定位置；Dymatic表示控件错误信息出现时才占用页面控件；None表示错误出现时不显示，但是可以在ValidatorSummary中显示；<br>
                        　　 占位符：表示Display为Static时，错误信息占有"占位符"那么大的页面空间；</p>
                      <p align="left"><br>
&nbsp;</p>
                      <p align="left">　　现在，让我们看一个实例：<br>
                        ＜ASP:TextBox id="txtName" RunAt="Server"/＞<br>
                        ＜ASP:RequiredFieldValidator id="Validator1" Runat="Server"<br>
                        　　　 ControlToValidate="txtName"<br>
                        　　　 ErrorMessage="姓名必须输入"<br>
                        　　　 Display="Static"＞<br>
                        　　 *姓名必须输入<br>
                        ＜/ASP:RequiredFieldValidator＞</p>
                      <p align="left"><br>
&nbsp;</p>
                      <p align="left">在以上例子中，检查txtname控件是否有输入，如果没有，显示错误信息"姓名必须输入"。是不是很简单？<br>
                        注意：以上代码和下面其他控件的代码最好放入Form中，和ASP中不一样的是，Form最好写为这样：<br>
                        ＜Form RunAt="Server"＞<br>
                        其他代码<br>
                        ＜/Form＞　 <br>
                        这样，Form在服务器端执行，提交才会有效；</p>
                      <p align="left"><br>
&nbsp;</p>
                      <p align="left">二：comparevalidator（比较验证）控件<br>
                        　　 比较控件比较两个控件的输入是否符合程序设定，大家不要把比较仅仅理解为"相等"，尽管相等是用的最多的，其实，这里的比较包括范围很广，大家看标准代码就会明白。<br>
                        　　 比较控件的标准代码如下：<br>
                        ＜ASP:CompareValidator id="Validator_ID" RunAt="Server"<br>
                        ControlToValidate="要验证的控件ID"<br>
                        errorMessage="错误信息"<br>
                        ControlToCompare="要比较的控件ID"<br>
                        type="String|Integer|Double|DateTime|Currency"<br>
                        operator="Equal|NotEqual|GreaterThan|GreaterTanEqual|LessThan|LessThanEqual|DataTypeCheck"<br>
                        Display="Static|Dymatic|None"<br>
                        ＞<br>
                        占位符<br>
                        ＜/ASP:CompareValidator＞</p>
                      <p align="left"><br>
&nbsp;</p>
                      <p align="left">在以上标准代码中：<br>
                        　　 Type表示要比较的控件的数据类型；<br>
                        　　 Operator表示比较操作（也就是刚才说的为什么比较不仅仅是"相等"的原因），这里，比较有7种方式；<br>
                        　　 其他属性和RequiredFieldValidator相同；<br>
                        　 　在这里，要注意ControlToValidate和ControlToCompare的区别，如果operate为GreateThan，那么，必须 ControlToCompare大于ControlToValidate才是合法的，这下，应该明白它们两者的意义了吧？例子程序请参考 RequiredFieldValidator控件，对照标准代码自己设计。</p>
                      <p align="left"><br>
&nbsp;</p>
                      <p align="left">　　三：RangeValidator（范围验证）控件<br>
                        　　 验证输入是否在一定范围，范围用MaximumValue（最大）和MinimunVlaue来确定，标准代码如下：<br>
                        ＜ASP:RangeValidator id="Vaidator_ID" Runat="Server" <br>
                        controlToValidate="要验证的控件ID"<br>
                        type="Integer"<br>
                        MinimumValue="最小值"<br>
                        MaximumValue="最大值"<br>
                        errorMessage="错误信息"<br>
                        Display="Static|Dymatic|None"<br>
                        ＞<br>
                        占位符<br>
                        ＜/ASP:RangeValidator＞<br>
                        在以上代码中：<br>
                        　 　　 用MinimumValue和MaximumValue来界定控件输入值得范围，用type来定义控件输入值的类型。<br>
                        　　 四：RegularExpresionValidator（正则表达式）控件<br>
                        　　 正则表达式验证控件的功能非常强大，你可以自己容易构造验证方式，我们先来看看标准代码：<br>
                        ＜ASP:RegularExpressionValidator id="Validator_ID" RunAt="Server"<br>
                        ControlToValidate="要验证控件名"<br>
                        ValidationExpression="正则表达式"<br>
                        errorMessage="错误信息"<br>
                        display="Static"<br>
                        ＞<br>
                        占位符<br>
                        ＜/ASP:RegularExpressionValidator＞　 <br>
                        在以上标准代码中，ValidationExpression是重点，现在来看看它的构造：<br>
                        　　 在ValidationExpression中，不同的字符表示不同的含义：<br>
                        　　 "."表示任意字符；<br>
                        　　 "*"表示和其他表达式一起，表示容易组合；<br>
                        　　 "[A-Z]"表示任意大写字母；<br>
                        　　 "\d"表示容易一个数字；<br>
                        　　 注意，在以上表达式中，引号不包括在内；<br>
                        　　 举例：<br>
                        　　　 正则表达式：".*[A-Z]"表示数字开头的任意字符组合其后接一个大写字母。<br>
                        　　 五：ValidationSummary（验证总结）控件<br>
                        　　 该控件收集本页的所有验证错误信息，并可以将它们组织以后再显示出来。其标准代码如下：<br>
                        ＜ASP:ValidationSummary id="Validator_ID" RunAT="Server"<br>
                        HeaderText="头信息"<br>
                        ShowSummary="True|False"<br>
                        DiaplayMode="List|BulletList|SingleParagraph"<br>
                        ＞<br>
                        ＜/ASP: ValidationSummary ＞　 <br>
                        在以上标准代码中，HeadText相当于表的HeadText，DisplayMode表示错误信息显示方式：List相当于HTML中的＜BR＞；BulletList相当于HTML中的＜LI＞；SingleParegraph表示错误信息之间不作如何分割；<br>
                        　　 六：CustomValidator（自定义验证）控件]<br>
                        　　 该控件用自定义的函数界定验证方式，其标准代码如下：　<br>
                        ＜ASP:CustomValidator id="Validator_ID" RunAt="Server"<br>
                        controlToValidate="要验证的控件"<br>
                        onServerValidateFunction="验证函数"<br>
                        errorMessage="错误信息"<br>
                        Display="Static|Dymatic|None"<br>
                        ＞<br>
                        占位符<br>
                        ＜/ASP: CustomValidator ＞<br>
                        以上代码中，用户必须定义一个函数来验证输入。</p>
                      <p align="left"><br>
&nbsp;</p>
                      <p align="left">　　七：总结<br>
                        　　 ASP.NET验证控件已经介绍完了，大家可以发现它们的功能很强大，再也不要为验证而烦恼了。当然，以上介绍并不是特别详细，细微的地方，还请大家自己阅读微软的SDK。</p></td>
                  </tr>
                </tbody>
              </table></td>
          </tr>
        </tbody>
      </table>
      <!-- END TIDE_LOG_LIST -->
      <!-- BEGIN TIDE_LOG_LIST -->
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tbody>
          <tr>
            <td><table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img alt="" src="js大全_files/001_r6_c12.jpg" name="n001_r6_c12" border="0" height="26" width="34"></td>
                    <td class="td2" background="js大全_files/001_r6_c16.htm" width="69%"><img src="js大全_files/1.gif" alt="" border="0"><a class="td1" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;LogClassID=152">[ASP.NET2.0]</a><a class="td1" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=605">异地保存session</a></td>
                    <td width="2%"><img alt="" src="js大全_files/001_r6_c18.jpg" name="n001_r6_c18" border="0" height="26" width="17"></td>
                    <td class="td1" align="center" background="js大全_files/001_r6_c19.htm" width="19%">2006年10月4日</td>
                    <td align="right" background="js大全_files/001_r6_c19.htm" width="4%"><img alt="" src="js大全_files/001_r6_c20.jpg" name="n001_r6_c20" border="0" height="26" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table background="js大全_files/001_r8_c13.htm" border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img src="js大全_files/001_r8_c12.jpg" alt="" height="15" width="10"></td>
                    <td class="td3" align="right" width="90%"><a class="td3" href="http://13306525371.web133.com/UserInfoDetail.asp?UserID=2497" target="_blank">奕影残峰</a> <span class="date">@ 2006-10-4 18:51:03</span> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=605">阅读全文(595)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=605#c">评论(5)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;act=tb&amp;LogID=605">Trackback:(0)</a> <a href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;Date=2006-10-04#top"><img src="js大全_files/top.gif" alt="" border="0"></a></td>
                    <td align="right" width="4%"><img src="js大全_files/001_r8_c20.jpg" alt="" height="15" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td class="td1" align="center" height="215" valign="top"><br>
                      <p class="article" align="left">&lt;sessionstate <br>
                        inproc="false" <br>
                        server="localhost" <br>
                        port="42424" <br>
                        /&gt;<br>
                        是不是发现这里的Session是不是很强大啊：），把localhost改成您要的主机，Session还能在另外一台主机上保持。</p></td>
                  </tr>
                </tbody>
              </table></td>
          </tr>
        </tbody>
      </table>
      <!-- END TIDE_LOG_LIST -->
      <!-- BEGIN TIDE_LOG_LIST -->
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tbody>
          <tr>
            <td><table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img alt="" src="js大全_files/001_r6_c12.jpg" name="n001_r6_c12" border="0" height="26" width="34"></td>
                    <td class="td2" background="js大全_files/001_r6_c16.htm" width="69%"><img src="js大全_files/1.gif" alt="" border="0"><a class="td1" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;LogClassID=152">[ASP.NET2.0]</a><a class="td1" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=604">ASP.NET程序中常用的三十三种代码</a></td>
                    <td width="2%"><img alt="" src="js大全_files/001_r6_c18.jpg" name="n001_r6_c18" border="0" height="26" width="17"></td>
                    <td class="td1" align="center" background="js大全_files/001_r6_c19.htm" width="19%">2006年10月4日</td>
                    <td align="right" background="js大全_files/001_r6_c19.htm" width="4%"><img alt="" src="js大全_files/001_r6_c20.jpg" name="n001_r6_c20" border="0" height="26" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table background="js大全_files/001_r8_c13.htm" border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img src="js大全_files/001_r8_c12.jpg" alt="" height="15" width="10"></td>
                    <td class="td3" align="right" width="90%"><a class="td3" href="http://13306525371.web133.com/UserInfoDetail.asp?UserID=2497" target="_blank">奕影残峰</a> <span class="date">@ 2006-10-4 18:29:46</span> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=604">阅读全文(9715)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=604#c">评论(3885)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;act=tb&amp;LogID=604">Trackback:(0)</a> <a href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;Date=2006-10-04#top"><img src="js大全_files/top.gif" alt="" border="0"></a></td>
                    <td align="right" width="4%"><img src="js大全_files/001_r8_c20.jpg" alt="" height="15" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td class="td1" align="center" height="215" valign="top"><br>
                      <p align="left">&nbsp; <strong>1. 打开新的窗口并传送参数：</strong> <br>
                        <br>
                        　　 传送参数：<br>
                        <br>
                        <font face="新宋体"><code>response.write("＜script＞window.open(’*.aspx?id="+this.DropDownList1.SelectIndex+"&amp;id1="+...+"’)＜/script＞")</code><br>
                        </font>　　接收参数：<br>
                        <br>
                        <font face="新宋体"><code>string a = Request.QueryString("id");<br>
                        string b = Request.QueryString("id1");</code><br>
                        </font>　　<strong>2.为按钮添加对话框<br>
                        </strong><br>
                        <font face="新宋体"><code>Button1.Attributes.Add("onclick","return confirm(’确认?’)");<br>
                        button.attributes.add("onclick","if(confirm(’are you sure...?’)){return true;}else{return false;}")</code><br>
                        </font>　<strong>　3.删除表格选定记录<br>
                        </strong><br>
                        <font face="新宋体"><code>int intEmpID = (int)MyDataGrid.DataKeys[e.Item.ItemIndex];<br>
                        string deleteCmd = "DELETE from Employee where emp_id = " + intEmpID.ToString()</code><br>
                        </font>　　<strong>4.删除表格记录警告<br>
                        </strong><br>
                        <font face="新宋体"><code>private void DataGrid_ItemCreated(Object sender,DataGridItemEventArgs e)<br>
                        {<br>
                        　 switch(e.Item.ItemType)<br>
                        　 {<br>
                        　　 case ListItemType.Item :<br>
                        　　 case ListItemType.AlternatingItem :<br>
                        　　 case ListItemType.EditItem:<br>
                        　　　 TableCell myTableCell;<br>
                        　　　 myTableCell = e.Item.Cells[14];<br>
                        　　　 LinkButton myDeleteButton ;<br>
                        　　　 myDeleteButton = (LinkButton)myTableCell.Controls[0];<br>
                        　　　 myDeleteButton.Attributes.Add("onclick","return confirm(’您是否确定要删除这条信息’);");<br>
                        　　　 break;<br>
                        　　 default:<br>
                        　　　 break;<br>
                        　 }<br>
                        <br>
                        }</code><br>
                        </font>　　<strong>5.点击表格行链接另一页<br>
                        </strong><br>
                        <font face="新宋体"><code>private void grdCustomer_ItemDataBound(object sender, System.Web.UI.WebControls.DataGridItemEventArgs e)<br>
                        {<br>
                        　 //点击表格打开<br>
                        　 if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)<br>
                        　　 e.Item.Attributes.Add("onclick","window.open(’Default.aspx?id=" + e.Item.Cells[0].Text + "’);");<br>
                        }</code><br>
                        </font>　　双击表格连接到另一页<br>
                        <br>
                        　　 在itemDataBind事件中<br>
                        <br>
                        <font face="新宋体"><code>if(e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)<br>
                        {<br>
                        　 string OrderItemID =e.item.cells[1].Text;<br>
                        　 ...<br>
                        　 e.item.Attributes.Add("ondblclick", "location.href=’../ShippedGrid.aspx?id=" + OrderItemID + "’");<br>
                        }</code><br>
                        </font>　　双击表格打开新一页<br>
                        <br>
                        <font face="新宋体"><code>if(e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)<br>
                        {<br>
                        　 string OrderItemID =e.item.cells[1].Text;<br>
                        　 ...<br>
                        　 e.item.Attributes.Add("ondblclick", "open(’../ShippedGrid.aspx?id=" + OrderItemID + "’)");<br>
                        }</code><br>
                        </font>　　★特别注意：【?id=】 处不能为 【?id =】<br>
                      </p>
                      <p align="left">&nbsp;&nbsp;&nbsp;<strong> 6.表格超连接列传递参数<br>
                        </strong><br>
                        <font face="新宋体"><code>＜asp:HyperLinkColumn Target="_blank" headertext="ID号" DataTextField="id" NavigateUrl="aaa.aspx?id=’<br>
                        　 ＜%# DataBinder.Eval(Container.DataItem, "数据字段1")%＞’ &amp; name=’＜%# DataBinder.Eval(Container.DataItem, "数据字段2")%＞’ /＞</code><br>
                        </font>　　<strong>7.表格点击改变颜色<br>
                        </strong><br>
                        <font face="新宋体"><code>if (e.Item.ItemType == ListItemType.Item ||e.Item.ItemType == ListItemType.AlternatingItem)<br>
                        {<br>
                        　 e.Item.Attributes.Add("onclick","this.style.backgroundColor=’#99cc00’;<br>
                        　　　 this.style.color=’buttontext’;this.style.cursor=’default’;");<br>
                        } </code><br>
                        </font>　　写在DataGrid的_ItemDataBound里<br>
                        <br>
                        <font face="新宋体"><code>if (e.Item.ItemType == ListItemType.Item ||e.Item.ItemType == ListItemType.AlternatingItem)<br>
                        </code><br>
                        <br>
                        </font>　　<strong>8.关于日期格式<br>
                        </strong><br>
                        　　 日期格式设定<br>
                        <br>
                        <font face="新宋体"><code>DataFormatString=""</code><br>
                        </font>　　我觉得应该在itembound事件中<br>
                        <br>
                        <font face="新宋体"><code>e.items.cell["你的列"].text=DateTime.Parse(e.items.cell["你的列"].text.ToString("yyyy-MM-dd"))</code><br>
                        </font>　<strong>　9.获取错误信息并到指定页面<br>
                        </strong><br>
                        　　 不要使用Response.Redirect,而应该使用Server.Transfer<br>
                        <br>
                        　　 e.g<br>
                        <br>
                        <font face="新宋体"><code>// in global.asax<br>
                        protected void Application_Error(Object sender, EventArgs e) {<br>
                        if (Server.GetLastError() is HttpUnhandledException)<br>
                        Server.Transfer("MyErrorPage.aspx");<br>
                        <br>
                        //其余的非HttpUnhandledException异常交给ASP.NET自己处理就okay了 :)<br>
                        }</code><br>
                        </font>　　Redirect会导致post－back的产生从而丢失了错误信息，所以页面导向应该直接在服务器端执行，这样就可以在错误处理页面得到出错信息并进行相应的处理 <br>
                        <br>
                        　　 <strong>10.清空Cookie<br>
                        </strong><br>
                        <font face="新宋体"><code>Cookie.Expires=[DateTime];<br>
                        Response.Cookies("UserName").Expires = 0</code><br>
                        </font>　　<strong>11.自定义异常处理<br>
                        </strong><br>
                        <code><font face="新宋体">//自定义异常处理类 <br>
                        using System;<br>
                        using System.Diagnostics;<br>
                        <br>
                        namespace MyAppException<br>
                        {<br>
                        　 /// ＜summary＞<br>
                        　 /// 从系统异常类ApplicationException继承的应用程序异常处理类。<br>
                        　 /// 自动将异常内容记录到Windows NT/2000的应用程序日志<br>
                        　 /// ＜/summary＞<br>
                        　 public class AppException:System.ApplicationException<br>
                        　 {<br>
                        　　 public AppException()<br>
                        　　 {<br>
                        　　　 if (ApplicationConfiguration.EventLogEnabled)LogEvent("出现一个未知错误。");<br>
                        　　 }<br>
                        <br>
                        　 public AppException(string message)<br>
                        　 <br>
                        <br>
                        　 public AppException(string message,Exception innerException)<br>
                        　 {<br>
                        　　 LogEvent(message);<br>
                        　　 if (innerException != null)<br>
                        　　 <br>
                        　 }<br>
                        <br>
                        　 //日志记录类<br>
                        　 using System;<br>
                        　 using System.Configuration;<br>
                        　 using System.Diagnostics;<br>
                        　 using System.IO;<br>
                        　 using System.Text;<br>
                        　 using System.Threading;<br>
                        <br>
                        　 namespace MyEventLog<br>
                        　 {<br>
                        　　 /// ＜summary＞<br>
                        　　 /// 事件日志记录类，提供事件日志记录支持 <br>
                        　　 /// ＜remarks＞<br>
                        　　 /// 定义了4个日志记录方法 (error, warning, info, trace) <br>
                        　　 /// ＜/remarks＞<br>
                        　　 /// ＜/summary＞<br>
                        　　 public class ApplicationLog<br>
                        　　 {<br>
                        　　　 /// ＜summary＞<br>
                        　　　 /// 将错误信息记录到Win2000/NT事件日志中<br>
                        　　　 /// ＜param name="message"＞需要记录的文本信息＜/param＞<br>
                        　　　 /// ＜/summary＞<br>
                        　　　 public static void WriteError(String message)<br>
                        　　　 {<br>
                        　　　　 WriteLog(TraceLevel.Error, message);<br>
                        　　　 }<br>
                        <br>
                        　　　 /// ＜summary＞<br>
                        　　　 /// 将警告信息记录到Win2000/NT事件日志中<br>
                        　　　 /// ＜param name="message"＞需要记录的文本信息＜/param＞<br>
                        　　　 /// ＜/summary＞<br>
                        　　　 public static void WriteWarning(String message)<br>
                        　　　 {<br>
                        　　　　 WriteLog(TraceLevel.Warning, message);　　<br>
                        　　　 }<br>
                        <br>
                        　　　 /// ＜summary＞<br>
                        　　　 /// 将提示信息记录到Win2000/NT事件日志中<br>
                        　　　 /// ＜param name="message"＞需要记录的文本信息＜/param＞<br>
                        　　　 /// ＜/summary＞<br>
                        　　　 public static void WriteInfo(String message)<br>
                        　　　 {<br>
                        　　　　 WriteLog(TraceLevel.Info, message);<br>
                        　　　 }<br>
                        　　　 /// ＜summary＞<br>
                        　　　 /// 将跟踪信息记录到Win2000/NT事件日志中<br>
                        　　　 /// ＜param name="message"＞需要记录的文本信息＜/param＞<br>
                        　　　 /// ＜/summary＞<br>
                        　　　 public static void WriteTrace(String message)<br>
                        　　　 {<br>
                        　　　　 WriteLog(TraceLevel.Verbose, message);<br>
                        　　　 }<br>
                        <br>
                        　　　 /// ＜summary＞<br>
                        　　　 /// 格式化记录到事件日志的文本信息格式<br>
                        　　　 /// ＜param name="ex"＞需要格式化的异常对象＜/param＞<br>
                        　　　 /// ＜param name="catchInfo"＞异常信息标题字符串.＜/param＞<br>
                        　　　 /// ＜retvalue＞<br>
                        　　　 /// ＜para＞格式后的异常信息字符串，包括异常内容和跟踪堆栈.＜/para＞<br>
                        　　　 /// ＜/retvalue＞<br>
                        　　　 /// ＜/summary＞<br>
                        　　　 public static String FormatException(Exception ex, String catchInfo)<br>
                        　　　 {<br>
                        　　　　 StringBuilder strBuilder = new StringBuilder();<br>
                        　　　　 if (catchInfo != String.Empty)<br>
                        　　　　 <br>
                        　　　　 strBuilder.Append(ex.Message).Append("\r\n").Append(ex.StackTrace);<br>
                        　　　　 return strBuilder.ToString();<br>
                        　　　 }<br>
                        <br>
                        　　　 /// ＜summary＞<br>
                        　　　 /// 实际事件日志写入方法<br>
                        　　　 /// ＜param name="level"＞要记录信息的级别（error,warning,info,trace).＜/param＞<br>
                        　　　 /// ＜param name="messageText"＞要记录的文本.＜/param＞<br>
                        　　　 /// ＜/summary＞<br>
                        　　　 private static void WriteLog(TraceLevel level, String messageText)<br>
                        　　　 {<br>
                        　　　　 try<br>
                        　　　　 { <br>
                        　　　　　 EventLogEntryType LogEntryType;<br>
                        　　　　　 switch (level)<br>
                        　　　　　 {<br>
                        　　　　　　 case TraceLevel.Error:<br>
                        　　　　　　　 LogEntryType = EventLogEntryType.Error;<br>
                        　　　　　　　 break;<br>
                        　　　　　　 case TraceLevel.Warning:<br>
                        　　　　　　　 LogEntryType = EventLogEntryType.Warning;<br>
                        　　　　　　　 break;<br>
                        　　　　　　 case TraceLevel.Info:<br>
                        　　　　　　　 LogEntryType = EventLogEntryType.Information;<br>
                        　　　　　　　 break;<br>
                        　　　　　　 case TraceLevel.Verbose:<br>
                        　　　　　　　 LogEntryType = EventLogEntryType.SuccessAudit;<br>
                        　　　　　　　 break;<br>
                        　　　　　　 default:<br>
                        　　　　　　　 LogEntryType = EventLogEntryType.SuccessAudit;<br>
                        　　　　　　　 break;<br>
                        　　　　　 }<br>
                        <br>
                        　 　　　　EventLog eventLog = new EventLog("Application", ApplicationConfiguration.EventLogMachineName, ApplicationConfiguration.EventLogSourceName );<br>
                        　　　　　 //写入事件日志<br>
                        　　　　　 eventLog.WriteEntry(messageText, LogEntryType);<br>
                        <br>
                        　　　　 }<br>
                        　　　 catch {} //忽略任何异常<br>
                        　　 } <br>
                        　 } //class ApplicationLog<br>
                        }</font></code></p>
                      <p align="left"><code><font face="新宋体"></font></code>&nbsp;</p>
                      <code> </code>
                      <p align="left">&nbsp; <strong>12.Panel 横向滚动，纵向自动扩展<br>
                        </strong><br>
                        <font face="新宋体"><code>＜asp:panel style="overflow-x:scroll;overflow-y:auto;"＞＜/asp:panel＞</code><br>
                        </font>　　<strong>13.回车转换成Tab</strong> <br>
                        <br>
                        <font face="新宋体"><code>＜script language="javascript" for="document" event="onkeydown"＞<br>
                        　 if(event.keyCode==13 &amp;&amp; event.srcElement.type!=’button’ &amp;&amp; event.srcElement.type!=’submit’ &amp;&amp; 　　　　event.srcElement.type!=’reset’ &amp;&amp; event.srcElement.type!=’’&amp;&amp; event.srcElement.type!=’textarea’); <br>
                        　　　 event.keyCode=9;<br>
                        ＜/script＞<br>
                        <br>
                        onkeydown="if(event.keyCode==13) event.keyCode=9"<br>
                        </code><br>
                        </font>　　<strong>14.DataGrid超级连接列<br>
                        </strong><br>
                        <font face="新宋体"><code>DataNavigateUrlField="字段名" DataNavigateUrlFormatString="http://xx/inc/delete.aspx?ID="</code><br>
                        </font>　　<strong>15.DataGrid行随鼠标变色<br>
                        </strong><br>
                        <font face="新宋体"><code>private void DGzf_ItemDataBound(object sender, System.Web.UI.WebControls.DataGridItemEventArgs e)<br>
                        {<br>
                        　 if (e.Item.ItemType!=ListItemType.Header)<br>
                        　 {<br>
                        　　 e.Item.Attributes.Add( "onmouseout","this.style.backgroundColor=\""+e.Item.Style["BACKGROUND-COLOR"]+"\"");<br>
                        　　 e.Item.Attributes.Add( "onmouseover","this.style.backgroundColor=\""+ "#EFF3F7"+"\"");<br>
                        　 }<br>
                        }</code><br>
                        </font>　　<strong>16.模板列<br>
                        </strong><br>
                        <font face="新宋体"><code>＜ASP:TEMPLATECOLUMN visible="False" sortexpression="demo" headertext="ID"＞<br>
                        ＜ITEMTEMPLATE＞<br>
                        ＜ASP:LABEL text=’＜%# DataBinder.Eval(Container.DataItem, "ArticleID")%＞’ runat="server" width="80%" id="lblColumn" /＞<br>
                        ＜/ITEMTEMPLATE＞<br>
                        ＜/ASP:TEMPLATECOLUMN＞<br>
                        <br>
                        ＜ASP:TEMPLATECOLUMN headertext="选中"＞<br>
                        ＜HEADERSTYLE wrap="False" horizontalalign="Center"＞＜/HEADERSTYLE＞<br>
                        ＜ITEMTEMPLATE＞<br>
                        ＜ASP:CHECKBOX id="chkExport" runat="server" /＞<br>
                        ＜/ITEMTEMPLATE＞<br>
                        ＜EDITITEMTEMPLATE＞<br>
                        ＜ASP:CHECKBOX id="chkExportON" runat="server" enabled="true" /＞<br>
                        ＜/EDITITEMTEMPLATE＞<br>
                        ＜/ASP:TEMPLATECOLUMN＞</code><br>
                        </font>　　后台代码<br>
                        <br>
                        <font face="新宋体"><code>protected void CheckAll_CheckedChanged(object sender, System.EventArgs e)<br>
                        {<br>
                        　 //改变列的选定，实现全选或全不选。<br>
                        　 CheckBox chkExport ;<br>
                        　 if( CheckAll.Checked)<br>
                        　 {<br>
                        　　 foreach(DataGridItem oDataGridItem in MyDataGrid.Items)<br>
                        　　 {<br>
                        　　　 chkExport = (CheckBox)oDataGridItem.FindControl("chkExport");<br>
                        　　　 chkExport.Checked = true;<br>
                        　　 }<br>
                        　 }<br>
                        　 else<br>
                        　 {<br>
                        　　 foreach(DataGridItem oDataGridItem in MyDataGrid.Items)<br>
                        　　 {<br>
                        　　　 chkExport = (CheckBox)oDataGridItem.FindControl("chkExport");<br>
                        　　　 chkExport.Checked = false;<br>
                        　　 }<br>
                        　 }<br>
                        }</code><br>
                        </font>　　<strong>17.数字格式化<br>
                        </strong><br>
                        　　 【＜%#Container.DataItem("price")%＞的结果是500.0000，怎样格式化为500.00?】<br>
                        <br>
                        <code><font face="新宋体">＜%#Container.DataItem("price","")%＞<br>
                        <br>
                        int i=123456;<br>
                        string s=i.ToString("###,###.00");</font></code></p>
                      <p align="left"><code></code>&nbsp;</p>
                      <p align="left"><code><strong>18.日期格式化<br>
                        <br>
                        </strong>　　【aspx页面内：＜%# DataBinder.Eval(Container.DataItem,"Company_Ureg_Date")%＞<br>
                        <br>
                        　　 显示为： 2004-8-11 19:44:28<br>
                        <br>
                        　　 我只想要：2004-8-11 】<br>
                        <br>
                        <font face="新宋体"><code>＜%# DataBinder.Eval(Container.DataItem,"Company_Ureg_Date","")%＞</code><br>
                        </font>　　应该如何改？<br>
                        <br>
                        　　 【格式化日期】<br>
                        <br>
                        　　 取出来,一般是object((DateTime)objectFromDB).ToString("yyyy-MM-dd");<br>
                        <br>
                        　　 【日期的验证表达式】<br>
                        <br>
                        　　 A.以下正确的输入格式： [2004-2-29], [2004-02-29 10:29:39 pm], [2004/12/31] <br>
                        <br>
                        <font face="新宋体"><code>^((\d(([02468][048])|([13579][26]))[\-\/\s]?((((0?[13578])|(1[02]))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\-\/\s]?((0?[1-9])|([1-2][0-9])))))|(\d(([02468][1235679])|([13579][01345789]))[\-\/\s]?((((0?[13578])|(1[02]))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\-\/\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\-\/\s]?((0?[1-9])|(1[0-9])|(2[0-8]))))))(\s(((0?[1-9])|(1[0-2]))\:([0-5][0-9])((\s)|(\:([0-5][0-9])\s))([AM|PM|am|pm])))?$</code><br>
                        </font>　　B.以下正确的输入格式：[0001-12-31], [9999 09 30], [2002/03/03] <br>
                        <br>
                        <font face="新宋体"><code>^\d[\-\/\s]?((((0[13578])|(1[02]))[\-\/\s]?(([0-2][0-9])|(3[01])))|(((0[469])|(11))[\-\/\s]?(([0-2][0-9])|(30)))|(02[\-\/\s]?[0-2][0-9]))$ </code><br>
                        </font>　　【大小写转换】<br>
                        <br>
                        <font face="新宋体"><code>HttpUtility.HtmlEncode(string);<br>
                        HttpUtility.HtmlDecode(string)</code><br>
                        </font>　　<strong>19.如何设定全局变量<br>
                        </strong><br>
                        　　 Global.asax中<br>
                        <br>
                        　　 Application_Start()事件中<br>
                        <br>
                        　　 添加Application[属性名] ＝ xxx;<br>
                        <br>
                        　　 就是你的全局变量<br>
                        <br>
                        　　 <strong>20.怎样作到HyperLinkColumn生成的连接后，点击连接，打开新窗口？</strong><br>
                        <br>
                        　　 HyperLinkColumn有个属性Target,将器值设置成"_blank"即可.(Target="_blank")<br>
                        <br>
                        　　 【ASPNETMENU】点击菜单项弹出新窗口<br>
                        <br>
                        　　 在你的menuData.xml文件的菜单项中加入URLTarget="_blank"，如：<br>
                        <br>
                        <font face="新宋体"><code>＜?xml version="1.0" encoding="GB2312"?＞<br>
                        ＜MenuData ImagesBaseURL="images/"＞ <br>
                        ＜MenuGroup＞<br>
                        ＜MenuItem Label="内参信息" URL="Infomation.aspx" ＞<br>
                        ＜MenuGroup ID="BBC"＞<br>
                        ＜MenuItem Label="公告信息" URL="Infomation.aspx" URLTarget="_blank" LeftIcon="file.gif"/＞<br>
                        ＜MenuItem Label="编制信息简报" URL="NewInfo.aspx" LeftIcon="file.gif" /＞<br>
                        ......</code><br>
                        </font>　　最好将你的aspnetmenu升级到1.2版<br>
                        <br>
                        　　 <strong>21.读取DataGrid控件TextBox值<br>
                        </strong><br>
                        <font face="新宋体"><code>foreach(DataGrid dgi in yourDataGrid.Items)<br>
                        {<br>
                        　 TextBox tb = (TextBox)dgi.FindControl("yourTextBoxId");<br>
                        　 tb.Text....<br>
                        }</code><br>
                        </font>　　<strong>23.在DataGrid中有3个模板列包含Textbox分别为 DG_ShuLiang (数量) DG_DanJian(单价) DG_JinE(金额)分别在5.6.7列，要求在录入数量及单价的时候自动算出金额即</strong>:数量*单价=金额还要求录入时限制为 数值型.我如何用客户端脚本实现这个功能?<br>
                        <br>
                        　　 〖思归〗<br>
                        <br>
                        <code><font face="新宋体">＜asp:TemplateColumn HeaderText="数量"＞ <br>
                        ＜ItemTemplate＞<br>
                        ＜asp:TextBox id="ShuLiang" runat=’server’ Text=’＜%# DataBinder.Eval(Container.DataItem,"DG_ShuLiang")%＞’ <br>
                        onkeyup="javascript:DoCal()"<br>
                        /＞<br>
                        <br>
                        ＜asp:RegularExpressionValidator id="revS" runat="server" ControlToValidate="ShuLiang" ErrorMessage="must be integer" ValidationExpression="^\d+$" /＞<br>
                        ＜/ItemTemplate＞<br>
                        ＜/asp:TemplateColumn＞<br>
                        <br>
                        ＜asp:TemplateColumn HeaderText="单价"＞ <br>
                        ＜ItemTemplate＞<br>
                        ＜asp:TextBox id="DanJian" runat=’server’ Text=’＜%# DataBinder.Eval(Container.DataItem,"DG_DanJian")%＞’ <br>
                        onkeyup="javascript:DoCal()"<br>
                        /＞<br>
                        <br>
                        ＜asp:RegularExpressionValidator id="revS2" runat="server" ControlToValidate="DanJian" ErrorMessage="must be numeric" ValidationExpression="^\d+(\.\d*)?$" /＞<br>
                        <br>
                        ＜/ItemTemplate＞<br>
                        ＜/asp:TemplateColumn＞<br>
                        <br>
                        ＜asp:TemplateColumn HeaderText="金额"＞ <br>
                        ＜ItemTemplate＞<br>
                        ＜asp:TextBox id="JinE" runat=’server’ Text=’＜%# DataBinder.Eval(Container.DataItem,"DG_JinE")%＞’ /＞<br>
                        ＜/ItemTemplate＞<br>
                        ＜/asp:TemplateColumn＞＜script language="javascript"＞<br>
                        function DoCal()<br>
                        {<br>
                        　 var e = event.srcElement;<br>
                        　 var row = e.parentNode.parentNode;<br>
                        　 var txts = row.all.tags("INPUT");<br>
                        　 if (!txts.length || txts.length ＜ 3)<br>
                        　　 return;<br>
                        <br>
                        　 var q = txts[txts.length-3].value;<br>
                        　 var p = txts[txts.length-2].value;<br>
                        <br>
                        　 if (isNaN(q) || isNaN(p))<br>
                        　　 return;<br>
                        <br>
                        　 q = parseInt(q);<br>
                        　 p = parseFloat(p);<br>
                        <br>
                        　 txts[txts.length-1].value = (q * p).toFixed(2);<br>
                        }<br>
                        ＜/script＞</font></code></code></p>
                      <p align="left"><code><code><font face="新宋体"></font></code></code>&nbsp;</p>
                      <code><code> </code></code>
                      <p align="left">&nbsp;&nbsp; <strong>24.datagrid选定比较底下的行时，为什么总是刷新一下，然后就滚动到了最上面，刚才选定的行因屏幕的关系就看不到了。<br>
                        </strong><br>
                        <font face="新宋体"><code>page_load <br>
                        page.smartNavigation=true</code><br>
                        </font>　　<strong>25.在Datagrid中修改数据，当点击编辑键时，数据出现在文本框中，怎么控制文本框的大小 ? <br>
                        </strong><br>
                        <font face="新宋体"><code>private void DataGrid1_ItemDataBound(obj sender,DataGridItemEventArgs e)<br>
                        {<br>
                        　 for(int i=0;i＜e.Item.Cells.Count-1;i++)<br>
                        　　 if(e.Item.ItemType==ListItemType.EditType)<br>
                        　　 {<br>
                        　　　 e.Item.Cells[i].Attributes.Add("Width", "80px")<br>
                        　　 } <br>
                        }</code><br>
                        </font>　　<strong>26.对话框<br>
                        </strong><br>
                        <font face="新宋体"><code>private static string ScriptBegin = "＜script language=\"JavaScript\"＞";<br>
                        private static string ScriptEnd = "＜/script＞";<br>
                        <br>
                        public static void ConfirmMessageBox(string PageTarget,string Content)<br>
                        {<br>
                        　 string ConfirmContent="var retValue=window.confirm(’"+Content+"’);"+"if(retValue)";<br>
                        <br>
                        　 ConfirmContent=ScriptBegin + ConfirmContent + ScriptEnd;<br>
                        <br>
                        　 Page ParameterPage = (Page)System.Web.HttpContext.Current.Handler;<br>
                        　 ParameterPage.RegisterStartupScript("confirm",ConfirmContent);<br>
                        　 //Response.Write(strScript);<br>
                        }</code><br>
                        </font>　　<strong>27. 将时间格式化：string aa=DateTime.Now.ToString("yyyy年MM月dd日");</strong> <br>
                        <br>
                        　　 1.1 取当前年月日时分秒 <br>
                        <br>
                        <font face="新宋体"><code>currentTime=System.DateTime.Now;</code><br>
                        </font>　　1.2 取当前年 <br>
                        <br>
                        <font face="新宋体"><code>int 年= DateTime.Now.Year;</code><br>
                        </font>　　1.3 取当前月 <br>
                        <br>
                        <font face="新宋体"><code>int 月= DateTime.Now.Month; </code><br>
                        </font>　　1.4 取当前日 <br>
                        <br>
                        <font face="新宋体"><code>int 日= DateTime.Now.Day; </code><br>
                        </font>　　1.5 取当前时 <br>
                        <br>
                        <font face="新宋体"><code>int 时= DateTime.Now.Hour; </code><br>
                        </font>　　1.6 取当前分 <br>
                        <br>
                        <font face="新宋体"><code>int 分= DateTime.Now.Minute; </code><br>
                        </font>　　1.7 取当前秒 <br>
                        <br>
                        <font face="新宋体"><code>int 秒= DateTime.Now.Second; </code><br>
                        </font>　　1.8 取当前毫秒 <br>
                        <br>
                        <font face="新宋体"><code>int 毫秒= DateTime.Now.Millisecond; </code><br>
                        </font>　　<strong>28．自定义分页代码：<br>
                        </strong><br>
                        　　 先定义变量 ：<br>
                        <br>
                        <font face="新宋体"><code>public static int pageCount; //总页面数 <br>
                        public static int curPageIndex=1; //当前页面 </code><br>
                        </font>　　下一页： <br>
                        <br>
                        <font face="新宋体"><code>if(DataGrid1.CurrentPageIndex ＜ (DataGrid1.PageCount - 1)) <br>
                        { <br>
                        　 DataGrid1.CurrentPageIndex += 1; <br>
                        　 curPageIndex+=1; <br>
                        } <br>
                        <br>
                        bind(); // DataGrid1数据绑定函数 </code><br>
                        </font>　　上一页： <br>
                        <br>
                        <font face="新宋体"><code>if(DataGrid1.CurrentPageIndex ＞0) <br>
                        { <br>
                        　 DataGrid1.CurrentPageIndex += 1; <br>
                        　 curPageIndex-=1; <br>
                        } <br>
                        <br>
                        bind(); // DataGrid1数据绑定函数 </code><br>
                        </font>　　直接页面跳转： <br>
                        <br>
                        <code><font face="新宋体">int a=int.Parse(JumpPage.Value.Trim());//JumpPage.Value.Trim()为跳转值 <br>
                        <br>
                        if(a＜DataGrid1.PageCount) <br>
                        { <br>
                        　 this.DataGrid1.CurrentPageIndex=a; <br>
                        } <br>
                        <br>
                        bind(); </font></code></p>
                      <p align="left"><code></code>&nbsp;</p>
                      <code> </code>
                      <p align="left">&nbsp;<strong>29．DataGrid使用：</strong> <br>
                        <br>
                        　　 添加删除确认： <br>
                        <br>
                        <font face="新宋体"><code>private void DataGrid1_ItemCreated(object sender, System.Web.UI.WebControls.DataGridItemEventArgs e) <br>
                        { <br>
                        　 foreach(DataGridItem di in this.DataGrid1.Items) <br>
                        　 { <br>
                        　　 if(di.ItemType==ListItemType.Item||di.ItemType==ListItemType.AlternatingItem) <br>
                        　　 { <br>
                        　　　 ((LinkButton)di.Cells[8].Controls[0]).Attributes.Add("onclick","return confirm(’确认删除此项吗?’);"); <br>
                        　　 } <br>
                        　 } <br>
                        } </code><br>
                        </font>　　样式交替： <br>
                        <br>
                        <font face="新宋体"><code>ListItemType itemType = e.Item.ItemType; <br>
                        <br>
                        if (itemType == ListItemType.Item ) <br>
                        { <br>
                        　 e.Item.Attributes["onmouseout"] = "javascript:this.style.backgroundColor=’#FFFFFF’;"; <br>
                        　 e.Item.Attributes["onmouseover"] = "javascript:this.style.backgroundColor=’#d9ece1’;cursor=’hand’;" ; <br>
                        } <br>
                        else if( itemType == ListItemType.AlternatingItem) <br>
                        { <br>
                        　 e.Item.Attributes["onmouseout"] = "javascript:this.style.backgroundColor=’#a0d7c4’;"; <br>
                        　 e.Item.Attributes["onmouseover"] = "javascript:this.style.backgroundColor=’#d9ece1’;cursor=’hand’;" ; <br>
                        } </code><br>
                        </font>　　添加一个编号列： <br>
                        <br>
                        <font face="新宋体"><code>DataTable dt= c.ExecuteRtnTableForAccess(sqltxt); //执行sql返回的DataTable <br>
                        DataColumn dc=dt.Columns.Add("number",System.Type.GetType("System.String")); <br>
                        <br>
                        for(int i=0;i＜dt.Rows.Count;i++) <br>
                        { <br>
                        　 dt.Rows[i]["number"]=(i+1).ToString(); <br>
                        } <br>
                        <br>
                        DataGrid1.DataSource=dt; <br>
                        DataGrid1.DataBind(); </code><br>
                        </font>　　DataGrid1中添加一个CheckBox，页面中添加一个全选框 <br>
                        <br>
                        <font face="新宋体"><code>private void CheckBox2_CheckedChanged(object sender, System.EventArgs e) <br>
                        { <br>
                        　 foreach(DataGridItem thisitem in DataGrid1.Items) <br>
                        　 { <br>
                        　　 ((CheckBox)thisitem.Cells[0].Controls[1]).Checked=CheckBox2.Checked; <br>
                        　 } <br>
                        } </code><br>
                        </font>　　将当前页面中DataGrid1显示的数据全部删除 <br>
                        <br>
                        <font face="新宋体"><code>foreach(DataGridItem thisitem in DataGrid1.Items) <br>
                        { <br>
                        　 if(((CheckBox)thisitem.Cells[0].Controls[1]).Checked) <br>
                        　 { <br>
                        　　 string strloginid= DataGrid1.DataKeys[thisitem.ItemIndex].ToString(); <br>
                        　　 Del (strloginid); //删除函数 <br>
                        　 } <br>
                        } </code><br>
                        </font>　　<strong>30．当文件在不同目录下，需要获取数据库连接字符串（如果连接字符串放在Web.config，然后在Global.asax中初始化）</strong> <br>
                        <br>
                        　　 在Application_Start中添加以下代码： <br>
                        <br>
                        <font face="新宋体"><code>Application["ConnStr"]=this.Context.Request.PhysicalApplicationPath+ConfigurationSettings.<br>
                        　　　 AppSettings["ConnStr"].ToString();</code><br>
                        </font>　　<strong>31． 变量.ToString()</strong> <br>
                        <br>
                        　　 字符型转换 转为字符串 <br>
                        <br>
                        <font face="新宋体"><code>12345.ToString("n"); //生成 12,345.00 <br>
                        12345.ToString("C"); //生成 ￥12,345.00 <br>
                        12345.ToString("e"); //生成 1.234500e+004 <br>
                        12345.ToString("f4"); //生成 12345.0000 <br>
                        12345.ToString("x"); //生成 3039 (16进制) <br>
                        12345.ToString("p"); //生成 1,234,500.00% </code><br>
                        </font>　　<strong>32、变量.Substring(参数1,参数2);</strong> <br>
                        <br>
                        　　 截取字串的一部分，参数1为左起始位数，参数2为截取几位。 如：string s1 = str.Substring(0,2); <br>
                        <br>
                        　　 <strong>33．在自己的网站上登陆其他网站：(如果你的页面是通过嵌套方式的话，因为一个页面只能有一个FORM，这时可以导向另外一个页面再提交登陆信息) <br>
                        </strong><br>
                        <font face="新宋体"><code>＜SCRIPT language="javascript"＞ <br>
                        ＜!-- <br>
                        　 function gook(pws) <br>
                        　 { <br>
                        　　 frm.submit(); <br>
                        　 } <br>
                        //--＞ <br>
                        <br>
                        ＜/SCRIPT＞ ＜body leftMargin="0" topMargin="0" onload="javascript:gook()" marginwidth="0" marginheight="0"＞ <br>
                        ＜form name="frm" action=" http://220.194.55.68:6080/login.php?retid=7259 " method="post"＞ <br>
                        ＜tr＞ <br>
                        ＜td＞<br>
                        ＜input id="f_user" type="hidden" size="1" name="f_user" runat="server"＞<br>
                        ＜input id="f_domain" type="hidden" size="1" name="f_domain" runat="server"＞<br>
                        ＜input class="box" id="f_pass" type="hidden" size="1" name="pwshow" runat="server"＞ <br>
                        <br>
                        ＜INPUT id="lng" type="hidden" maxLength="20" size="1" value="5" name="lng"＞<br>
                        ＜INPUT id="tem" type="hidden" size="1" value="2" name="tem"＞ <br>
                        <br>
                        ＜/td＞ <br>
                        <br>
                        ＜/tr＞ <br>
                        <br>
                        ＜/form＞ </code><br>
                        </font>　　文本框的名称必须是你要登陆的网页上的名称，如果源码不行可以用vsniffer 看看。 <br>
                        <br>
                        　　 下面是获取用户输入的登陆信息的代码： <br>
                        <br>
                        <code><font face="新宋体">string name; <br>
                        name=Request.QueryString["EmailName"]; <br>
                        <br>
                        try <br>
                        { <br>
                        　 int a=name.IndexOf("@",0,name.Length); <br>
                        　 f_user.Value=name.Substring(0,a); <br>
                        　 f_domain.Value=name.Substring(a+1,name.Length-(a+1)); <br>
                        　 f_pass.Value=Request.QueryString["Psw"]; <br>
                        } <br>
                        <br>
                        catch <br>
                        { <br>
                        　 Script.Alert("错误的邮箱!"); <br>
                        　 Server.Transfer("index.aspx"); <br>
                        }</font></code></p>
                      <p align="left"><code></code>&nbsp;</p></td>
                  </tr>
                </tbody>
              </table></td>
          </tr>
        </tbody>
      </table>
      <!-- END TIDE_LOG_LIST -->
      <!-- BEGIN TIDE_LOG_LIST -->
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tbody>
          <tr>
            <td><table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img alt="" src="js大全_files/001_r6_c12.jpg" name="n001_r6_c12" border="0" height="26" width="34"></td>
                    <td class="td2" background="js大全_files/001_r6_c16.htm" width="69%"><img src="js大全_files/1.gif" alt="" border="0"><a class="td1" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;LogClassID=152">[ASP.NET2.0]</a><a class="td1" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=603">在ASP.NET2.0中上载文件</a></td>
                    <td width="2%"><img alt="" src="js大全_files/001_r6_c18.jpg" name="n001_r6_c18" border="0" height="26" width="17"></td>
                    <td class="td1" align="center" background="js大全_files/001_r6_c19.htm" width="19%">2006年10月4日</td>
                    <td align="right" background="js大全_files/001_r6_c19.htm" width="4%"><img alt="" src="js大全_files/001_r6_c20.jpg" name="n001_r6_c20" border="0" height="26" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table background="js大全_files/001_r8_c13.htm" border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img src="js大全_files/001_r8_c12.jpg" alt="" height="15" width="10"></td>
                    <td class="td3" align="right" width="90%"><a class="td3" href="http://13306525371.web133.com/UserInfoDetail.asp?UserID=2497" target="_blank">奕影残峰</a> <span class="date">@ 2006-10-4 17:30:33</span> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=603">阅读全文(528)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=603#c">评论(4)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;act=tb&amp;LogID=603">Trackback:(0)</a> <a href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;Date=2006-10-04#top"><img src="js大全_files/top.gif" alt="" border="0"></a></td>
                    <td align="right" width="4%"><img src="js大全_files/001_r8_c20.jpg" alt="" height="15" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td class="td1" align="center" height="215" valign="top"><br>
                      <p class="overview" align="left">Bill Evjen<br>
                        Reuters</p>
                      <p class="overview" align="left">适用于：</p>
                      <p class="overview" align="left">Microsoft ASP.NET 2.0<br>
                        Microsoft Visual Web Developer 2005 Express Edition</p>
                      <p class="overview" align="left">摘要：了解如何使用 Microsoft ASP.NET 2.0 中新增的 FileUpload 服务器控件。&nbsp;</p>
                      <p class="overview" align="left">&nbsp;</p>
                      <p class="overview" align="left">本页内容<br>
&nbsp;简介 <br>
&nbsp;FileUpload 服务器控件示例 <br>
&nbsp;小结&nbsp;</p>
                      <p class="overview" align="left">简介<br>
                        自 引入 Microsoft ASP.NET 版本 1.0 之*起，就存在生成 Web 应用程序的内置方法，这些方法能够将文件上载到宿主服务器。这是通过使用 File Field HTML 服务器控件实现的。我以前写过一篇关于如何在 ASP.NET 应用程序中有效使用该控件的 MSDN 文章。本文将再次介绍文件上载过程，但不是使用 File Field 控件，我将向您介绍如何有效使用 ASP.NET 2.0 提供的新 FileUpload 服务器控件。</p>
                      <p class="overview" align="left">虽然本文向您介绍新增的 FileUpload 服务器控件，但现在仍然可以在应用程序中使用 File Field 控件，注意到这一点是非常重要的。</p>
                      <p class="overview" align="left">返回页首<br>
                        FileUpload 服务器控件示例<br>
                        在 ASP.NET 1.x 中使用 File Field 控件时，必须采取一些额外的步骤才能使一切有条不紊地正常运行。例如，您需要亲自将 enctype="multipart/form-data" 添加到页面的 &lt;form&gt; 元素中。ASP.NET 2.0 中提供的新 FileUpload 服务器控件使将文件上载到宿主服务器的过程尽可能的简单。</p>
                      <p class="overview" align="left">最 后，您试图允许对 HTML &lt;input type="file"&gt;标记进行编程。该标记用于与 HTML 窗体中的文件数据一起使用。过去使用传统的 ASP（ASP 3.0 或更早的版本）时，许多程序员使用第三方组件将文件从客户端上载到服务器。现在，通过 .NET 和该新控件可以进行上载。清单 1 显示如何使用 FileUpload 控件将文件上载到服务器。</p>
                      <p class="overview" align="left">注 提供 Microsoft Visual Basic 和 C# 形式的示例代码。</p>
                      <p class="overview" align="left">清单 1. 使用 FileUpload 控件将文件上载到服务器</p>
                      <p class="overview" align="left">Visual Basic</p>
                      <p class="overview" align="left">&lt;%@ Page Language="VB" %&gt;<br>
&lt;script runat="server"&gt;<br>
&nbsp;&nbsp;&nbsp; Protected Sub Button1_Click(ByVal sender As Object, _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ByVal e As System.EventArgs)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If FileUpload1.HasFile Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Try<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUpload1.SaveAs("C:\Uploads\" &amp; _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUpload1.FileName)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Label1.Text = "File name: " &amp; _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUpload1.PostedFile.FileName &amp; "&lt;br&gt;" &amp; _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "File Size: " &amp; _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUpload1.PostedFile.ContentLength &amp; " kb&lt;br&gt;" &amp; _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "Content type: " &amp; _<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUpload1.PostedFile.ContentType<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Catch ex As Exception<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Label1.Text = "ERROR: " &amp; ex.Message.ToString()<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End Try<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Label1.Text = "You have not specified a file."<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If<br>
&nbsp;&nbsp;&nbsp; End Sub<br>
&lt;/script&gt;</p>
                      <p class="overview" align="left">&lt;HTML xmlns="<a href="http://www.w3.org/1999/xhtml"><font color="#0000ff">http://www.w3.org/1999/xHTML</font></a>" &gt;<br>
&lt;head runat="server"&gt;<br>
&nbsp;&nbsp;&nbsp; &lt;title&gt;Upload Files&lt;/title&gt;<br>
&lt;/head&gt;<br>
&lt;body&gt;<br>
&nbsp;&nbsp;&nbsp; &lt;form id="form1" runat="server"&gt;<br>
&nbsp;&nbsp;&nbsp; &lt;div&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ASP:FileUpload ID="FileUpload1" runat="server" /&gt;&lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ASP:Button ID="Button1" runat="server" OnClick="Button1_Click" <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Text="Upload File" /&gt; &lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ASP:Label ID="Label1" runat="server"&gt;&lt;/ASP:Label&gt;&lt;/div&gt;<br>
&nbsp;&nbsp;&nbsp; &lt;/form&gt;<br>
&lt;/body&gt;<br>
&lt;/HTML&gt;</p>
                      <p class="overview" align="left">C#</p>
                      <p class="overview" align="left">&lt;%@ Page Language="C#" %&gt;<br>
&lt;script runat="server"&gt;<br>
&nbsp;&nbsp;&nbsp; protected void Button1_Click(object sender, EventArgs e)<br>
&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (FileUpload1.HasFile)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUpload1.SaveAs("C:\\Uploads\\" + <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUpload1.FileName);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Label1.Text = "File name: " +<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUpload1.PostedFile.FileName + "&lt;br&gt;" +<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUpload1.PostedFile.ContentLength + " kb&lt;br&gt;" +<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "Content type: " +<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUpload1.PostedFile.ContentType;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (Exception ex)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Label1.Text = "ERROR: " + ex.Message.ToString();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Label1.Text = "You have not specified a file.";<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; }<br>
&lt;/script&gt;</p>
                      <p class="overview" align="left">&lt;HTML xmlns="<a href="http://www.w3.org/1999/xhtml"><font color="#0000ff">http://www.w3.org/1999/xHTML</font></a>" &gt;<br>
&lt;head runat="server"&gt;<br>
&nbsp;&nbsp;&nbsp; &lt;title&gt;Upload Files&lt;/title&gt;<br>
&lt;/head&gt;<br>
&lt;body&gt;<br>
&nbsp;&nbsp;&nbsp; &lt;form id="form1" runat="server"&gt;<br>
&nbsp;&nbsp;&nbsp; &lt;div&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ASP:FileUpload ID="FileUpload1" runat="server" /&gt;&lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ASP:Button ID="Button1" runat="server" OnClick="Button1_Click" <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Text="Upload File" /&gt; &lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ASP:Label ID="Label1" runat="server"&gt;&lt;/ASP:Label&gt;&lt;/div&gt;<br>
&nbsp;&nbsp;&nbsp; &lt;/form&gt;<br>
&lt;/body&gt;<br>
&lt;/HTML&gt;</p>
                      <p class="overview" align="left">运行该页，如果看看为该页生成的源代码，就会注意到一些问题。清单 2 列出这段源代码。</p>
                      <p class="overview" align="left">清单 2. FileUpload 控件生成的源代码</p>
                      <p class="overview" align="left">&lt;HTML xmlns="<a href="http://www.w3.org/1999/xhtml"><font color="#0000ff">http://www.w3.org/1999/xHTML</font></a>" &gt;<br>
&lt;head&gt;&lt;title&gt;<br>
&nbsp;&nbsp; Upload Files<br>
&lt;/title&gt;&lt;/head&gt;<br>
&lt;body&gt;<br>
&nbsp;&nbsp;&nbsp; &lt;form name="form1" method="post" action="MyFileUpload.ASPx" <br>
&nbsp;&nbsp;&nbsp;&nbsp; id="form1" enctype="multipart/form-data"&gt;<br>
&lt;div&gt;<br>
&lt;input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUJNDcxNTg5NDg3D2QWAgIEDxYCHgdlbmN0eXBlBRNtdWx0aXBhcnQvZm9yb<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S1kYXRhZGQUQEUFMY1+/fp1mnrkbqmVNQIzFA==" /&gt;<br>
&lt;/div&gt;</p>
                      <p class="overview" align="left">&nbsp;&nbsp;&nbsp; &lt;div&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input type="file" name="FileUpload1" id="FileUpload1" /&gt;&lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input type="submit" name="Button1" value="Upload File" <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id="Button1" /&gt; &lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;br /&gt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;span id="Label1"&gt;&lt;/span&gt;<br>
&nbsp;&nbsp;&nbsp; &lt;/div&gt;<br>
&nbsp;&nbsp;&nbsp; <br>
&lt;div&gt;</p>
                      <p class="overview" align="left">&nbsp;&nbsp; &lt;input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" <br>
&nbsp;&nbsp;&nbsp; value="/wEWAgLB+7jIAwKM54rGBv2Iz6LxVY7jWec0gZMxnuaK2ufq" /&gt;<br>
&lt;/div&gt;&lt;/form&gt;<br>
&lt;/body&gt;<br>
&lt;/HTML&gt;</p>
                      <p class="overview" align="left">首 先要注意的是，由于 FileUpload 控件位于该页上，因此 ASP.NET 2.0 通过添加相应的 enctype 属性来代替您修改该页的 &lt;form&gt; 元素。您还会注意到，FileUpload 控件被转换为一个 HTML &lt;input type="file"&gt;元素。</p>
                      <p class="overview" align="left">清 单 1 中的页面运行后，您可以选择一个文件，然后通过单击该页上的 Upload File 按钮将它上载到服务器。针对该示例，我们需要重温一些重要的事项，以便理解实现该操作所需的所有步骤。要使清单 1 中的示例生效，必须使服务器上的目标文件夹对于 ASP.NET 使用的帐户是可写的，这样才能将文件保存到指定的文件夹中。</p>
                      <p class="overview" align="left">如 果您认为自己的 ASP.NET 帐户不能写入希望的文件夹，则只需打开 Microsoft Windows Explorer，然后定位到要添加该权限的文件夹即可。右击该文件夹（本例中为 Uploads 文件夹），然后选择 Properties。在 Properties 对话框中，单击 Security 选项卡，确保列表中包括 ASP.NET 机器帐户，该帐户具有写入磁盘的适当权限（请参见图 1）。<br>
&nbsp;</p>
                      <div align="left">
                        <div class="overview" align="left">
                          <div style="width: 368px;"><img alt="" src="js大全_files/uploadasp201.gif" border="0" height="448" width="368"><br>
                            <p class="figurecaption"><strong>图 1. 查看 Uploads 文件夹的 Security 选项卡</strong></p>
                            <div class="figureRule"></div>
                          </div>
                        </div>
                        <p class="overview" align="left">如果在 Security 选项卡下没看到 ASP.NET 机器帐户，可以通过单击 <strong>add</strong> 按钮并在文本区域中输入 ASPNET（没有期限）来添加该帐户，如图 2 所示。 </p>
                        <div class="overview" align="left">
                          <div style="width: 463px;"><img alt="" src="js大全_files/uploadasp202.gif" border="0" height="246" width="463"><br>
                            <p class="figurecaption"><strong>图 2. 将 ASP.NET 机器帐户添加到文件夹安全性定义中</strong></p>
                            <div class="figureRule"></div>
                          </div>
                        </div>
                        <p class="overview" align="left">单击 <strong>ok</strong>，将 ASP.NET 机器帐户添加到列表中。在此，请确保为该帐户赋予了适当的权限，然后单击 <strong>ok</strong>，这样就准备就绪了。</p>
                        <p class="overview" align="left">该页上的 Submit 按钮会引发 <strong>button1_click</strong> 事件发生。该事件上载文件，然后显示一条消息，通过发布有关已上载文件的信息来告诉您上载是否成功。如果上载失败，则该页显示一条描述上载失败原因的错误消息。</p>
                        <p class="overview" align="left">通过使用将自己转换为<strong>
                          <input type="file">
                          </strong>标记的 <strong>fileupload</strong> 控件，浏览器自动将一个 Browse 按钮放在 ASP.NET 页上的文本字段旁边。无需进行任何编程，就会出现这种情况。当最终用户单击 Browse 按钮时，他可以浏览本地文件系统以查找要上载到服务器的文件。如图 3 所示。单击 Open 将把文件名和该文件的路径放到文本字段中。</p>
                        <div class="overview" align="left">
                          <div style="width: 480px;"><img alt="" src="js大全_files/uploadasp203.gif" border="0" height="357" width="480"><br>
                            <p class="figurecaption"><strong>图 3. 选择文件</strong></p>
                            <div class="figureRule"></div>
                          </div>
                        </div>
                        <p class="overview" align="left"><strong>解决文件大小限制</strong></p>
                        <p class="overview" align="left">您可能没意识到，但对于可以使用该技术上载的文件的大小存在限制。默认情况下，使用 <strong>fileupload</strong> 控件上载到服务器的文件最大为 4MB 左右。不能上载超过该限制的任何内容。</p>
                        <p class="overview" align="left">然 而，关于 .NET 的重要一点是，它通常会提供一种规避限制的方法。您通常可以更改正在使用的默认设置。要更改大小限制，可以在 web.config.comments 文件（可以在 C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\CONFIG 的 ASP.NET 2.0 配置文件夹中找到）或应用程序的 web.config 文件中进行一些改动。</p>
                        <p class="overview" align="left">在 web.config.comments 文件中，查找一个名为 <strong><executiontimeout></executiontimeout></strong>的节点，如下所示：</p>
                        <div class="overview" align="left">
                          <pre class="codeSample"><httpruntime executiontimeout="110" maxrequestlength="4096" requestlengthdiskthreshold="80" usefullyqualifiedredirecturl="false" minfreethreads="8" minlocalrequestfreethreads="4" apprequestqueuelimit="5000" enablekerneloutputcache="true" enableversionheader="true" requirerootedsaveaspath="true" enable="true" shutdowntimeout="90" delaynotificationtimeout="5" waitchangenotification="0" maxwaitchangenotification="0" enableheaderchecking="true" sendcachecontrolheader="true" apartmentthreading="false"></httpruntime></pre>
                        </div>
                        <p class="overview" align="left">在这个节点上进行了许多操作，但负责上载文件大小的设置是 <strong>maxrequestlength</strong> 属性。默认情况下，该属性设置为 <strong>4096</strong> 千字节 (KB)。只需更改此值，就可以增加可上载到服务器的文件大小。如果想要允许将 10 兆字节 (MB) 的文件上载到服务器，则将 <strong>maxrequestlength</strong> 值设置为 <strong>11264</strong>，这意味着该应用程序允许将最大为 11000 KB 的文件上载到服务器。</p>
                        <p class="overview" align="left">在 web.config.comments 文件中进行此改动会将该设置应用于服务器上的所有应用程序。如果要将该设置仅应用于正在使用的应用程序，则将该节点应用于应用程序的 web.config 文件，覆盖 web.config.comments 文件中的所有设置。请确保该节点位于配置文件中的 <strong><system.web></system.web></strong>节点之间。</p>
                        <p class="overview" align="left">与上载文件大小限制有关的另一个设置是赋给 <strong><httpruntime></httpruntime></strong>节点中 <strong>executiontimeout</strong> 属性的值。</p>
                        <p class="overview" align="left">赋给 <strong>executiontimeout</strong> 属性的值是 ASP.NET 关闭前允许发生的上载秒数。如果要允许将更大的文件上载到服务器，则还要增加该值和 <strong>maxrequestlength</strong> 值。</p>
                        <p class="overview" align="left">增加可上载文件大小的一个缺点是，存在通过发出大量请求来攻击服务器的黑客。要避免这种情况，可以减小允许上载的文件大小；否则，可能会发现数百个甚至上千个 10 MB 的请求访问您的服务器。</p>
                        <p class="overview" align="left"><strong>客户端验证允许上载的文件类型</strong></p>
                        <p class="overview" align="left">有几种方法可以用来控制上载到服务器的文件类型。遗憾的是，没有一种十全十美的方法可以防御其他人上载恶意的文件。然而，您可以采取一些步骤，以使这个允许最终用户上载文件的过程更易于管理。</p>
                        <p class="overview" align="left">一个可用的好方法是使用 ASP.NET 免费提供的 ASP.NET 验证控件。这些控件使您可以对正在上载的文件进行正则表达式检查，看看文件的扩展名是否在允许上载的扩展名之列。</p>
                        <p class="overview" align="left">因为该方法强制在客户端进行检查，所以对于允许在客户端使用验证控件的浏览器而言，这是一个理想的选择；如果签名不是您允许的签名，则该文件不能上载到服务器。清单 3 显示一个使用验证控件完成该任务的示例。</p>
                        <p class="overview" align="left"><strong>注</strong> 此处不介绍验证控件的用法。有关验证控件的完整解释以及如何在 ASP.NET 页中使用它们，请参阅 <a href="http://msdn.microsoft.com/asp.net/default.aspx?pull=/library/en-us/dnaspp/html/aspnet-validateaspnetservercontrols.asp" target="_blank"><font color="#0000ff">Validating ASP.NET Server Controls</font></a>。</p>
                        <p class="overview" align="left"><strong>清单 3. 使用验证控件限制上载到服务器的文件类型</strong></p>
                        <div class="overview" align="left">
                          <pre class="codeSample"><asp:fileupload id="FileUpload1" runat="server"></asp:fileupload><br><br><asp:button id="Button1" onclick="Button1_Click" runat="server" text="Upload File"></asp:button> <br><br><asp:label id="Label1" runat="server"></asp:label><asp:regularexpressionvalidator id="RegularExpressionValidator1" runat="server" errormessage="Only mp3, m3u or mpeg files are allowed!" validationexpression="^(([a-zA-Z]:)|(\\\w+)\$?)(\\(\w[\w].*))    +(.mp3|.MP3|.mpeg|.MPEG|.m3u|.M3U)$" controltovalidate="FileUpload1"></asp:regularexpressionvalidator><br><asp:requiredfieldvalidator id="RequiredFieldValidator1" runat="server" errormessage="This is a required field!" controltovalidate="FileUpload1"></asp:requiredfieldvalidator>
</pre>
                        </div>
                        <p class="overview" align="left">这个简单的 ASP.NET 页使用验证控件，这样最终用户就只能将 .mp3、.mpeg 或 .m3u 文件上载到服务器。如果文件类型不是以上可选的文件类型，则 <strong>validation</strong> 控件向屏幕抛出一个异常。如图 4 所示。</p>
                        <div class="overview" align="left">
                          <div style="width: 480px;"><img alt="" src="js大全_files/uploadasp204.gif" border="0" height="237" width="480"><br>
                            <p class="figurecaption"><strong>图 4. 使用验证控件验证文件类型</strong></p>
                            <div class="figureRule"></div>
                          </div>
                        </div>
                        <p class="overview" align="left">对于上载到服务器的文件，使用 <strong>validation</strong> 控件不是一个对其进行控制的有效方法。更改一个文件的文件扩展名并不太困难，因此扩展名将被接受并上载到服务器，从而可以避开这个简单的安全模型。</p>
                        <p class="overview" align="left"><strong>增加服务器端文件类型验证</strong></p>
                        <p class="overview" align="left">您刚才看到一种将一些 ASP.NET 验证服务器控件添加到 ASP.NET 页，以便在客户端对文件扩展名进行验证（以文本方式）的简单方法。现在，让我们看看如何在服务器端执行类似的操作。如清单 4 所示。</p>
                        <p class="overview" align="left"><strong>清单 4. 检查服务器上的文件类型</strong></p>
                        <p class="overview" align="left"><strong>Visual Basic</strong></p>
                        <div class="overview" align="left">
                          <pre class="codeSample">    Protected Sub Button1_Click(ByVal sender As Object, _      ByVal e As System.EventArgs)        If FileUpload1.HasFile Then            Dim fileExt As String            fileExt = System.IO.Path.GetExtension(FileUpload1.FileName)                        If (fileExt = ".mp3") Then                Try                    FileUpload1.SaveAs("C:\Uploads\" &amp; _                       FileUpload1.FileName)                    Label1.Text = "File name: " &amp; _                      FileUpload1.PostedFile.FileName &amp; "" &amp; _                      "File Size: " &amp; _                      FileUpload1.PostedFile.ContentLength &amp; " kb" &amp; _                      "Content type: " &amp; _                      FileUpload1.PostedFile.ContentType                Catch ex As Exception                    Label1.Text = "ERROR: " &amp; ex.Message.ToString()                End Try            Else                Label1.Text = "Only .mp3 files allowed!"            End If        Else            Label1.Text = "You have not specified a file."        End If    End Sub</pre>
                        </div>
                        <p class="overview" align="left"><strong>C#</strong></p>
                        <div class="overview" align="left">
                          <pre class="codeSample">    protected void Button1_Click(object sender, EventArgs e)    {        if (FileUpload1.HasFile)        {            string fileExt =                System.IO.Path.GetExtension(FileUpload1.FileName);            if (fileExt == ".mp3")            {                try                {                    FileUpload1.SaveAs("C:\\Uploads\\" +                        FileUpload1.FileName);                    Label1.Text = "File name: " +                        FileUpload1.PostedFile.FileName + "" +                        FileUpload1.PostedFile.ContentLength + " kb" +                        "Content type: " +                        FileUpload1.PostedFile.ContentType;                }                catch (Exception ex)                {                    Label1.Text = "ERROR: " + ex.Message.ToString();                }            }            else            {                Label1.Text = "Only .mp3 files allowed!";            }        }        else        {            Label1.Text = "You have not specified a file.";        }    }</pre>
                        </div>
                        <p class="overview" align="left">现在，通过在 <strong>system.io.path</strong> 命名空间中使用 <strong>getextension</strong> 方法，基本可以执行相同的操作。对于最终用户而言，只需将文件扩展名更改为可以生效的名称并将更改的文件上载到宿主服务器的功能不会有所影响，注意到这一点非常重要。</p>
                        <p class="overview" align="left"><strong>同时上载多个文件</strong></p>
                        <p class="overview" align="left">目前为止，已经有几个不错的示例说明了如何不费周折地将文件上载到服务器。现在，让我们看看如何从一个页面将多个文件上载到服务器。</p>
                        <p class="overview" align="left">microsoft .NET Framework 中没有任何内置功能使您可以从一个 ASP.NET 页上载多个文件。然而，只需要少量工作，您就可以像过去使用 .NET 1.<em>x</em> 那样完成此任务。</p>
                        <p class="overview" align="left">方法是将 <strong>system.io</strong> 类导入到 ASP.NET 页中，然后使用 <strong>httpfilecollection</strong> 类捕获通过 <strong>request</strong> 对象发送来的所有文件。该方法使您可以从一个页面上载所需数量的文件。</p>
                        <p class="overview" align="left">如果需要，您完全可以分别处理该页上的每个 <strong>fileupload</strong> 控件，如清单 5 所示。</p>
                        <p class="overview" align="left"><strong>清单 5. 分别处理每个 FileUpload 控件</strong></p>
                        <p class="overview" align="left"><strong>Visual Basic</strong></p>
                        <div class="overview" align="left">
                          <pre class="codeSample">If FileUpload1.HasFile Then   ’ Handle fileEnd IfIf FileUpload2.HasFile Then   ’ Handle fileEnd If</pre>
                        </div>
                        <p class="overview" align="left"><strong>C#</strong></p>
                        <div class="overview" align="left">
                          <pre class="codeSample">if (FileUpload1.HasFile) {   // Handle file}if (FileUpload2.HasFile) {   // Handle file}</pre>
                        </div>
                        <p class="overview" align="left">该方法有效，但可能存在这种情况：您要使用 <strong>httpfilecollection</strong> 类处理文件，特别是在处理动态生成的服务器控件列表时。</p>
                        <p class="overview" align="left">针对这种情况的示例，您可以生成一个 ASP.NET 页，该页有三个 <strong>fileupload</strong> 控件和一个 Submit 按钮（使用 Button 控件）。用户单击 Submit 按钮并且文件被发布到服务器之后，隐藏的代码将文件保存到服务器上的特定位置。保存文件后，在 ASP.NET 页上显示已发布的文件信息（请参见清单 6）。</p>
                        <p class="overview" align="left"><strong>清单 6. 将多个文件上载到服务器</strong></p>
                        <p class="overview" align="left"><strong>Visual Basic</strong></p>
                        <div class="overview" align="left">
                          <pre class="codeSample">Protected Sub Button1_Click(ByVal sender As Object, _   ByVal e As System.EventArgs)   Dim filepath As String = "C:\Uploads"   Dim uploadedFiles As HttpFileCollection = Request.Files   Dim i As Integer = 0   Do Until i = uploadedFiles.Count     Dim userPostedFile As HttpPostedFile = uploadedFiles(i)     Try        If (userPostedFile.ContentLength &gt; 0) Then           Label1.Text += "File #" &amp; (i + 1) &amp; ""           Label1.Text += "File Content Type: " &amp; _              userPostedFile.ContentType &amp; ""           Label1.Text += "File Size: " &amp; _              userPostedFile.ContentLength &amp; "kb"           Label1.Text += "File Name: " &amp; _              userPostedFile.FileName &amp; ""           userPostedFile.SaveAs(filepath &amp; "\" &amp; _              System.IO.Path.GetFileName(userPostedFile.FileName))           Label1.Text += "Location where saved: " &amp; _              filepath &amp; "\" &amp; _              System.IO.Path.GetFileName(userPostedFile.FileName) &amp; _              ""        End If     Catch ex As Exception        Label1.Text += "Error:" &amp; ex.Message     End Try     i += 1   LoopEnd Sub</pre>
                        </div>
                        <p class="overview" align="left"><strong>C#</strong></p>
                        <div class="overview" align="left">
                          <pre class="codeSample">protected void Button1_Click(object sender, EventArgs e){   string filepath = "C:\\Uploads";   HttpFileCollection uploadedFiles = Request.Files;       for (int i = 0; i &lt; uploadedFiles.Count; i++)   {          HttpPostedFile userPostedFile = uploadedFiles[i];          try      {             if (userPostedFile.ContentLength &gt; 0 )         {            Label1.Text += "File #" + (i+1) +                "";            Label1.Text += "File Content Type: " +                userPostedFile.ContentType + "";            Label1.Text += "File Size: " +                userPostedFile.ContentLength + "kb";            Label1.Text += "File Name: " +                userPostedFile.FileName + "";                userPostedFile.SaveAs(filepath + "\\" +                System.IO.Path.GetFileName(userPostedFile.FileName));                Label1.Text += "Location where saved: " +                filepath + "\\" +                System.IO.Path.GetFileName(userPostedFile.FileName) +                "";         }          }       catch (Exception Ex)      {             Label1.Text += "Error: " + Ex.Message;          }       }    }</pre>
                        </div>
                        <p class="overview" align="left">最终用户最多可以选择四个文件，然后单击 Upload Files 按钮，该按钮会初始化 <strong>button1_click</strong> 事件。使用 <strong>httpfilecollection</strong> 类和 <strong>request.files</strong> 属性使您可以控制从该页上载的所有文件。当这些文件处于此状态时，您可以对它们进行任何操作。在本例中，检查文件的属性并将它们输出到屏幕上。最后，这些文件保存到服务器根目录的 Uploads 文件夹中。该操作的结果如图 5 所示。</p>
                        <div class="overview" align="left">
                          <div style="width: 520px;"><img alt="" src="js大全_files/uploadasp205.gif" border="0" height="452" width="520"><br>
                            <p class="figurecaption"><strong>图 5. 一次将一个 ASP.NET 页上的四个文件上载到服务器</strong></p>
                            <div class="figureRule"></div>
                          </div>
                        </div>
                        <p class="overview" align="left">您可能已经注意到，该示例有趣的一点是，文件输入文本框的状态没有通过回发进行保存。在图 5 中您可以看到这一点。在 ASP.NET 中，无法保存文件输入文本框的状态，因为这么做可能会引发安全风险。</p>
                        <div class="overview" style="margin-top: 3px; margin-bottom: 10px;" align="left"><a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnasppuploadasp2.mspx#top"><img alt="返回页首" src="js大全_files/arrow_px_up.gif" border="0" height="9" width="7"></a><a class="topofpage" href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnasppUploadASP2.mspx#top"><font color="#0000ff">返回页首</font></a></div>
                        <a name="effac"></a>
                        <h2 class="overview" align="left">小结</h2>
                        <p class="overview" align="left">asp.net 提供的 <strong>fileupload</strong> 服务器控件是一个强大的控件，在 Active Server Pages 3.0 时代实现该控件非常困难。这个新增的功能允许最终用户将一个或多个文件上载到服务器。请记住，通过利用 web.config.comments 或 web.config 文件中的设置，您可以控制文件的大小。</p>
                        <p class="overview" align="left"><strong>关于作者</strong></p>
                        <p class="overview" align="left">bill Evjen 是 .NET 技术和 .NET 社区学习计划的积极支持者。他是 <a href="http://reuters.com/"><em><font color="#0000ff">Reuters</font></em></a> 的一名技术指导，该公司是一家国际新闻和金融服务公司，位于密苏里州的圣路易斯。Bill 是 <a href="http://www.ineta.org/"><em><font color="#0000ff">International .NET Association (INETA)</font></em></a> 的创建者和执行董事，该组织在全世界范围内拥有 100,000 多名会员。Bill 还是一名作家和演讲者，他的著作有 <em>asp.net Professional Secrets</em>、<em>xml Web Services for ASP.NET</em>、<em>web Services Enhancements</em> 和 <em>visual Basic .NET Bible</em>（全部由 <a href="http://www.wiley.com/"><em><font color="#0000ff">Wiley</font></em></a> 出版）。</p>
                      </div></td>
                  </tr>

                </tbody>
              </table></td>
          </tr>
        </tbody>
      </table>
      <!-- END TIDE_LOG_LIST -->
      <!-- BEGIN TIDE_LOG_LIST -->
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tbody>
          <tr>
            <td><table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img alt="" src="js大全_files/001_r6_c12.jpg" name="n001_r6_c12" border="0" height="26" width="34"></td>
                    <td class="td2" background="js大全_files/001_r6_c16.htm" width="69%"><img src="js大全_files/1.gif" alt="" border="0"><a class="td1" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;LogClassID=152">[ASP.NET2.0]</a><a class="td1" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=602">Asp.Net学习资料(中文)</a></td>
                    <td width="2%"><img alt="" src="js大全_files/001_r6_c18.jpg" name="n001_r6_c18" border="0" height="26" width="17"></td>
                    <td class="td1" align="center" background="js大全_files/001_r6_c19.htm" width="19%">2006年10月4日</td>
                    <td align="right" background="js大全_files/001_r6_c19.htm" width="4%"><img alt="" src="js大全_files/001_r6_c20.jpg" name="n001_r6_c20" border="0" height="26" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table background="js大全_files/001_r8_c13.htm" border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img src="js大全_files/001_r8_c12.jpg" alt="" height="15" width="10"></td>
                    <td class="td3" align="right" width="90%"><a class="td3" href="http://13306525371.web133.com/UserInfoDetail.asp?UserID=2497" target="_blank">奕影残峰</a> <span class="date">@ 2006-10-4 17:26:54</span> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=602">阅读全文(491)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=602#c">评论(4)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;act=tb&amp;LogID=602">Trackback:(0)</a> <a href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;Date=2006-10-04#top"><img src="js大全_files/top.gif" alt="" border="0"></a></td>
                    <td align="right" width="4%"><img src="js大全_files/001_r8_c20.jpg" alt="" height="15" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td class="td1" align="center" height="215" valign="top"><br>
                      <p align="left">Author:<font color="#3366cc"><strong> </strong></font><a href="http://community.csdn.net/message_board/send.asp?sendto=lovecherry" target="_blank"><font color="#3366cc"><strong>LoveCherry</strong></font></a><br>
                        From:csdn<br>
                        1、使用 Web 标准生成 ASP.NET 2.0 Web 站点<br>
                        <a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/aspnetusstan.mspx"><font color="#0000ff">http://www.microsoft.com/china/msdn/library/webservices/asp.net/ASPNETusStan.mspx</font></a><br>
                        2、常见的 ASP.NET 2.0 转换问题和解决方案<br>
                        <a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnasppupgradingaspnet.mspx"><font color="#0000ff">http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnasppupgradingaspnet.mspx</font></a><br>
                        3、ASP.NET 2.0 的内部变化（针对 Beta 2 更新）<br>
                        <a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnvs05internals.mspx"><font color="#0000ff">http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnvs05Internals.mspx</font></a><br>
                        4、ASP.NET 2.0 和数据绑定控件：新的角度，新的做法<br>
                        <a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnasppdatabound.mspx"><font color="#0000ff">http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnasppdatabound.mspx</font></a><br>
                        5、ASP.NET 2.0 中的数据源控件<br>
                        <a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/us0501datapoints.mspx"><font color="#0000ff">http://www.microsoft.com/china/msdn/library/webservices/asp.net/us0501DataPoints.mspx</font></a><br>
                        6、在 ASP.NET 2.0 中创建 Web 应用程序主题<br>
                        <a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnvs05themes.mspx"><font color="#0000ff">http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnvs05themes.mspx</font></a><br>
                        7、ASP.NET 2.0 中改进的缓存功能<br>
                        <a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/cachingnt2.mspx"><font color="#0000ff">http://www.microsoft.com/china/msdn/library/webservices/asp.net/CachingNT2.mspx</font></a><br>
                        8、ASP.NET 2.0 中的 Web 站点操作<br>
                        <a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/usdnvs05sitemaint.mspx"><font color="#0000ff">http://www.microsoft.com/china/msdn/library/webservices/asp.net/USdnvs05sitemaint.mspx</font></a><br>
                        9、利用 ASP.NET 2.0 创建自定义 Web 控件<br>
                        <a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/usdnvs05custwebcon.mspx"><font color="#0000ff">http://www.microsoft.com/china/msdn/library/webservices/asp.net/USdnvs05custwebcon.mspx</font></a><br>
                        10、新数据网格简介<br>
                        <a href="http://www.microsoft.com/china/msdn/library/langtool/vsdotnet/vs05a9.mspx"><font color="#0000ff">http://www.microsoft.com/china/msdn/library/langtool/vsdotnet/vs05a9.mspx</font></a><br>
                      </p></td>
                  </tr>
                </tbody>
              </table></td>
          </tr>
        </tbody>
      </table>
      <!-- END TIDE_LOG_LIST -->
      <!-- BEGIN TIDE_LOG_LIST -->
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tbody>
          <tr>
            <td><table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img alt="" src="js大全_files/001_r6_c12.jpg" name="n001_r6_c12" border="0" height="26" width="34"></td>
                    <td class="td2" background="js大全_files/001_r6_c16.htm" width="69%"><img src="js大全_files/1.gif" alt="" border="0"><a class="td1" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;LogClassID=152">[ASP.NET2.0]</a><a class="td1" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=601">ASP.NET 2.0运行时简要分析</a></td>
                    <td width="2%"><img alt="" src="js大全_files/001_r6_c18.jpg" name="n001_r6_c18" border="0" height="26" width="17"></td>
                    <td class="td1" align="center" background="js大全_files/001_r6_c19.htm" width="19%">2006年10月4日</td>
                    <td align="right" background="js大全_files/001_r6_c19.htm" width="4%"><img alt="" src="js大全_files/001_r6_c20.jpg" name="n001_r6_c20" border="0" height="26" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table background="js大全_files/001_r8_c13.htm" border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img src="js大全_files/001_r8_c12.jpg" alt="" height="15" width="10"></td>
                    <td class="td3" align="right" width="90%"><a class="td3" href="http://13306525371.web133.com/UserInfoDetail.asp?UserID=2497" target="_blank">奕影残峰</a> <span class="date">@ 2006-10-4 17:23:14</span> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=601">阅读全文(529)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=601#c">评论(4)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;act=tb&amp;LogID=601">Trackback:(0)</a> <a href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;Date=2006-10-04#top"><img src="js大全_files/top.gif" alt="" border="0"></a></td>
                    <td align="right" width="4%"><img src="js大全_files/001_r8_c20.jpg" alt="" height="15" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td class="td1" align="center" height="215" valign="top"><br>
                      <p align="left"><strong>Author: dudu<br>
                        From: http://www.cnblogs.com/dudu/<br>
                        概述:</strong><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 本文基于ASP.NET 2.0的源代码，对ASP.NET 2.0运行时进行了简要的分析，希望能帮助你理解ASP.NET 2.0中请求处理过程及页面编译模型。</p>
                      <p align="left"><strong>关键字：</strong><br>
&nbsp;&nbsp;&nbsp;&nbsp; ASP.NET 2.0运行时，原理，请求处理，页面编译，ASP.NET 2.0 HTTP Runtime</p>
                      <p align="left"><strong>主要类：</strong><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.Web.HttpRuntime<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.Web.HttpApplicationFactory<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.Web.HttpApplication<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.Web.Compilation.BuildManager<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.Web.Compilation.ApplicationBuildProvider<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.Web.Compilation.BuildProvidersCompiler<br>
&nbsp;&nbsp;&nbsp;&nbsp; System.Web.UI.PageHandlerFactory<br>
                      </p>
                      <p align="left"><strong>请求处理简要流程图:<br>
                        <br>
                        <img src="js大全_files/asp2runtime.jpg" alt="" align="bottom" height="710" hspace="5" width="350"><br>
                        </strong> </p>
                      <p align="left"><strong>阅读建议：</strong><br>
&nbsp;&nbsp;&nbsp;&nbsp; 用Reflector工具边查看ASP.NET 2.0的源代码边阅读。<br>
&nbsp;<br>
                        <strong>分析：</strong><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 当我们通过浏览器向ASP.NET 2.0网站的一个asp.net页面发起请求时，在服务器端首先是IIS收到请求，IIS一看是asp.net页面，心里很开心，因为这个请求不用它处 理，交给ASP.NET ISAPI就行了。ASP.NET ISAPI的工作也比较轻松，他的主要任务就是安排aspnet_wp.exe处理请求，并监视aspnet_wp.exe进程的执行情况，如果 aspnet_wp.exe进程太累了，不能出色地完成任务，ASP.NET ISAPI就要让他下岗，换一个新的aspnet_wp.exe来处理工作。&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp; aspnet_wp.exe的主要任务是将请求交给一系列称为的 HTTP 管道的托管对象。如果把ASP.NET ISAPI比做销售经理，那aspnet_wp.exe就是生产经理，而HTTP 管道就是生产的流水线。负责流水线的小组就是HttpRuntime，生产经理aspnet_wp.exe会将订单(HTTP请求)交给 HttpRuntime小组的工作人员ProcessRequest(HttpWorkerRequest wr)，HttpRuntime根据内部的分工，最终由ProcessRequestInternal(HttpWorkerRequest wr)在流水线上进行生产，所以ProcessRequestInternal(HttpWorkerRequest wr)是我们分析的重点。<br>
                        <br>
&nbsp;ProcessRequestInternal的主要工作是：<br>
                        1.&nbsp;创建HttpContext实例。<br>
                        <br>
                        2.&nbsp;对第一次请求进行初始化(EnsureFirstRequestInit)。<br>
                        a) &nbsp;在EnsureFirstRequestInit中通过调用 System.Web.HttpRuntime.FirstRequestInit进行一些初始化工作，比如：将Web.Config配置读到到 RuntimeConfig中，从bin目录中装载所有dll文件。<br>
                        <br>
                        3.&nbsp;创建HttpWriter实例。<br>
                        <br>
                        4.&nbsp;通过调用HttpApplicationFactory.GetApplicationInstance创建HttpApplication实例。<br>
                        在HttpApplicationFactory.GetApplicationInstance中有三个关键方法：<br>
                        HttpApplicationFactory._theApplicationFactory.EnsureInited();<br>
                        HttpApplicationFactory._theApplicationFactory.EnsureAppStartCalled(context);<br>
                        HttpApplicationFactory._theApplicationFactory.GetNormalApplicationInstance(context);</p>
                      <p align="left">&nbsp;下面我们对这三个方法逐个进行分析：<br>
                        1)&nbsp;HttpApplicationFactory._theApplicationFactory.EnsureInited();<br>
&nbsp;&nbsp;&nbsp;&nbsp; 该方法检查HttpApplicationFactory是否被初始化，如果没有，就通过HttpApplicationFactory.Init()进行初始化。<br>
                        在Init()中，先获取global.asax文件的完整路径，然后调用CompileApplication()对global.asax进行编译。<br>
                        那编译是如何进行的呢？<br>
&nbsp;&nbsp;&nbsp;&nbsp; 编译的工作由BuildManager完成的。BuildManager先得到GlobalAsaxType(也就是HttpApplication)， 然后调用BuildManager.GetGlobalAsaxBuildResult（）=》 GetGlobalAsaxBuildResultInternal（）=》EnsureTopLevelFilesCompiled（）进行编译。<br>
&nbsp;&nbsp;&nbsp;&nbsp; 在EnsureTopLevelFilesCompiled中，先进行CompilationStage.TopLevelFiles编译，对下面三个目录中的文件进行编译：<br>
                        a.&nbsp;CompileResourcesDirectory();<br>
                        编译App_GlobalResources目录。<br>
                        b.&nbsp;CompileWebRefDirectory();<br>
                        编译App_WebReferences目录。<br>
                        c.&nbsp;CompileCodeDirectories();<br>
                        编译App_Code目录。</p>
                      <p align="left">&nbsp;&nbsp;&nbsp;&nbsp; 接着进行CompilationStage.GlobalAsax 编译，对global.asax进行编译，方法调用情况：CompileGlobalAsax()=》 ApplicationBuildProvider.GetGlobalAsaxBuildResult(BuildManager.IsPrecompiledApp)。<br>
&nbsp;&nbsp;&nbsp;&nbsp; 在GetGlobalAsaxBuildResult中具体的编译是由ApplicationBuildProvider与BuildProvidersCompiler共同完成的。<br>
&nbsp;&nbsp;&nbsp;&nbsp; BuildProvidersCompiler.PerformBuild();进行编译工作。<br>
&nbsp;&nbsp;&nbsp;&nbsp; ApplicationBuildProvider.GetBuildResult得到编译的结果。<br>
&nbsp;&nbsp;&nbsp;&nbsp; 编译成功后，会在C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727\Temporary ASP.NET Files\相应的目录中生成类似App_global.asax.mlgx7n2v.dll的dll文件。<br>
&nbsp;&nbsp;&nbsp;&nbsp; 编译生成的类名为ASP.global_asax，继承自HttpApplication。<br>
                        注：如果Web目录中没有Global.asax文件，就不会编译生成App_global.asax.mlgx7n2v.dll这样的文件。</p>
                      <p align="left">2)&nbsp;httpapplicationfactory._theapplicationfactory.ensureappstartcalled(context);<br>
&nbsp;&nbsp;&nbsp;&nbsp; 创建特定的HttpApplication实例，触发ApplicationOnStart事件，执行ASP.global_asax中的 Application_Start(object sender, EventArgs e)方法。这里创建的HttpApplication实例在处理完事件后，就被回收。</p>
                      <p align="left">3)&nbsp;httpapplicationfactory._theapplicationfactory.getnormalapplicationinstance(context);<br>
&nbsp;&nbsp;&nbsp;&nbsp; 该&nbsp;方法创建HttpApplication实例并进行初始化(调用System.Web.HttpApplication. InitInternal()方法)。<br>
                        创 建HttpApplication实例是根据实际的_theApplicationType进行创建。如果Web目录中没有global.asa文件，也 就是说没有动态编译生成ASP.global_asax类型，那就直接实例化HttpApplication。如果创建了ASP.global_asax 类型，那就对ASP.global_asa进行实例化。<br>
                        <br>
                        创建HttpApplication实例之后就是调用实例的InitInternal方法。<br>
                        InitInternal方法也是我们重点分析的方法，该方法的主要功能如下：<br>
                        1.&nbsp;InitModules()：根据Web.Config的设置，创建相应的HttpModules。<br>
                        <br>
                        2.&nbsp;HookupEventHandlersForAppplicationAndModules：根据发生的事件，调用HttpApplication实例中相应的事件处理函数。<br>
                        <br>
                        3.&nbsp; 创建很多实现IExecutionStep接口的类的实例并添加到当前HttpApplication实例的_execSteps中，等待回调时执行。从 这里我们可以看到HttpApplication是以异步的方式处理请求，对请求的很多处理工作都放入了_execStep等待回调时执行。<br>
                        _execStep中主要的处理工作如下：<br>
                        1)&nbsp;对请求的路径进行安全检查，禁止非法路径访问(ValidatePathExecutionStep)。<br>
                        2)&nbsp;如果设置了UrlMappings, 进行RewritePath(UrlMappingsExecutionStep)。<br>
                        3)&nbsp;执行事件处理函数，比如：BeginRequest、AuthenticateRequest等等。<br>
                        4)&nbsp;获取处理当前请求的HttpHandler，ASP.NET页面的动态编译也是在这里进行的。(MapHandlerExecutionStep)<br>
                        该处理是通过调用System.Web.HttpApplication. MapHttpHandler方法。<br>
                        在MapHttpHandler 中，首先根据访问的地址从web.config获取相应的实现IHttpHandlerFactory的类型。对于asp.net页面，默认是 PageHanlderFactory。然后创建PageHanlderFactory实例，调用GetHandlerHelper，在 GetHandlerHelper中调用BuildManager.CreateInstanceFromVirtualPath编译并创建当前请求的 ASP.NET页面的实例(如果已经编译过，直接从缓存中加载)。<br>
                        CreateInstanceFromVirtualPath经过几次方法调 用，将编译任务给了BuildManager. CompileWebFile()。CompileWebFile从web.config得到相应的BuildProvider，对于.aspx文件，相 应的BuildProvider是PageBuildProvider。PageBuildProvider是如何进行页面编译的，这里就不再就进一步分 析了，如果你感兴趣，可以进一步研究ASP.NET 2.0的源代码。<br>
                        5)&nbsp;调用相应HttpHandler的.ProcessRequest方法处理请求(如果是异步方式，调用BeginProcessReques)。（CallHandlerExecutionStep）<br>
                        6)&nbsp;将响应内容写入Filter。(CallFilterExecutionStep)</p>
                      <p align="left">5. 调用HttpApplication实例的BeginProcessRequest异步处理请求。<br>
&nbsp;&nbsp;&nbsp;&nbsp; 上面所讲的_execSteps中所发生的许多事情，都是在HttpRuntime调用HttpApplication BeginProcessRequest之后，在BeginProcessRequest中调用ResumeSteps后执行的。</p>
                      <p align="left">&nbsp;&nbsp;&nbsp;&nbsp; ASP.NET 2.0运行时是ASP.NET 2.0中非常复杂、难以理解也是很重要的部分，对ASP.NET 2.0运行时源代码的研究有处于我们加深对ASP.NET 2.0原理的理解，会给我们开发ASP.NET 2.0应用程序带来不少帮助。这篇文章是我初次学习ASP.NET 2.0运行时，为了帮助自己更好地理解ASP.NET 2.0运行时而写的，欢迎你对文章内容提出批评与建议。<br>
&nbsp;&nbsp;&nbsp;&nbsp; 我觉得写文章，不仅能提高自己的写作水平、方便交流，而且通过写文章，可以理清自己的思路、促进自己深入地思考从而加深自己对技术的理解，开发人员在编码之余抽点时间写些技术文章对提高自己还是很有帮助的。</p></td>
                  </tr>
                </tbody>
              </table></td>
          </tr>
        </tbody>
      </table>
      <!-- END TIDE_LOG_LIST -->
      <!-- BEGIN TIDE_LOG_LIST -->
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tbody>
          <tr>
            <td><table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img alt="" src="js大全_files/001_r6_c12.jpg" name="n001_r6_c12" border="0" height="26" width="34"></td>
                    <td class="td2" background="js大全_files/001_r6_c16.htm" width="69%"><img src="js大全_files/1.gif" alt="" border="0"><a class="td1" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;LogClassID=152">[ASP.NET2.0]</a><a class="td1" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=600">用ASP.NET还原与恢复Sql server</a></td>
                    <td width="2%"><img alt="" src="js大全_files/001_r6_c18.jpg" name="n001_r6_c18" border="0" height="26" width="17"></td>
                    <td class="td1" align="center" background="js大全_files/001_r6_c19.htm" width="19%">2006年10月4日</td>
                    <td align="right" background="js大全_files/001_r6_c19.htm" width="4%"><img alt="" src="js大全_files/001_r6_c20.jpg" name="n001_r6_c20" border="0" height="26" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table background="js大全_files/001_r8_c13.htm" border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img src="js大全_files/001_r8_c12.jpg" alt="" height="15" width="10"></td>
                    <td class="td3" align="right" width="90%"><a class="td3" href="http://13306525371.web133.com/UserInfoDetail.asp?UserID=2497" target="_blank">奕影残峰</a> <span class="date">@ 2006-10-4 17:16:30</span> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=600">阅读全文(505)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=600#c">评论(0)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;act=tb&amp;LogID=600">Trackback:(0)</a> <a href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;Date=2006-10-04#top"><img src="js大全_files/top.gif" alt="" border="0"></a></td>
                    <td align="right" width="4%"><img src="js大全_files/001_r8_c20.jpg" alt="" height="15" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td class="td1" align="center" height="215" valign="top"><br>
                      <p align="left">Author : 未知<br>
                        From: 网络 <br>
                        上次做了个项目，涉及到数据库的还原和恢复，到网上找了一下，是利用SQLDMO实现的，只要添加SQLDMO引用就好了，然后利用下边的类的方法就可以实现了。 </p>
                      <p align="left">　　我把原作者的类扩充了一下，可以自动识别web.config里 的数据库连接字符串，可以通过变量设置还原恢复的信息。</p>
                      <p align="left">　　需要注意的时还原，还原的时候问题最大了，有别的用户使用数据库的时候无法还原，解决办法就是在MASTER数据库中添加一个存储过程：</p>
                      <p class="code" align="left">　　create proc killspid （@dbname varchar（20））<br>
                        　　 as begin declare @sql nvarchar（500）<br>
                        　　 declare @spid int set @sql=’declare getspid cursor for select spid from sysprocesses where dbid=db_id（<a href="mailto:%E2%80%99%E2%80%99%E2%80%99+@dbname+%E2%80%99%E2%80%99%E2%80%99" target="_blank"><font color="#000000">’’’+@dbname+’’’</font></a>）’ exec （@sql）<br>
                        　　 open getspid fetch next from getspid into @spid while @@fetch_status&lt;&gt;-1 begin exec（’kill <a href="mailto:%E2%80%99+@spid" target="_blank"><font color="#000000">’+@spid</font></a>）<br>
                        　　 fetch next from getspid into @spid end close getspid deallocate getspid end GO</p>
                      <p align="left">　　在还原之前先执行这个存储过程，需要传递dbname，就是你的数据库的名字。下边是类的原代码：（web.config里的数据库连接字符串是constr） </p>
                      <p class="code" align="left">&nbsp;&nbsp;&nbsp; using System；<br>
&nbsp;&nbsp;&nbsp; using System.Configuration；<br>
&nbsp;&nbsp;&nbsp; using System.Data.SqlClient；<br>
&nbsp;&nbsp;&nbsp; using System.Data；<br>
&nbsp;&nbsp;&nbsp; namespace web.base_class<br>
&nbsp;&nbsp;&nbsp; ...{<br>
&nbsp;&nbsp;&nbsp; /**////<br>
&nbsp;&nbsp;&nbsp;&nbsp; /// DbOper类，主要应用SQLDMO实现对Microsoft SQL Server数据库的备份和恢复<br>
&nbsp;&nbsp;&nbsp; ///<br>
&nbsp;&nbsp;&nbsp;&nbsp; public class DbOper<br>
&nbsp;&nbsp;&nbsp; ...{<br>
&nbsp;&nbsp;&nbsp; private string server；<br>
&nbsp;&nbsp;&nbsp; private string uid；<br>
&nbsp;&nbsp;&nbsp; private string pwd；<br>
&nbsp;&nbsp;&nbsp; private string database；<br>
&nbsp;&nbsp;&nbsp; private string conn；<br>
&nbsp;&nbsp;&nbsp; /**////<br>
&nbsp;&nbsp;&nbsp;&nbsp; /// DbOper类的构造函数<br>
&nbsp;&nbsp;&nbsp; ///<br>
&nbsp;&nbsp;&nbsp;&nbsp; public DbOper（）<br>
&nbsp;&nbsp;&nbsp; ...{<br>
&nbsp;&nbsp;&nbsp; conn=System.Configuration.ConfigurationSettings.AppSettings["constr"].ToString （）；&nbsp;&nbsp;&nbsp; server=cut（conn，"server="，"；"）；<br>
&nbsp;&nbsp;&nbsp; uid=cut（conn，"uid="，"；"）；<br>
&nbsp;&nbsp;&nbsp; pwd=cut（conn，"pwd="，"；"）；<br>
&nbsp;&nbsp;&nbsp; database=cut（conn，"database="，"；"）；<br>
&nbsp;&nbsp;&nbsp; } <br>
&nbsp;&nbsp; public string cut（string str，string bg，string ed）<br>
&nbsp;&nbsp;&nbsp; ...{<br>
&nbsp;&nbsp;&nbsp; string sub；<br>
&nbsp;&nbsp;&nbsp; sub=str.Substring（str.IndexOf（bg）+bg.Length）；<br>
&nbsp;&nbsp;&nbsp; sub=sub.Substring（0，sub.IndexOf（"；"））；<br>
&nbsp;&nbsp;&nbsp; return sub；<br>
&nbsp;&nbsp;&nbsp; } <br>
&nbsp;&nbsp; /**////<br>
&nbsp;&nbsp;&nbsp;&nbsp; /// 数据库备份<br>
&nbsp;&nbsp;&nbsp; ///<br>
&nbsp;&nbsp;&nbsp;&nbsp; public bool DbBackup（string url）<br>
&nbsp;&nbsp;&nbsp; ...{&nbsp;&nbsp;&nbsp; SQLDMO.Backup oBackup = new SQLDMO.BackupClass（）；<br>
&nbsp;&nbsp;&nbsp; SQLDMO.SQLServer oSQLServer = new SQLDMO.SQLServerClass（）；<br>
&nbsp;&nbsp;&nbsp; try<br>
&nbsp;&nbsp;&nbsp; ...{<br>
&nbsp;&nbsp;&nbsp; oSQLServer.LoginSecure = false；<br>
&nbsp;&nbsp;&nbsp; oSQLServer.Connect（server，uid， pwd）；<br>
&nbsp;&nbsp;&nbsp; oBackup.Action = SQLDMO.SQLDMO_BACKUP_TYPE.SQLDMOBackup_Database；<br>
&nbsp;&nbsp;&nbsp; oBackup.Database = database；<br>
&nbsp;&nbsp;&nbsp; oBackup.Files = url；//"d：\Northwind.bak"；<br>
&nbsp;&nbsp;&nbsp; oBackup.BackupSetName = database；<br>
&nbsp;&nbsp;&nbsp; oBackup.BackupSetDescription = "数据库备份"；&nbsp;&nbsp;&nbsp; oBackup.Initialize = true；&nbsp;&nbsp;&nbsp; oBackup.SQLBackup（oSQLServer）；<br>
&nbsp;&nbsp;&nbsp; return true；<br>
&nbsp;&nbsp;&nbsp; } <br>
&nbsp;&nbsp; catch<br>
&nbsp;&nbsp;&nbsp; ...{<br>
&nbsp;&nbsp;&nbsp; return false；<br>
&nbsp;&nbsp;&nbsp; throw；<br>
&nbsp;&nbsp;&nbsp; } <br>
&nbsp;&nbsp; finally <br>
&nbsp;&nbsp; ...{<br>
&nbsp;&nbsp;&nbsp; oSQLServer.DisConnect（）；<br>
&nbsp;&nbsp;&nbsp; } <br>
&nbsp;&nbsp; } <br>
                        ///数据库恢复 ///<br>
&nbsp; public string DbRestore（string url）<br>
&nbsp;{ if（exepro（）！=true）<br>
                        //执行存储过程 { return "操作失败"； } <br>
                        else { SQLDMO.Restore oRestore = new SQLDMO.RestoreClass（）；<br>
&nbsp;SQLDMO.SQLServer oSQLServer = new SQLDMO.SQLServerClass（）；<br>
&nbsp;try { oSQLServer.LoginSecure = false； oSQLServer.Connect（server， uid， pwd）；<br>
&nbsp;oRestore.Action = SQLDMO.SQLDMO_RESTORE_TYPE.SQLDMORestore_Database；<br>
&nbsp;oRestore.Database = database；<br>
&nbsp;oRestore.Files = url；<br>
                        <a><font color="#000000">//@"d</font></a>：\Northwind.bak"；<br>
&nbsp;oRestore.FileNumber = 1；<br>
&nbsp;oRestore.ReplaceDatabase = true；<br>
&nbsp;oRestore.SQLRestore（oSQLServer）；<br>
&nbsp;return "ok"； } catch（Exception e）<br>
&nbsp;{ return "恢复数据库失败"；<br>
&nbsp;throw；<br>
&nbsp;} finally { oSQLServer.DisConnect（）；<br>
&nbsp;} } }<br>
&nbsp;&nbsp;&nbsp; private bool exepro（）<br>
&nbsp;{ SqlConnection conn1 = new SqlConnection（"server="+server+"；uid="+uid+"；pwd="+pwd+"；database=master"）；<br>
&nbsp;SqlCommand cmd = new SqlCommand（"killspid"，conn1）；<br>
&nbsp;cmd.CommandType = CommandType.StoredProcedure；<br>
&nbsp;cmd.Parameters.Add（"@dbname"，"port"）；<br>
&nbsp;try { conn1.Open（）；<br>
&nbsp;cmd.ExecuteNonQuery（）；<br>
&nbsp;return true；<br>
&nbsp;} <br>
                        catch（Exception ex）<br>
&nbsp;{ return false；<br>
&nbsp;} finally<br>
&nbsp;{ <br>
                        conn1.Close（）；<br>
&nbsp;} <br>
                        } <br>
                        } <br>
                        }</p></td>
                  </tr>
                </tbody>
              </table></td>
          </tr>
        </tbody>
      </table>
      <!-- END TIDE_LOG_LIST -->
      <!-- BEGIN TIDE_LOG_LIST -->
      <table border="0" cellpadding="0" cellspacing="0" width="100%">
        <tbody>
          <tr>
            <td><table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img alt="" src="js大全_files/001_r6_c12.jpg" name="n001_r6_c12" border="0" height="26" width="34"></td>
                    <td class="td2" background="js大全_files/001_r6_c16.htm" width="69%"><img src="js大全_files/1.gif" alt="" border="0"><a class="td1" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;LogClassID=152">[ASP.NET2.0]</a><a class="td1" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=599">解释：ASP.NET 2.0 中的 Windows 身份验证</a></td>
                    <td width="2%"><img alt="" src="js大全_files/001_r6_c18.jpg" name="n001_r6_c18" border="0" height="26" width="17"></td>
                    <td class="td1" align="center" background="js大全_files/001_r6_c19.htm" width="19%">2006年10月4日</td>
                    <td align="right" background="js大全_files/001_r6_c19.htm" width="4%"><img alt="" src="js大全_files/001_r6_c20.jpg" name="n001_r6_c20" border="0" height="26" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table background="js大全_files/001_r8_c13.htm" border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td width="6%"><img src="js大全_files/001_r8_c12.jpg" alt="" height="15" width="10"></td>
                    <td class="td3" align="right" width="90%"><a class="td3" href="http://13306525371.web133.com/UserInfoDetail.asp?UserID=2497" target="_blank">奕影残峰</a> <span class="date">@ 2006-10-4 17:13:06</span> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=599">阅读全文(433)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/view.asp?LogID=599#c">评论(4)</a> <a class="td3" href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;act=tb&amp;LogID=599">Trackback:(0)</a> <a href="http://13306525371.web133.com/UserBlogFile/index.asp?UserID=2497&amp;Date=2006-10-04#top"><img src="js大全_files/top.gif" alt="" border="0"></a></td>
                    <td align="right" width="4%"><img src="js大全_files/001_r8_c20.jpg" alt="" height="15" width="12"></td>
                  </tr>
                </tbody>
              </table>
              <table border="0" cellpadding="0" cellspacing="0" width="100%">
                <tbody>
                  <tr>
                    <td class="td1" align="center" height="215" valign="top"><br>
                      <p class="overview" align="left"><font size="2">适用于：ASP.NET 2.0 版 Windows Server 2003 Internet 信息服务 (IIS) 6.0 </font></p>
                      <p class="overview" align="left"><font size="2"><strong>摘要</strong>： 本教程阐释在 ASP.NET 2.0 版中，IIS 集成 Windows 身份验证以及 ASP.NET Windows 身份验证的工作机制。同时，阐释 NTLM 和 Kerberos 身份验证的工作机制。此外，本教程还阐释 WindowsAuthenticationModule 类如何构造 WindowsPrincipal 和 WindowsIdentity 对象，然后将这些对象附加到当前的 ASP.NET Web 请求以表示经过身份验证的用户。</font></p>
                      <h1 align="left">解释：ASP.NET 2.0 中的 Windows 身份验证</h1>
                      <h2 class="subtitle" align="left">&nbsp;</h2>
                      <div class="date" align="left">&nbsp;</div>
                      <div align="left">&nbsp;</div>
                      <h5 style="padding-top: 2px;" align="left">本页内容</h5>
                      <div style="margin-top: 3px; margin-bottom: 10px;" align="left"><strong><font size="2">目标 <br>
&nbsp;概述 <br>
&nbsp;IIS 身份验证 <br>
&nbsp;NTLM 身份验证 <br>
&nbsp;Kerberos 身份验证 <br>
&nbsp;ASP.NET 身份验证 <br>
&nbsp;安全上下文 <br>
&nbsp;模拟 <br>
&nbsp;委托 <br>
&nbsp;其他资源 <br>
&nbsp;反馈 <br>
&nbsp;技术支持 <br>
&nbsp;社区和新闻组 <br>
&nbsp;投稿人与审阅者</font></strong></div>
                      <a name="ekc"></a>
                      <h2 align="left">概述</h2>
                      <p align="left">身 份验证是一个验证客户端身份的过程，通常采用指定的第三方授权方式。客户端可能是最终用户、计算机、应用程序或服务。客户端的标识称为安全原则。为了使用 服务器应用程序进行验证，客户端提供某种形式的凭据来允许服务器验证客户端的标识。确认了客户端的标识后，应用程序可以授予执行操作和访问资源的原则。</p>
                      <p align="left">如 果应用程序使用 Active Directory 用户存储，则应该使用集成 Windows 身份验证。对 ASP.NET 应用程序使用集成 Windows 身份验证时，最好的方法是使用 ASP.NET 的 Windows 身份验证提供程序附带的 Internet 信息服务 (IIS) 身份验证方法。使用该方法，将自动创建一个 <strong>windowsprincipal</strong> 对象（封装一个 <strong>windowsidentity</strong> 对象）来表示经过身份验证的用户。您无需编写任何身份验证特定的代码。</p>
                      <p align="left">asp.net 还支持使用 Windows 身份验证的自定义解决方案（避开了 IIS 身份验证）。例如，可以编写一个根据 Active Directory 检查用户凭据的自定义 ISAPI 筛选器。使用该方法，必须手动创建一个 <strong>windowsprincipal</strong> 对象。</p>
                      <p align="left">本文阐释在具有 IIS 6.0 的 ASP.NET 2.0 中 Windows 身份验证的工作机制。</p>
                      <div style="margin-top: 3px; margin-bottom: 10px;" align="left"><a class="topofpage" href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/PAGExplained0001.mspx#top"></a>&nbsp;</div>
                      <a name="e4c"></a>
                      <h2 align="left">IIS 身份验证</h2>
                      <p align="left">如 果 ASP.NET 针对 Windows 身份验证进行配置，则 ASP.NET 依靠 IIS，利用配置好的身份验证模式对其客户端进行身份验证。IIS 通过检查特定应用程序的元数据库设置来确定其身份验证模式。成功验证某个用户的身份后，IIS 将代表经过身份验证的用户的 Windows 令牌传递给宿主 ASP.NET 的 ASP.NET 辅助进程 (w3wp.exe)。如果应用程序使用在 IIS 中配置的虚拟目录来支持匿名访问，该令牌代表匿名 Internet 用户帐户；否则，该令牌代表经过身份验证的用户。</p>
                      <p align="left">iis 支持以下身份验证模式： </p>
                      <div align="left">
                        <table align="left" border="0" cellpadding="0" cellspacing="0">
                          <tbody>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>匿名</strong>。 如果不需要对客户端进行身份验证（或者使用自定义身份验证机制，如窗体身份验证），则可将 IIS 配置为允许匿名访问。在该事件中，IIS 创建一个 Windows 令牌来表示具有相同匿名（或客人）帐户的所有匿名用户。默认的匿名帐户是 IUSR_MACHINENAME，其中 MACHINENAME 是安装期间指定的计算机的 NetBIOS 名称。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>基本</strong>。 基本身份验证要求用户以用户名和密码的形式提供凭据来证明他们的身份。基本身份验证基于 Internet 标准 RFC 2617，所有常用浏览器都支持它。用户的凭据以未加密的 Base64 编码格式从浏览器传送到 Web 服务器。为了更好保护这些凭据，只要在使用基本身份验证同时再使用安全套接字层 (SSL) 即可。由于 Web 服务器包含未加密的用户凭据，因此 ASP.NET 应用程序可以模拟调用方并使用他们的凭据来访问网络资源。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>集成的</strong><strong> Windows</strong>。 集成的 Windows 身份验证（以前称为 NTLM，也称为 Windows NT 质询/应答身份验证，Windows NT Challenge/Response）是使用 Kerberos v5 身份验证还是 NTLM 身份验证，取决于客户端和服务器的配置。服务器与客户端协商确定要使用的协议。如果满足以下条件，则使用 Kerberos 身份验证： </p>
                                <table border="0" cellpadding="0" cellspacing="0">
                                  <tbody>
                                    <tr>
                                      <td class="listBullet" valign="top">•</td>
                                      <td class="listItem"><p>asp.net Web 应用程序正在 NetworkService 帐户或自定义域帐户下运行。如果应用程序在本地帐户（如 Windows 2000 Server 上的 ASPNET 帐户）上运行，则使用 NTLM 身份验证。 </p></td>
                                    </tr>
                                    <tr>
                                      <td class="listBullet" valign="top">•</td>
                                      <td class="listItem"><p>域帐户的 Active Directory 中有一个服务主要名称 (SPN)，该域帐户用于运行客户端进行身份验证所使用的服务。 </p></td>
                                    </tr>
                                    <tr>
                                      <td class="listBullet" valign="top">•</td>
                                      <td class="listItem"><p>客户端计算机和服务器计算机至少需要运行 Windows 2000 Server，且处在相同的（即信任的）Windows 域中。</p></td>
                                    </tr>
                                  </tbody>
                                </table></td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <p align="left"><strong>注</strong> 默认情况下，对于 Windows Server 2003 操作系统启用集成 Windows 身份验证。然而，如果 Windows Server 2003 Service Pack 1 (SP1) 作为 Windows Server 2003 操作系统整合安装的一部分进行安装，则默认情况下禁用集成 Windows 身份验证。如果使用 SP1 升级 Windows Server 2003，则集成 Windows 身份验证的设置与其 Windows Server 2003 设置相同。</p>
                      <p align="left">应该使用集成 Windows 身份验证而不是基本身份验证，因为前者避免了通过网络传输用户凭据。由于 Kerberos v5 身份验证支持相互身份验证，因此用户还可以对正在连接的服务器进行身份验证。</p>
                      <p align="left">集成 Windows 身份验证最适合于 Intranet 环境，其中的客户端计算机和 Web 服务器计算机都是相同（即信任的）域的一部分。</p>
                      <div style="margin-top: 3px; margin-bottom: 10px;" align="left"><a class="topofpage" href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/PAGExplained0001.mspx#top"></a>&nbsp;</div>
                      <a name="ece"></a>
                      <h2 align="left">NTLM 身份验证</h2>
                      <p align="left">ntlm 是用于 Windows NT 和 Windows 2000 Server 工作组环境的身份验证协议。它还用在必须对 Windows NT 系统进行身份验证的混合 Windows 2000 Active Directory 域环境中。当 Windows 2000 Server 转换为不存在下层 Windows NT 域控制器的本机模式时，禁用 NTLM。然后 Kerberos v5 变成企业级的默认身份验证协议。</p>
                      <p align="left">ntlm 身份验证机制</p>
                      <p align="left">图 1 显示 NTLM 协议。</p>
                      <div align="left">
                        <div style="width: 443px;"><img alt="" src="js大全_files/kerberosauthentication.gif" border="0" height="310" width="443"><br>
                          <p class="figurecaption"><strong>图</strong><strong> 1. NTLM </strong><strong>质询</strong><strong>/</strong><strong>应答机制</strong></p>
                          <div class="figureRule"></div>
                        </div>
                      </div>
                      <p align="left">下面概述质询/应答机制： </p>
                      <div align="left">
                        <table align="left" border="0" cellpadding="0" cellspacing="0">
                          <tbody>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>用户请求访问</strong>。用户尝试通过提供用户凭据登录到客户端。登录前，客户端计算机缓存密码的哈希值并放弃密码。客户端向服务器发送一个请求，该请求包括用户名以及纯文本格式的请求。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>服务器发送质询消息</strong>。服务器生成一个称为质询的 16 字节随机数（即 NONCE），并将它发送到客户端。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>客户端发送应答消息</strong>。客户端使用由用户的密码生成的一个密码哈希值来加密服务器发送的质询。它以应答的形式将这个加密的质询发回到服务器。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>服务器将质询和应答发送到域控制器</strong>。服务器将用户名、原始质询以及应答从客户端计算机发送到域控制器。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>域控制器比较质询和应答以对用户进行身份验证</strong>。域控制器获取该用户的密码哈希值，然后使用该哈希值对原始质询进行加密。接下来，域控制器将加密的质询与客户端计算机的应答进行比较。如果匹配，域控制器则发送该用户已经过身份验证的服务器确认。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>服务器向客户端发送应答</strong>。假定凭据有效，服务器授予对所请求的服务或资源的客户端访问权。 </p></td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <div style="margin-top: 3px; margin-bottom: 10px;" align="left"><a class="topofpage" href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/PAGExplained0001.mspx#top"></a>&nbsp;</div>
                      <a name="ezf"></a>
                      <h2 align="left">Kerberos 身份验证</h2>
                      <p align="left">与 NTLM 身份验证相比，Kerberos 身份验证具有以下优势： </p>
                      <div align="left">
                        <table align="left" border="0" cellpadding="0" cellspacing="0">
                          <tbody>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>相互身份验证</strong>。当客户端使用 Kerberos v5 协议对特定服务器上的特定服务进行身份验证，Kerberos 为客户端提供网络上恶意代码不会模拟该服务的保证。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>委托支持</strong>。使用 Kerberos 身份验证对客户端进行身份验证的服务器可以模拟这些客户端，并使用该客户端的安全上下文访问网络资源。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>性能</strong>。Kerberos 身份验证提供优于 NTLM 身份验证的改进的性能。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>简化的信任管理</strong>。具有多个域的网络不再需要一组复杂的显式、点对点信任关系。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>互操作性</strong>。Microsoft 实现的 Kerberos 协议基于向 Internet 工程任务组 (IETF) 推荐的标准跟踪规范。因此，Windows 2000 中协议的实现为与其他网络的互操作奠定了基础（其中 Kerberos 版本 5 用于身份验证）。 </p></td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <p align="left">kerberos 身份验证机制</p>
                      <p align="left">图 2 显示 Kerberos 身份验证协议的简化视图。</p>
                      <div align="left">
                        <div style="width: 402px;"><img alt="" src="js大全_files/ntlmauthentication.gif" border="0" height="286" width="402"><br>
                          <p class="figurecaption"><strong>图</strong><strong> 2. Kerberos </strong><strong>身份验证</strong></p>
                          <div class="figureRule"></div>
                        </div>
                      </div>
                      <p align="left">当客户端对网络服务进行身份验证之后，kerberos v5 协议遵循以下步骤： </p>
                      <div align="left">
                        <table align="left" border="0" cellpadding="0" cellspacing="0">
                          <tbody>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>客户端从</strong><strong> KDC </strong><strong>请求</strong><strong> TGT</strong>。 用户试图通过提供用户凭据登录到客户端。客户端计算机上的 Kerberos 服务向密钥发行中心 (KDC) 发送一个 Kerberos 身份验证服务请求。该请求包含用户名、请求票证授予票证（ticket-granting ticket，TGT）所获取的服务信息，以及使用用户的长期密钥（即密码）加密的时间戳。 </p>
                                <p><strong>注</strong> 在 Windows 2000 Server 或 Windows Server 2003 操作系统上，域控制器充当 KDC，而 Active Directory 宿主安全帐户数据库。</p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>身份验证服务发送加密的</strong><strong> TGT </strong><strong>和会话密钥</strong>。KDC 为来自 Active Directory 的用户获取长期密钥（即密码），然后解密随请求一起传送的时间戳。如果该时间戳有效，则用户是真正的用户。KDC 身份验证服务创建一个登录会话密钥，并使用用户的长期密钥对该副本进行加密。然后，该身份验证服务创建一个 TGT，它包括用户信息和登录会话密钥。最后，该身份验证服务使用自己的密钥加密 TGT，并将加密的会话密钥和加密的 TGT 传递给客户端。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>客户端从</strong><strong> TGT </strong><strong>请求服务器访问</strong>。 客户端使用其长期密钥（即密码）解密登录会话密钥，并在本地缓存它。此外，客户端还将加密的 TGT 存储在它的缓存中。访问网络服务时，客户端向 KDC 票证授予服务（ticket-granting service，TGS）发送一个包含信息的请求，这些信息包括用户名、使用用户登录会话密钥加密的验证者消息、TGT，以及用户想访问的服务（和服务 器）名称。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>TGS </strong><strong>发送加密的会话密钥和票证</strong>。KDC 上的 TGS 使用自己的密钥解密 KDC 并提取登录会话密钥。它使用该登录会话密钥解密验证者消息（通常是时间戳）。如果验证者消息成功解密，TGS 从 TGT 提取用户信息，并使用用户信息创建一个用于访问该服务的服务会话密钥。它使用该用户的登录会话密钥对该服务会话密钥的一个副本进行加密，创建一个具有服务 会话密钥和用户信息的服务票证，然后使用该服务的长期密钥（密码）对该服务票证进行加密。然后，TGS 将加密的服务会话密钥和服务票证添加到客户端。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>客户端发送服务票证</strong>。客户端访问服务时，向服务器发送一个请求。该请求包含验证者消息（时间戳），该消息使用服务会话密钥和服务票证进行加密。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>服务器发送加密的时间戳以进行客户端验证</strong>。 服务器解密服务票证并提取服务会话密钥。通过使用服务会话密钥，服务器解密验证者消息（时间戳）并计算它。如果验证者通过测试，则服务器使用服务会话密钥 对验证者（时间戳）进行加密，然后将验证者传回到客户端。客户端解密时间戳，如果该时间戳与原始时间戳相同，则该服务是真正的，客户端继续连接。 </p></td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <p align="left">服务的主要名称</p>
                      <p align="left">kerberos v5 身份验证协议之所以使用服务的主要名称 (SPN)，原因如下： </p>
                      <div align="left">
                        <table align="left" border="0" cellpadding="0" cellspacing="0">
                          <tbody>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p>支持相互身份验证。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p>允许一个客户端请求票证，进而允许该客户端与特定服务通讯。 </p></td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <p align="left">例如，如果某个客户端需要获得一个票证，并对在侦听端口 4766 运行的计算机 (<strong>myserver</strong>) 上的特定服务 (<strong>myservice</strong>) 进行身份验证，则该客户端使用根据该信息构造的名称从 KDC 请求一个票证，如下所示：</p>
                      <div align="left">
                        <pre class="codeSample">MyService/MyServer:4766</pre>
                      </div>
                      <p align="left">在 Active Directory 中注册的 SPN 在该名称和运行所请求的服务的域帐户之间维护一个映射。通过使用该机制，恶意用户难以在网络上模拟服务。恶意用户必须禁用实际服务并从该网络移除实际服务 器。然后，恶意用户必须向网络中添加一台同名的新计算机并公开重复的服务。由于客户端使用具有相互身份验证的 Kerberos v5 协议，因此该客户端将无法使用重复的服务，除非它可以提供配置实际服务进行运行的域帐户的密码。</p>
                      <div style="margin-top: 3px; margin-bottom: 10px;" align="left"><a class="topofpage" href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/PAGExplained0001.mspx#top"></a>&nbsp;</div>
                      <a name="embac"></a>
                      <h2 align="left">ASP.NET 身份验证</h2>
                      <p align="left">iis 向 ASP.NET 传递代表经过身份验证的用户或匿名用户帐户的令牌。该令牌在一个包含在 <strong>iprincipal</strong> 对象中的 <strong>iidentity</strong> 对象中维护，<strong>iprincipal</strong> 对象进而附加到当前 Web 请求线程。可以通过 <strong>httpcontext.user</strong> 属性访问 <strong>iprincipal</strong> 和 <strong>iidentity</strong> 对象。这些对象和该属性由身份验证模块设置，这些模块作为 HTTP 模块实现并作为 ASP.NET 管道的一个标准部分进行调用，如图 3 所示。</p>
                      <div align="left">
                        <div style="width: 587px;"><img alt="" src="js大全_files/refaspnetpipelineprocessing.gif" border="0" height="322" width="587"><br>
                          <p class="figurecaption"><strong>图</strong><strong> 3. ASP.NET </strong><strong>管道</strong></p>
                          <div class="figureRule"></div>
                        </div>
                      </div>
                      <p align="left">asp.net 管道模型包含一个 <strong>httpapplication</strong> 对象、多个 HTTP 模块对象，以及一个 HTTP 处理程序对象及其相关的工厂对象。<strong>httpruntime</strong> 对象用于处理序列的开头。在整个请求生命周期中，<strong>httpcontext</strong> 对象用于传递有关请求和响应的详细信息。</p>
                      <p align="left">有关 ASP.NET 请求生命周期的详细信息，请参阅"ASP.NET Life Cycle"，网址是 <a href="http://msdn2.microsoft.com/library/ms227435%28en-us,vs.80%29.aspx"><font color="#0000ff">http://msdn2.microsoft.com/library/ms227435(en-US,VS.80).aspx</font></a>。</p>
                      <p align="left">身份验证模块</p>
                      <p align="left">asp.net 2.0 在计算机级别的 Web.config 文件中定义一组 HTTP 模块。其中包括大量身份验证模块，如下所示：</p>
                      <div align="left">
                        <pre class="codeSample">&lt;httpModules&gt;  &lt;add name="WindowsAuthentication"    type="System.Web.Security.WindowsAuthenticationModule" /&gt;  &lt;add name="FormsAuthentication"     type="System.Web.Security.FormsAuthenticationModule" /&gt;  &lt;add name="PassportAuthentication"     type="System.Web.Security.PassportAuthenticationModule" /&gt;&lt;/httpModules&gt;</pre>
                      </div>
                      <p align="left">只加载一个身份验证模块，这取决于该配置文件的 <strong>authentication</strong> 元素中指定了哪种身份验证模式。该身份验证模块创建一个 <strong>iprincipal</strong> 对象并将它存储在 <strong>httpcontext.user</strong> 属性中。这是很关键的，因为其他授权模块使用该 <strong>iprincipal</strong> 对象作出授权决定。 </p>
                      <p align="left">当 IIS 中启用匿名访问且 <strong>authentication</strong> 元素的 <strong>mode</strong> 属性设置为 <strong>none</strong> 时，有一个特殊模块将默认的匿名原则添加到 <strong>httpcontext.user</strong> 属性中。因此，在进行身份验证之后，<strong>httpcontext.user</strong> 绝不是一个空引用（在 Visual Basic 中为 <strong>nothing</strong>）。 </p>
                      <p align="left">windowsauthenticationmodule</p>
                      <p align="left">如果 Web.config 文件包含以下元素，则激活 <strong>windowsauthenticationmodule</strong> 类。</p>
                      <div align="left">
                        <pre class="codeSample">&lt;authentication mode="Windows" /&gt;</pre>
                      </div>
                      <p align="left"><strong>WindowsAuthenticationModule</strong> 类负责创建 <strong>windowsprincipal</strong> 和 <strong>windowsidentity</strong> 对象来表示经过身份验证的用户，并且负责将这些对象附加到当前 Web 请求。 </p>
                      <p align="left">对于 Windows 身份验证，遵循以下步骤： </p>
                      <div align="left">
                        <table align="left" border="0" cellpadding="0" cellspacing="0">
                          <tbody>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>WindowsAuthenticationModule</strong> 使用从 IIS 传递到 ASP.NET 的 Windows 访问令牌创建一个 <strong>windowsprincipal</strong> 对象。该令牌包装在 <strong>httpcontext</strong> 类的 <strong>workerrequest</strong> 属性中。引发 <strong>authenticaterequest</strong> 事件时，<strong>windowsauthenticationmodule</strong> 从 <strong>httpcontext</strong> 类检索该令牌并创建 <strong>windowsprincipal</strong> 对象。<strong>httpcontext.user</strong> 用该 <strong>windowsprincipal</strong> 对象进行设置，它表示所有经过身份验证的模块和 ASP.NET 页的经过身份验证的用户的安全上下文。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>WindowsAuthenticationModule</strong> 类使用 P/Invoke 调用 Win32 函数并获得该用户所属的 Windows 组的列表。这些组用于填充 <strong>windowsprincipal</strong> 角色列表。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>WindowsAuthenticationModule</strong> 类将 <strong>windowsprincipal</strong> 对象存储在 <strong>httpcontext.user</strong> 属性中。随后，授权模块用它对经过身份验证的用户授权。 </p>
                                <p><strong>注：</strong><strong>defaultauthenticationmodule</strong> 类（也是 ASP.NET 管道的一部分）将 <strong>thread.currentprincipal</strong> 属性设置为与 <strong>httpcontext.user</strong> 属性相同的值。它在处理 <strong>authenticaterequest</strong> 事件之后进行此操作。</p></td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <p align="left">授权模块</p>
                      <p align="left"><strong>WindowsAuthenticationModule</strong> 类完成其处理之后，如果未拒绝请求，则调用授权模块。授权模块也在计算机级别的 Web.config 文件中的 <strong>httpmodules</strong> 元素中定义，如下所示：</p>
                      <div align="left">
                        <pre class="codeSample">&lt;httpModules&gt;  &lt;add name="UrlAuthorization"     type="System.Web.Security.UrlAuthorizationModule" /&gt;  &lt;add name="FileAuthorization"     type="System.Web.Security.FileAuthorizationModule" /&gt;  &lt;add name="AnonymousIdentification"     type="System.Web.Security.AnonymousIdentificationModule" /&gt;&lt;/httpModules&gt;</pre>
                      </div>
                      <p align="left">urlauthorizationmodule</p>
                      <p align="left">调用 <strong>urlauthorizationmodule</strong> 类时，它在计算机级别或应用程序特定的 Web.config 文件中查找 <strong>authorization</strong> 元素。如果存在该元素，则 <strong>urlauthorizationmodule</strong> 类从 <strong>httpcontext.user</strong> 属性检索 <strong>iprincipal</strong> 对象，然后使用指定的动词（GET、POST 等）来确定是否授权该用户访问请求的资源。</p>
                      <p align="left">fileauthorizationmodule</p>
                      <p align="left">接下来，调用 <strong>fileauthorizationmodule</strong> 类。它检查 <strong>httpcontext.user.identity</strong> 属性中的 <strong>iidentity</strong> 对象是否是 <strong>windowsidentity</strong> 类的一个实例。如果 <strong>iidentity</strong> 对象不是 <strong>windowsidentity</strong> 类的一个实例，则 <strong>fileauthorizationmodule</strong> 类停止处理。 </p>
                      <p align="left">如果存在 <strong>windowsidentity</strong> 类的一个实例，则 <strong>fileauthorizationmodule</strong> 类调用 <strong>accesscheck</strong> Win32 函数（通过 P/Invoke）来确定是否授权经过身份验证的客户端访问请求的文件。如果该文件的安全描述符的随机访问控制列表 (DACL) 中至少包含一个 <strong>read</strong> 访问控制项 (ACE)，则允许该请求继续。否则，<strong>fileauthorizationmodule</strong> 类调用 <strong>httpapplication.completerequest</strong> 方法并将状态码 401 返回到客户端。 </p>
                      <div style="margin-top: 3px; margin-bottom: 10px;" align="left"><a class="topofpage" href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/PAGExplained0001.mspx#top"></a>&nbsp;</div>
                      <a name="ebjac"></a>
                      <h2 align="left">安全上下文</h2>
                      <p align="left">.net Framework 使用以下两个接口封装 Windows 令牌和登录会话： </p>
                      <div align="left">
                        <table align="left" border="0" cellpadding="0" cellspacing="0">
                          <tbody>

                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>System.Security.Principal.IPrincipal</strong></p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><strong>System.Security.Principal.IIdentity</strong>（它公开为 <strong>iprincipal</strong> 接口中的一个属性。） </p></td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <p align="left">httpcontext.user</p>
                      <p align="left">在 ASP.NET 中，用 <strong>windowsprincipal</strong> 和 <strong>windowsidentity</strong> 类表示使用 Windows 身份验证进行身份验证的用户的安全上下文。使用 Windows 身份验证的 ASP.NET 应用程序可以通过 <strong>httpcontext.user</strong> 属性访问 <strong>windowsprincipal</strong> 类。 </p>
                      <p align="left">要检索启动当前请求的 Windows 经过身份验证的用户的安全上下文，使用以下代码：</p>
                      <div align="left">
                        <pre class="codeSample">using System.Security.Principal;...// Obtain the authenticated user’s IdentityWindowsPrincipal winPrincipal = (WindowsPrincipal)HttpContext.Current.User;</pre>
                      </div>
                      <p align="left">windowsidentity.getcurrent</p>
                      <p align="left"><strong>WindowsIdentity.GetCurrent</strong> 方法可用于获得当前运行的 Win32 线程的安全上下文的标识。如果不使用模拟，线程继承 IIS 6.0（默认情况下的 NetworkService 帐户）上进程的安全上下文。 </p>
                      <p align="left">该安全上下文在访问本地资源时使用。通过使用经过身份验证的初始用户的安全上下文或使用固定标识，您可以使用模拟重写该安全上下文。 </p>
                      <p align="left">要检索运行应用程序的安全上下文，使用以下代码： </p>
                      <div align="left">
                        <pre class="codeSample">using System.Security.Principal;...// Obtain the authenticated user’s identity.WindowsIdentity winId = WindowsIdentity.GetCurrent();WindowsPrincipal winPrincipal = new WindowsPrincipal(winId);</pre>
                      </div>
                      <p align="left">thread.currentprincipal</p>
                      <p align="left">asp.net 应用程序中的每个线程公开一个 <strong>currentprincipal</strong> 对象，该对象保存经过身份验证的初始用户的安全上下文。该安全上下文可用于基于角色的授权。</p>
                      <p align="left">要检索线程的当前原则，使用以下代码：</p>
                      <div align="left">
                        <pre class="codeSample">using System.Security.Principal;...// Obtain the authenticated user’s identityWindowsPrincipal winPrincipal = (WindowsPrincipal) Thread.CurrentPrincipal();</pre>
                      </div>
                      <p align="left">表 1 显示从各种标识属性获得的结果标识，当您的应用程序使用 Windows 身份验证且 IIS 配置为使用集成 Windows 身份验证时，可以从 ASP.NET 应用程序使用这些标识属性。</p>
                      <div align="left">
                        <table id="ETKAC" class="dataTable" align="left" cellpadding="0" cellspacing="0">
                          <thead>
                            <tr>
                              <td class="tableHeader" colspan="3">表 1：线程公开的 CurrentPrincipal Object</td>
                            </tr>
                            <tr class="stdHeader" valign="top">
                              <td id="colEWKAC">Web.config 设置</td>
                              <td id="colE1KAC">变量位置</td>
                              <td id="colE5KAC" style="border-right: 1px solid rgb(204, 204, 204);">结果标识</td>
                            </tr>
                          </thead>
                          <tbody>
                            <tr class="record" valign="top">
                              <td><p class="lastincell">&lt;identity impersonate="true"/&gt;<br>
&lt;authentication mode="Windows" /&gt;</p></td>
                              <td><p class="lastincell">HttpContext<br>
                                  WindowsIdentity<br>
                                  线程</p></td>
                              <td style="border-right: 1px solid rgb(204, 204, 204);"><p class="lastincell">Domain\UserName<br>
                                  Domain\UserName<br>
                                  Domain\UserName </p></td>
                            </tr>
                            <tr class="evenRecord" valign="top">
                              <td><p class="lastincell">&lt;identity impersonate="false"/&gt;<br>
&lt;authentication mode="Windows" /&gt; </p></td>
                              <td><p class="lastincell">HttpContext<br>
                                  WindowsIdentity<br>
                                  线程</p></td>
                              <td style="border-right: 1px solid rgb(204, 204, 204);"><p class="lastincell">Domain\UserName<br>
                                  NT AUTHORITY\NETWORK SERVICE<br>
                                  Domain\UserName</p></td>
                            </tr>
                            <tr class="record" valign="top">
                              <td><p class="lastincell">&lt;identity impersonate="true"/&gt;<br>
&lt;authentication mode="Forms" /&gt;</p></td>
                              <td><p class="lastincell">HttpContext<br>
                                  WindowsIdentity<br>
                                  线程</p></td>
                              <td style="border-right: 1px solid rgb(204, 204, 204);"><p class="lastincell">用户提供的名称<br>
                                  Domain\UserName<br>
                                  用户提供的名称</p></td>
                            </tr>
                            <tr class="evenRecord" valign="top">
                              <td><p class="lastincell">&lt;identity impersonate="false"/&gt;<br>
&lt;authentication mode="Forms" /&gt;</p></td>
                              <td><p class="lastincell">HttpContext<br>
                                  WindowsIdentity<br>
                                  线程</p></td>
                              <td style="border-right: 1px solid rgb(204, 204, 204);"><p class="lastincell">用户提供的名称<br>
                                  NT AUTHORITY\NETWORK SERVICE<br>
                                  用户提供的名称</p></td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <div class="dataTableBottomMargin" align="left"></div>
                      <div style="margin-top: 3px; margin-bottom: 10px;" align="left"><a class="topofpage" href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/PAGExplained0001.mspx#top"></a>&nbsp;</div>
                      <a name="evnac"></a>
                      <h2 align="left">模拟</h2>
                      <p align="left">asp.net 应用程序可以使用模拟来执行操作，使用经过身份验证的客户端或特定 Windows 帐户的安全上下文来访问资源。 </p>
                      <p align="left">初始用户模拟</p>
                      <p align="left">要模拟初始（经过身份验证的）用户，请在 Web.config 文件中使用以下配置：</p>
                      <div align="left">
                        <pre class="codeSample">&lt;authentication mode="Windows" /&gt;&lt;identity impersonate="true" /&gt;</pre>
                      </div>
                      <p align="left">使用该配置，asp.net 始终模拟经过身份验证的用户，且所有资源访问均使用经过身份验证的用户的安全上下文执行。如果您的应用程序的虚拟目录上启用了匿名访问，则模拟 IUSR_MACHINENAME 帐户。 </p>
                      <p align="left">要暂时模拟经过身份验证的调用方，将 <strong>identity</strong> 元素的 <strong>impersonate</strong> 属性设置为 <strong>false</strong>，然后使用以下代码：</p>
                      <div align="left">
                        <pre class="codeSample">using System.Security.Principal;...// Obtain the authenticated user’s identity.WindowsIdentity winId = (WindowsIdentity)HttpContext.Current.User.Identity;WindowsImpersonationContext ctx = null;try{    // Start impersonating.    ctx = winId.Impersonate();    // Now impersonating.    // Access resources using the identity of the authenticated user.}// Prevent exceptions from propagating.catch{}finally{    // Revert impersonation.    if (ctx != null)        ctx.Undo();}// Back to running under the default ASP.NET process identity.</pre>
                      </div>
                      <p align="left">这段代码模拟经过身份验证的初始用户。在 <strong>httpcontext.current.user.identity</strong> 对象中维护初始用户的标识和 Windows 令牌。</p>
                      <p align="left">固定标识模拟</p>
                      <p align="left">如果需要在应用程序的整个生命周期中模拟相同的标识，可以在 Web.config 文件中的 <strong>identity</strong> 元素上指定凭据。以下示例显示如何模拟名为"TestUser"的 Windows 帐户。</p>
                      <p align="left">如 果使用该方法，应该对这些凭据进行加密。使用 ASP.NET 2.0，您可以使用 ASP.NET IIS 注册工具 (Aspnet_regiis.exe)。使用 ASP.NET 1.1 版，您可以使用 Aspnet_setreg.exe 实用工具。有关该实用工具的详细信息，请参阅 <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cptools/html/cpgrfaspnetiisregistrationtoolaspnet_regiisexe.asp"><font color="#0000ff">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/cptools/html/cpgrfaspnetiisregistrationtoolaspnet_regiisexe.asp</font></a>。</p>
                      <p align="left">要在 ASP.NET 应用程序中使用固定标识进行资源访问，可使用 Windows 2000 Server 或 Windows Server 2003 上的 <strong>identity</strong> 元素来配置凭据。如果正在运行 Windows Server 2003，其中的 IIS 6.0 配置为运行在辅助进程隔离模式下（默认情况），则可通过将 ASP.NET 应用程序配置为在自定义应用程序池（在特定的域标识下运行）中运行来避免模拟。然后，可以使用指定的域标识访问资源而无需使用模拟。</p>
                      <div style="margin-top: 3px; margin-bottom: 10px;" align="left"><a class="topofpage" href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/PAGExplained0001.mspx#top"></a>&nbsp;</div>
                      <a name="e6oac"></a>
                      <h2 align="left">委托</h2>
                      <p align="left">模拟只提供对本地资源的访问。委托是一个扩展的模拟功能，它允许您使用模拟令牌访问网络资源。</p>
                      <p align="left">如 果应用程序使用 Kerberos v5 身份验证对其用户进行身份验证，则可使用 Kerberos 委托在应用程序的各层传递用户标识并访问网络资源。如果应用程序不使用 Kerberos v5 身份验证，则可使用协议转换切换到 Kerberos，然后使用委托传递该标识。</p>
                      <p align="left">windows Server 2003 中的约束委托需要 Kerberos 身份验证。如果您的应用程序无法使用 Kerberos 身份验证对其调用方进行身份验证，您可以使用协议转换从可选的非 Windows 身份验证模式（如，窗体或证书身份验证）切换到 Kerberos 身份验证。然后，可使用具有约束委托的 Kerberos 访问下游网络资源。</p>
                      <p align="left">约束的和未约束的委托</p>
                      <p align="left">windows 2000 Server 上的 Kerberos 委托是<em>未约束的</em>。Active Directory 中配置了委托的服务器可在使用模拟的用户安全上下文的同时访问任何网络资源或网络上的任何计算机。这会带来潜在的安全威胁，尤其是 Web 服务器遭受恶意用户攻击时。</p>
                      <p align="left">为了解决该安全问题，windows Server 2003 引入了<em>约束的委托</em>。这使管理员能够在使用模拟的用户安全上下文时准确指定另一个服务器或域帐户可以访问的服务。</p>
                      <p align="left">配置委托</p>
                      <p align="left">要使用 Kerberos 委托，需要适当的 Active Directory 配置。</p>
                      <p align="left">要授予 Web 服务器委托客户端凭据的权限，请按以下方式配置 Active Directory： </p>
                      <div align="left">
                        <table align="left" border="0" cellpadding="0" cellspacing="0">
                          <tbody>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p>如果在 NetworkService 帐户下运行应用程序，Web 服务器计算机帐户必须在 Active Directory 中标记为受信任委托。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p>如果在自定义域帐户下运行应用程序，该用户帐户必须在 Active Directory 中标记为受信任委托。 </p></td>
                            </tr>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p>如果应用程序模拟一个用户帐户，请确保应用程序模拟的用户帐户在 Active Directory 中未标记为"敏感帐户，不能被委托"。 </p></td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                      <p align="left">有关协议转换和约束委托的详细信息，请参阅 <a href="http://msdn.microsoft.com/library/en-us/dnpag2/html/paght000024.asp" target="_blank"><font color="#0000ff">How To: Use Protocol Transition and Constrained Delegation in ASP.NET 2.0</font></a>。</p>
                      <div style="margin-top: 3px; margin-bottom: 10px;" align="left"><a href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/pagexplained0001.mspx#top"><img alt="返回页首" src="js大全_files/arrow_px_up.gif" border="0" height="9" width="7"></a><a class="topofpage" href="http://www.microsoft.com/china/msdn/library/webservices/asp.net/PAGExplained0001.mspx#top"><font color="#0000ff">返回页首</font></a></div>
                      <a name="ecaae"></a>
                      <h2 align="left">其他资源</h2>
                      <div align="left">
                        <table align="left" border="0" cellpadding="0" cellspacing="0">
                          <tbody>
                            <tr>
                              <td class="listBullet" valign="top">•</td>
                              <td class="listItem"><p><a href="http://msdn.microsoft.com/library/en-us/dnpag2/html/paght000025.asp" target="_blank"><font color="#0000ff">How To: Use Windows Authentication in ASP.NET 2.0</font></a></p></td>
                            </tr>
                          </tbody>
                        </table>
                      </div></td>
                  </tr>
                </tbody>
              </table></td>
          </tr>
        </tbody>
      </table>
      </p>
      </font>
      </p>
      <font size="2">
      <p></p>
      <p></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">(1)拖拽访问 <br>
        event.dataTransfer.setData(<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"URL"</span>,&nbsp;oImage.src); <br>
        sImageURL&nbsp;=&nbsp;event.dataTransfer.getData(<span style="color: rgb(255, 0, 255);">"URL"</span>) <br>
        (2)普通访问 <br>
        window.clipboardData.setData(<span style="color: rgb(255, 0, 255);">"Text"</span>,oSource.innerText); <br>
        window.clipboardData.getData(<span style="color: rgb(255, 0, 255);">"Text"</span></font></font>); </div>
      <p></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;HTML&gt; <br>
&lt;HEAD&gt; <br>
&lt;META&nbsp;NAME=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"save"</span>&nbsp;CONTENT=<span style="color: rgb(255, 0, 255);">"history"</span></font></font>&gt; <br>
&lt;STYLE&gt; <br>
&nbsp;&nbsp;&nbsp;.sHistory&nbsp; <br>
&lt;/STYLE&gt; <br>
&lt;/HEAD&gt; <br>
&lt;BODY&gt; <br>
&lt;INPUT&nbsp;class=sHistory&nbsp;type=text&nbsp;id=oPersistInput&gt; <br>
&lt;/BODY&gt; <br>
&lt;/HTML&gt; </div>
      <p></p>
      <p></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;html&gt; <br>
&lt;head&gt; <br>
&nbsp;&nbsp;&lt;meta&nbsp;http-equiv=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"Content-Type"</span>&nbsp;content=<span style="color: rgb(255, 0, 255);">"text/html;&nbsp;charset=gb2312"</span>&gt; <br>
&nbsp;&nbsp;&lt;noscript&gt;&lt;meta&nbsp;http-equiv=<span style="color: rgb(255, 0, 255);">"refresh"</span>&nbsp;content=<span style="color: rgb(255, 0, 255);">"0;url=about:noscript"</span>&gt;&lt;/noscript&gt; <br>
&nbsp;&nbsp;&lt;title&gt;屏蔽鼠标右键、Ctrl+N、Shift+F10、Alt+F4、F11、F5刷新、退格键&lt;/title&gt; <br>
&lt;/head&gt; <br>
&lt;body&gt; <br>
&lt;script&nbsp;language=<span style="color: rgb(255, 0, 255);">"Javascript"</span>&gt;&lt;!-- <br>
&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽鼠标右键、Ctrl+N、Shift+F10、F11、F5刷新、退格键 </span><br>
&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//Author:&nbsp;meizz(梅花雨)&nbsp;2002-6-18 </span><br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;document.oncontextmenu(){event.returnValue=<span style="color: rgb(0, 0, 255);">false</span>;}<span style="color: rgb(0, 128, 0);">//屏蔽鼠标右键 </span><br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;window.onhelp(){<span style="color: rgb(0, 0, 255);">return</span>&nbsp;<span style="color: rgb(0, 0, 255);">false</span>}&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽F1帮助 </span><br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;document.onkeydown() <br>
        { <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>&nbsp;((window.event.altKey)&amp;&amp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;((window.event.keyCode==37)||&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽&nbsp;Alt+&nbsp;方向键&nbsp;← </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(window.event.keyCode==39)))&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽&nbsp;Alt+&nbsp;方向键&nbsp;→ </span><br>
&nbsp;&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(<span style="color: rgb(255, 0, 255);">"不准你使用ALT+方向键前进或后退网页！"</span>); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.returnValue=<span style="color: rgb(0, 0, 255);">false</span>; <br>
&nbsp;&nbsp;} <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></font><font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(0, 128, 0);">/*&nbsp;注：这还不是真正地屏蔽&nbsp;Alt+&nbsp;方向键， <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;因为&nbsp;Alt+&nbsp;方向键弹出警告框时，按住&nbsp;Alt&nbsp;键不放， <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用鼠标点掉警告框，这种屏蔽方法就失效了。以后若 <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有哪位高手有真正屏蔽&nbsp;Alt&nbsp;键的方法，请告知。*/</span> <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>&nbsp;((event.keyCode==8)&nbsp;&nbsp;||&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽退格删除键 </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(event.keyCode==116)||&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽&nbsp;F5&nbsp;刷新键 </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(event.ctrlKey&nbsp;&amp;&amp;&nbsp;event.keyCode==82)){&nbsp;<span style="color: rgb(0, 128, 0);">//Ctrl&nbsp;+&nbsp;R </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.keyCode=0; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.returnValue=<span style="color: rgb(0, 0, 255);">false</span>; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>&nbsp;(event.keyCode==122){event.keyCode=0;event.returnValue=<span style="color: rgb(0, 0, 255);">false</span>;}&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽F11 </span><br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>&nbsp;(event.ctrlKey&nbsp;&amp;&amp;&nbsp;event.keyCode==78)&nbsp;event.returnValue=<span style="color: rgb(0, 0, 255);">false</span>;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽&nbsp;Ctrl+n </span><br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>&nbsp;(event.shiftKey&nbsp;&amp;&amp;&nbsp;event.keyCode==121)event.returnValue=<span style="color: rgb(0, 0, 255);">false</span>;&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽&nbsp;shift+F10 </span><br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>&nbsp;(window.event.srcElement.tagName&nbsp;==&nbsp;<span style="color: rgb(255, 0, 255);">"A"</span>&nbsp;&amp;&amp;&nbsp;window.event.shiftKey)&nbsp; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.event.returnValue&nbsp;=&nbsp;<span style="color: rgb(0, 0, 255);">false</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽&nbsp;shift&nbsp;加鼠标左键新开一网页 </span><br>
&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">if</span>&nbsp;((window.event.altKey)&amp;&amp;(window.event.keyCode==115))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 128, 0);">//屏蔽Alt+F4 </span><br>
&nbsp;&nbsp;{ <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.showModelessDialog(<span style="color: rgb(255, 0, 255);">"about:blank"</span>,<span style="color: rgb(255, 0, 255);">""</span>,<span style="color: rgb(255, 0, 255);">"dialogWidth:1px;dialogheight:1px"</span>); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(0, 0, 255);">return</span>&nbsp;<span style="color: rgb(0, 0, 255);">false</span></font></font>; <br>
&nbsp;&nbsp;, ;} <br>
        } <br>
&lt;/script&gt; <br>
        屏蔽鼠标右键、Ctrl+N、Shift+F10、Alt+F4、F11、F5刷新、退格键 <br>
&lt;/body&gt; <br>
&lt;/html&gt; </div>
      <p align="left"><strong>//屏蔽打印</strong> <br>
&lt;style&gt; <br>
        @media print{ <br>
        * <br>
        } <br>
&lt;/style&gt; </p>
  </font>
      <p></p>
      <p></p>
      <p></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;p&nbsp;&nbsp;style=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"page-break-after:always"</span>&gt;page1&lt;/p&gt;&nbsp;&nbsp; <br>
&lt;p&nbsp;&nbsp;style=<span style="color: rgb(255, 0, 255);">"page-break-after:always"</span></font></font>&gt;page2&lt;/p&gt;&nbsp;&nbsp; </div>
      <p></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;meta&nbsp;name=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"ROBOTS"</span>&nbsp;content=<span style="color: rgb(255, 0, 255);">"属性值"</span>&gt; <br>
        　　 其中属性值有以下一些: <br>
        　　 属性值为<span style="color: rgb(255, 0, 255);">"all"</span>:&nbsp;文件将被检索，且页上链接可被查询； <br>
        　　 属性值为<span style="color: rgb(255, 0, 255);">"none"</span>:&nbsp;文件不被检索，而且不查询页上的链接； <br>
        　　 属性值为<span style="color: rgb(255, 0, 255);">"index"</span>:&nbsp;文件将被检索； <br>
        　　 属性值为<span style="color: rgb(255, 0, 255);">"follow"</span>:&nbsp;查询页上的链接； <br>
        　　 属性值为<span style="color: rgb(255, 0, 255);">"noindex"</span>:&nbsp;文件不检索，但可被查询链接； <br>
        　　 属性值为<span style="color: rgb(255, 0, 255);">"nofollow"</span></font></font>:&nbsp; </div>
      <p></p>
      <p></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;script&nbsp;language=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"javascript"</span>&gt; <br>
        <span style="color: rgb(0, 0, 255);">function</span>&nbsp;cc() <br>
        { <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;e&nbsp;=&nbsp;event.srcElement; <br>
&nbsp;<span style="color: rgb(0, 0, 255);">var</span>&nbsp;r&nbsp;=e.createTextRange(); <br>
&nbsp;r.moveStart(’character’,e.value.length); <br>
&nbsp;r.collapse(<span style="color: rgb(0, 0, 255);">true</span>); <br>
&nbsp;r.select(); <br>
        } <br>
&lt;/script&gt; <br>
&lt;input&nbsp;type=text&nbsp;name=text1&nbsp;value=<span style="color: rgb(255, 0, 255);">"123"</span>&nbsp;onfocus=<span style="color: rgb(255, 0, 255);">"cc()"</span></font></font>&gt; </div>
      <p></p>
      <p></p>
      <p></p>
      <div style="border: 1px solid rgb(138, 138, 138); margin: 4px; padding: 4px; overflow: auto; font-size: 12px; font-family: Courier New; background-color: rgb(238, 238, 238);" align="left">&lt;META&nbsp;HTTP-EQUIV=<font face="Courier New"><font style="background-color: rgb(238, 238, 238);"><span style="color: rgb(255, 0, 255);">"pragma"</span>&nbsp;CONTENT=<span style="color: rgb(255, 0, 255);">"no-cache"</span>&gt; <br>
&lt;META&nbsp;HTTP-EQUIV=<span style="color: rgb(255, 0, 255);">"Cache-Control"</span>&nbsp;CONTENT=<span style="color: rgb(255, 0, 255);">"no-cache,&nbsp;must-revalidate"</span>&gt; <br>
&lt;META&nbsp;HTTP-EQUIV=<span style="color: rgb(255, 0, 255);">"expires"</span>&nbsp;CONTENT=<span style="color: rgb(255, 0, 255);">"0"</span></font></font>&gt; </div>
      <br>
      <br>
</div>
</body>
</html>
