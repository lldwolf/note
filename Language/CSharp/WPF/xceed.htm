<!DOCTYPE html>

<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
	<script type="text/javascript" src="../../../mylib/js/css.js"></script>
	<title>C#.net使用手册</title>
</head>
<body>
	<p id="title">Extended WPF Toolkit</p>

	<h1>简介</h1>
	<p><a href="http://wpftoolkit.codeplex.com/">http://wpftoolkit.codeplex.com/</a> 是 Extended WPF Toolkit 的官方网站。它提供了一些常用的WPF控件</p>
	<h1>BusyIndicator</h1>
	<p>用于显示一个进度条，指示UI正在忙着，并锁定界面。</p>
	<pre class="code" data-type="xml">&lt;Window
				  xmlns:toolkit=&quot;clr-namespace:Xceed.Wpf.Toolkit;assembly=WPFToolkit.Extended&quot;
				  ...
&gt;
	&lt;toolkit:BusyIndicator x:Name=&quot;bi&quot;
						   IsBusy=&quot;True&quot;&gt;
		&lt;toolkit:BusyIndicator.BusyContent&gt;
			&lt;TextBlock Text=&quot;In Process...&quot;&gt;&lt;/TextBlock&gt;
		&lt;/toolkit:BusyIndicator.BusyContent&gt;
		&lt;DockPanel&gt;
			...
		&lt;/DockPanel&gt;
	&lt;/toolkit:BusyIndicator&gt;
&lt;/Window&gt;</pre>
	<p>下面是一个完带的例子</p>
	<pre class="code" data-type="xml" data-collapsed="true" title="MainWindow.xaml">&lt;Window x:Class=&quot;WpfApplication1.MainWindow&quot;
		xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;
		xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;
		xmlns:toolkit=&quot;clr-namespace:Xceed.Wpf.Toolkit;assembly=WPFToolkit.Extended&quot;
		Title=&quot;MainWindow&quot;
		Height=&quot;350&quot;
		Width=&quot;525&quot;&gt;
	&lt;toolkit:BusyIndicator x:Name=&quot;bi&quot;
						   IsBusy=&quot;{Binding Path=InProcess}&quot;&gt;
		&lt;toolkit:BusyIndicator.BusyContent&gt;
			&lt;TextBlock Text=&quot;{Binding Path=BusyInfo}&quot;&gt;&lt;/TextBlock&gt;
		&lt;/toolkit:BusyIndicator.BusyContent&gt;
		&lt;DockPanel&gt;
			&lt;Button DockPanel.Dock=&quot;Bottom&quot; Click=&quot;Button_Click&quot;&gt;Start&lt;/Button&gt;
			&lt;Viewbox Margin=&quot;50, 50, 50, 50&quot;&gt;
				&lt;StackPanel HorizontalAlignment=&quot;Center&quot;
							VerticalAlignment=&quot;Center&quot;&gt;
					&lt;TextBlock x:Name=&quot;txtTitle&quot;
							   FontSize=&quot;80&quot;
							   FontStyle=&quot;Oblique&quot;
							   Text=&quot;Progress Bar Demo&quot;
							   Foreground=&quot;Teal&quot;&gt;

					&lt;/TextBlock&gt;
				&lt;/StackPanel&gt;
			&lt;/Viewbox&gt;
		&lt;/DockPanel&gt;
	&lt;/toolkit:BusyIndicator&gt;
&lt;/Window&gt;</pre>
	<br />
	<pre class="code" data-type="csharp" data-collapsed="true" title="MainWindow.xaml.cs">using System.Windows;

namespace WpfApplication1
{
	public partial class MainWindow : Window
	{
		public MainWindow()
		{
			InitializeComponent();
			this.DataContext = new ProgressViewModel();
		}

		private void Button_Click(object sender, RoutedEventArgs e)
		{
			ProgressViewModel vm = this.DataContext as ProgressViewModel;
			vm.InProcess = true;
			vm.Start();

		}
	}
}</pre>
	<br />
	<pre class="code" data-type="csharp" data-collapsed="true" title="ProgressViewModel.xaml.cs">using System.ComponentModel;
using System.Threading;
using System.Threading.Tasks;

namespace WpfApplication1
{
	public class ProgressViewModel : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected void RaisePropertyChanged(string propName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propName));
			}
		}

		private bool inProcess;
		public bool InProcess
		{
			get { return this.inProcess; }
			set
			{
				if (this.inProcess != value)
				{
					this.inProcess = value;
					RaisePropertyChanged("InProcess");
				}
			}
		}

		private string busyInfo;
		public string BusyInfo
		{
			get { return this.busyInfo; }
			set
			{
				if (this.busyInfo != value)
				{
					this.busyInfo = value;
					RaisePropertyChanged("BusyInfo");
				}
			}
		}

		public void Start()
		{
			this.BusyInfo = "Processing...";
			this.InProcess = true;
			TaskScheduler uiScheduler = TaskScheduler.FromCurrentSynchronizationContext();
			Task task = Task.Factory.StartNew(() => Thread.Sleep(2000));
			task.ContinueWith(t => this.InProcess = false, CancellationToken.None, TaskContinuationOptions.None, uiScheduler);
		}
		
	}
}</pre>
	<p><a href="sample/ProgressWindow.zip">示例下载</a></p>

</body>
</html>
