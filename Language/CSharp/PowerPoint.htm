<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
    <title>PowerPoint的二次开发</title>
    <script type="text/javascript" src="../../mylib/js/css.js"></script>
</head>
<body>
<p id="title">PowerPoint的二次开发</p>

<h1>PowerPoint COM 对象</h1>
<table style="width:80%">
    <tr>
        <th>对象名</th>
        <th>对应</th>
    </tr>
    <tr>
        <td>Application</td>
        <td>PowerPoint 应用程序</td>
    </tr>
    <tr>
        <td>Presentation</td>
        <td>PowerPoint 文档</td>
    </tr>
    <tr>
        <td>Slide</td>
        <td>PowerPoint 幻灯片</td>
    </tr>
    <tr>
        <td>Shape</td>
        <td>幻灯片上的对象</td>
    </tr>
</table>
<h1>PowerPoint 常用操作</h1>
<h2>启动 PowerPoint</h2>
<pre class="code" data-type="csharp">PowerPoint.Application pptApp = new PowerPoint.ApplicationClass();</pre>
<p>值得注意的是，虽然 Application 提供 Visible 属性，但是如果通过将其设为 false 的方式隐藏 PowerPoint。则在打开文件时会出错，参看下一节“打开 PowerPoint 文件”</p>
<h2>打开 PowerPoint 文件</h2>
<pre class="code" data-type="csharp">object[] Params = new object[4];
Params[0] = fileName;   //文件名
Params[1] = Missing.Value;  //是否只读，默认可读写
Params[2] = -1;     //是否为非命名状态，如为非命名状态，保存时会提示输入文件名(模板方式)
Params[3] = -1;      //是否使用窗口
PowerPoint.Presentation pptDoc = pptApp.Presentations.GetType().InvokeMember("Open", BindingFlags.InvokeMethod, null, pptApp.Presentations, Params) as PowerPoint.Presentation;</pre>
<p>对于第四个参数，正常状态为使用窗口。但如果 PowerPoint.Application.Visible 为 false，则必须传入 0，以达到隐藏窗口的效果。</p>
<p>对于 PowerPoint 2000，重新将 Application.Visible 设为 true 可显示出所有的窗口，但若为 2003 版本，则无法显示，需要重新以使用窗口的方式打开文件。</p>
<h2>复制幻灯片</h2>
<p>VBA</p>
<pre class="code" data-type="csharp">Sub CloneNew()

    Call ActivePresentation.Slides(1).Copy
    Call ActivePresentation.Slides.Range.Select
    Call Application.Windows(1).View.Paste

End Sub</pre>
<p>C#</p>
<pre class="code" data-type="csharp">void CloneNew()
{
    PowerPoint.Presentation pptDoc = ...;
    PowerPoint.Slide firstSlide = pptDoc.Slides[1];
    firstSlide.Copy();
    pptDoc.Slides.Paste(pptDoc.Slides.Count);
}</pre>
<h1>操作PowerPoint对象</h1>
<h2>对象类型</h2>
<p>Shape是幻灯片上的基本对象，可通过其Type只来获取其类型信息(VBA类型为MsoShapeType枚举)，如下表所示：</p>
<table style="width:95%">
    <tr>
        <th>MsoShapeType</th>
        <th>对应整型值</th>
        <th>对象类型</th>
        <th>创建方法</th>
    </tr>
    <tr>
        <td>msoShapeTypeMixed</td>
        <td>-2</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoAutoShape</td>
        <td>1</td>
        <td>自动图形（Drawing 面板自带的矩形、圆形、线条等）</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoCallout</td>
        <td>2</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoChart</td>
        <td>3</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoComment</td>
        <td>4</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoFreeform</td>
        <td>5</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoGroup</td>
        <td>6</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoEmbeddedOLEObject</td>
        <td>7</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoFormControl</td>
        <td>8</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoLine</td>
        <td>9</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoLinkedOLEObject</td>
        <td>10</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoLinkedPicture</td>
        <td>11</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoOLEControlObject</td>
        <td>12</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoPicture</td>
        <td>13</td>
        <td>图片</td>
        <td>Slide.Shapes.AddPicture</td>
    </tr>
    <tr>
        <td>msoPlaceholder</td>
        <td>14</td>
        <td>占位符，如幻灯片的标题行</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoTextEffect</td>
        <td>15</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoMedia</td>
        <td>16</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoTextBox</td>
        <td>17</td>
        <td>文本框</td>
        <td>Slide.Shapes.AddTextbox</td>
    </tr>
    <tr>
        <td>msoScriptAnchor</td>
        <td>18</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoTable</td>
        <td>19</td>
        <td>表格</td>
        <td>Slide.Shapes.AddTable</td>
    </tr>
    <tr>
        <td>msoCanvas</td>
        <td>20</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoDiagram</td>
        <td>21</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoInk</td>
        <td>22</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
    <tr>
        <td>msoInkComment</td>
        <td>23</td>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
    </tr>
</table>
<h2>对象通用操作</h2>
<h3>文本内容</h3>
<pre class="code" data-type="csharp">Shape.TextFrame.TextRange.Text</pre>
<h3>文本字体</h3>
<pre class="code" data-type="csharp">Shape.TextFrame.TextRange.Font</pre>
<p>注意：设置文本字体时，需在写完文本内容后进行。</p>
<h2>表格</h2>
<p><b>创建、填充、格式化</b></p>
<p>VBA</p>
<pre class="code" data-type="csharp">Sub CreateTable()
    
    Dim t As Shape
    Dim iRow As Integer, iCol As Integer
    Set t = Application.Presentations(1).Slides(1).Shapes.AddTable(9, 9)
    t.table.Rows(1).Height = 50
    t.table.Columns(1).Width = 100
    
    t.Top = t.Top + 10
    For iRow = 1 To 9
        For iCol = 1 To 9
            t.table.Cell(iRow, iCol).Shape.TextFrame.TextRange.Text = iRow * iCol
        Next iCol
    Next iRow
    t.table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Size = 40
    t.table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Bold = msoCTrue
    t.table.Cell(1, 1).Shape.TextFrame.TextRange.Font.Color.RGB = RGB(255, 0, 0)
    t.table.Cell(1, 2).Shape.TextFrame.TextRange.Font.Size = 12
    t.table.Cell(1, 2).Shape.TextFrame.TextRange.Text = &quot;tt&quot; &amp; Chr(13) &amp; &quot;ss&quot;

End Sub</pre>
<p>注意：在PowerPoint中，换行符为"\r"（即0x0D），更紧凑的换行符为"\v"(即0x0B)。</p>
<h2>自动图形</h2>
<h3>设置格式</h3>
<pre class="code" data-type="csharp">Set curSlide = Application.Presentations(1).Slides(2)
Set frameShape = curSlide.Shapes.AddShape(msoShapeRectangle, 10, 50, 100, 100)
frameShape.Line.ForeColor.RGB = RGB(150, 150, 150)  '设置边框线颜色
frameShape.Fill.ForeColor.RGB = RGB(255, 255, 255)  '设置填充色
</pre>
<h2>获取选中的对象</h2>
<pre class="code" data-type="csharp">Dim pptDoc As PowerPoint.Presentation
Set pptDoc = Application.Presentations(1)
MsgBox pptDoc.Windows(1).Selection.ShapeRange.Type</pre>
<h1>接口封装</h1>
<pre class="code" data-type="csharp">public static void SetVisible(PowerPoint.Application pptApp, bool visible)
{
	object[] Params = new object[1];
	Params[0] = visible ? -1 : 0;
	pptApp.GetType().InvokeMember(&quot;Visible&quot;, BindingFlags.SetProperty, null, pptApp, Params);

}

public static PowerPoint.Presentation OpenFile(PowerPoint.Application pptApp, string fileName, bool isTemplate, bool visible)
{
	//pptApp.Presentations.Open(fileName, MsoTriState.msoFalse, MsoTriState.msoTrue, MsoTriState.msoTrue);
	object[] Params = new object[4];
	Params[0] = fileName;
	Params[1] = Missing.Value;
	Params[2] = isTemplate ? -1 : 0;
	Params[3] = visible ? -1 : 0;
	return pptApp.Presentations.GetType().InvokeMember(&quot;Open&quot;, BindingFlags.InvokeMethod, null, pptApp.Presentations, Params) as PowerPoint.Presentation;
}

public static PowerPoint.Shape AddPicture(PowerPoint.Slide slide, string fileName, float x, float y, float width, float height)
{
	object[] Params = new object[7];
	Params[0] = fileName;
	Params[1] = 0;
	Params[2] = -1;
	Params[3] = x;
	Params[4] = y;
	Params[5] = width;
	Params[6] = height;
	return slide.Shapes.GetType().InvokeMember(&quot;AddPicture&quot;, BindingFlags.InvokeMethod, null, slide.Shapes, Params) as PowerPoint.Shape;
}

public static void SavePPT(PowerPoint.Presentation doc, string fileName)
{
	//doc.SaveAs(fileName, PowerPoint.PpSaveAsFileType.ppSaveAsDefault, MsoTriState.msoTrue);
	object[] Params = new object[3];
	Params[0] = fileName;
	Params[1] = Missing.Value;
	Params[2] = Missing.Value;
	doc.GetType().InvokeMember(&quot;SaveAs&quot;, BindingFlags.InvokeMethod, null, doc, Params);
}</pre>

</body>
</html>
