<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
    <title>DevExpress WPF 训练题 - 内嵌 LookUpEdit</title>
    <script type="text/javascript" src="../../../mylib/js/css.js"></script>
</head>

<body>
    <p id="title">DevExpress WPF 训练题 - 内嵌 LookUpEdit</p>
    <h1>要求</h1>
    <p>界面如下所示</p>
    <p><img alt="" src="img/xpf_test_grid_lookupedit.png" /></p>
    <p>国家列表由静态数据源提供</p>
    <h1>xaml</h1>
    <pre class="code" data-type="xml">&lt;Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:model="clr-namespace:DXWPFApplication1.Model"
        x:Class="DXWPFApplication1.GridEditorLookUpEditWindow"
        Title="GridEditorLookUpEditWindow"
        Height="500"
        Width="700"&gt;
    &lt;Window.Resources&gt;
        &lt;x:StaticExtension x:Key="dataProvider"
                           Member="model:DemoDataProvider.Instance" /&gt;
    &lt;/Window.Resources&gt;
    &lt;DockPanel&gt;
        &lt;dxg:GridControl x:Name="gridControl"
                         ItemsSource="{Binding}"
                         AutoGenerateColumns="AddNew"
                         EnableSmartColumnsGeneration="True"&gt;
            &lt;dxg:GridControl.View&gt;
                &lt;dxg:TableView AllowPerPixelScrolling="True"
                               NewItemRowPosition="Bottom"
                               ShowTotalSummary="True" /&gt;
            &lt;/dxg:GridControl.View&gt;
            &lt;dxg:GridControl.Columns&gt;
                &lt;dxg:GridColumn FieldName="Name"
                                Header="Name" /&gt;
                &lt;dxg:GridColumn FieldName="Country"
                                Header="Country"&gt;
                    &lt;dxg:GridColumn.CellTemplate&gt;
                        &lt;DataTemplate&gt;
                            &lt;dxg:LookUpEdit x:Name="PART_Editor"
                                            IsTextEditable="False"
                                            AutoPopulateColumns="False"
                                            ItemsSource="{Binding Path=CountryList, Source={StaticResource ResourceKey=dataProvider}}"
                                            ValueMember="CountryCode"
                                            DisplayMember="CountryName"
                                            AllowSpinOnMouseWheel="False"
                                            PopupWidth="500"&gt;
                                &lt;dxg:LookUpEdit.PopupContentTemplate&gt;
                                    &lt;ControlTemplate&gt;
                                        &lt;dxg:GridControl x:Name="PART_GridControl"
                                                         AutoPopulateColumns="False"&gt;
                                            &lt;dxg:GridControl.View&gt;
                                                &lt;dxg:TableView AutoWidth="True"
                                                               ShowGroupPanel="False"
                                                               AllowGrouping="False"
                                                               AllowEditing="False" /&gt;
                                            &lt;/dxg:GridControl.View&gt;
                                            &lt;dxg:GridControl.Columns&gt;
                                                &lt;dxg:GridColumn Header="Country Code"
                                                                FieldName="CountryCode" /&gt;
                                                &lt;dxg:GridColumn Header="Country"
                                                                FieldName="CountryName" /&gt;
                                            &lt;/dxg:GridControl.Columns&gt;
                                        &lt;/dxg:GridControl&gt;
                                    &lt;/ControlTemplate&gt;
                                &lt;/dxg:LookUpEdit.PopupContentTemplate&gt;
                            &lt;/dxg:LookUpEdit&gt;
                        &lt;/DataTemplate&gt;
                    &lt;/dxg:GridColumn.CellTemplate&gt;
                &lt;/dxg:GridColumn&gt;
            &lt;/dxg:GridControl.Columns&gt;
        &lt;/dxg:GridControl&gt;
    &lt;/DockPanel&gt;
&lt;/Window&gt;</pre>
    <h1>xaml.cs</h1>
    <pre class="code" data-type="csharp">using System.Data;
using System.Windows;

namespace DXWPFApplication1
{
    public partial class GridEditorLookUpEditWindow : Window
    {
        public GridEditorLookUpEditWindow()
        {
            InitializeComponent();

            DataTable tb = new DataTable();
            tb.Columns.Add("Name", typeof(string));
            tb.Columns.Add("Country", typeof(string));
            this.DataContext = tb;
        }
    }
}</pre>
    <h1>Lookup 数据源</h1>
    <pre class="code" data-type="csharp">using System.Collections.Generic;

namespace DXWPFApplication1.Model
{
    internal class DemoDataProvider
    {
        private static DemoDataProvider instance = new DemoDataProvider();
        public static DemoDataProvider Instance
        {
            get { return instance; }
        }

        public DemoDataProvider()
        {
            CountryList = Country.GetTestingData();
        }

        public List&lt;Country&gt; CountryList { get; private set; }
    }

	public class Country
	{
		public string CountryCode { get; set; }
		public string CountryName { get; set; }

		public static List&lt;Country&gt; GetTestingData()
		{
			List&lt;Country&gt; countries = new List&lt;Country&gt;();
			countries.Add(new Country()
			{
				CountryCode = "CA",
				CountryName = "Canada"
			});
			countries.Add(new Country()
			{
				CountryCode = "CN",
				CountryName = "China" });
			
			countries.Add(new Country()
			{
				CountryCode = "GB",
				CountryName = "United Kingdom"
			});
			countries.Add(new Country()
			{
				CountryCode = "US",
				CountryName = "United States"
			});

			return countries;
		}

		public override string ToString()
		{
			return this.CountryName + "(" + this.CountryCode + ")";
		}
	}
}
</pre>
    </body>
</html>
