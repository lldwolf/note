<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
	<script type="text/javascript" src="../../mylib/js/css.js"></script>
	<title>Java 笔记</title>
</head>

<body>
	<p id="title">文件系统</p>
	<h1>文本文件</h1>
	<h2>基本 I/O</h2>
	<h3>读文本文件</h3>
	<p>下例展示了如何读取一个文本文件内容</p>
	<pre class="code" data-type="java" data-collapsed="false" title="文本文件读取示例代码">import java.io.BufferedReader;
import java.io.FileReader;

public class FileTest {
	
	public static void main(String[] args) throws Exception {
		String configPath = "c:/temp/reg.txt";
		BufferedReader reader = new BufferedReader(new FileReader(configPath));
		String line;

		while ((line = reader.readLine()) != null) {
			System.out.println(line);
		}
	}

}</pre>
    <h1>二进制文件</h1>
    <p>二进制文件读写示例</p>
    <pre class="code" data-type="java" data-collapsed="false" title="文本文件读取示例代码">
package lld.test;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

public class FileTest4Binary {
	private static final String FILE_NAME = "C:\\Temp\\test.png";
	private static final String OUTPUT_FILE_NAME = "C:\\Temp\\test_copy.png";

	public static void main(String... aArgs) throws IOException {
		FileTest4Binary binary = new FileTest4Binary();
		byte[] bytes = binary.readSmallBinaryFile(FILE_NAME);
		printBytes(bytes);
		log("Small - size of file read in:" + bytes.length);
		binary.writeSmallBinaryFile(bytes, OUTPUT_FILE_NAME);
	}

	public byte[] readSmallBinaryFile(String aFileName) throws IOException {
		Path path = Paths.get(aFileName);
		return Files.readAllBytes(path);
	}

	public void writeSmallBinaryFile(byte[] aBytes, String aFileName) throws IOException {
		Path path = Paths.get(aFileName);
		Files.write(path, aBytes); // creates, overwrites
	}

	private static void log(Object msg) {
		System.out.println(msg);
	}
	
	private static void printBytes(byte[] bytes) {
		if (bytes == null) {
			log("bytes is empty.");
			return;
		}
		
		int maxChar = 16 * 2;
		int counter = 0;
		StringBuilder buffer = new StringBuilder();
		
		for (byte b : bytes) {
			buffer.append(String.format("%02X ", b));
			counter++;
			
			if (counter % maxChar == 0) {
				buffer.append("\n");
			}
		}
		
		log(buffer.toString());
	}

}
</pre>
    <h1>Appache Commons IO</h1>
    <h2>简介</h2>
    <p>官方网址 <a href="http://commons.apache.org/proper/commons-io/">http://commons.apache.org/proper/commons-io/</a>.</p>
    <p>常用功能示例</p>
    <table style="width:95%">
    <tr>
    <th>功能</th>
    <th>示例代码</th>
		</tr>
    <tr>
    <td>取文件的扩展名</td>
    <td>
    <pre class="code" data-type="java">import org.apache.commons.io.FilenameUtils;
String ext = FilenameUtils.getExtension(fileName);</pre>
			</td>
		</tr>
	</table>
	
	</body>
</html>
