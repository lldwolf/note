<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>系统架构</title>
</head>

<body>
<h1>第二章 ORACLE的系统架构</h1>
<h2>2.1 OEM的体系结构</h2>
<p>现在使用的一般都是Oracle Enterprise Manager (EM) 2.2版，实现了3层结构，其组成如下:</p>
<p> 第一层是客户端工具，如：EM Console, DBA Management Pack和其他集成的Oracle应用。这些工具是从Windows NT, Windows 95, Windows 98或Sun Solaris机器的本地启动的。这些工具也可以是通过浏览器下载下来的JAVA applet。</p>
<p>第二层，也就是中间层由安装在Windows NT/2000或Sun Solaris server上的Oracle Management Server (OMS)构成。很多工具都要求先配置好OMS。OMS提供了:</p>
<ul>
  <li>   访问EM库（Repository）中的信息</li>
  <li> 分派控制台的请求</li>
  <li>控制任务执行</li>
  <li>监控事件</li>
  <li>通过电子邮件或寻呼提示任务的完成或事件发生</li>
</ul>
<p>多个OMS能够提供:</p>
<ul>
  <li> 无需额外的管理，就可以实现负载的分布</li>
  <li> 工作量能够自动地被共享和均衡</li>
  <li>容错：一个OMS可以重做另外一个OMS的工作量</li>
</ul>
<p>第三层是智能代理（Intelligent Agent），是在每个server上必须安装的，用来执行任务和监控发生在该服务器各被管理对象上的事件的软件。被管理对象包括网络节点（服务器）、数据库、侦听程序（listener）以及其他安装在这些结点上的Oracle服务。</p>
<p>三层结构只是功能上的区分，具体安装设置时可以任意组合。</p>
<h2>2.2 OEM组件介绍</h2>
<p>OEM包换有一组工具：</p>
<ul>
  <li> DataManager（数据管理器）：这工具使你能够象加载数据一样执行数据的export/import。</li>
  <li> SchemaManager：这工具使你能够在数据库中管理对象。可以用于创建，修改，和删除tables,indexes,views,snapshots,sequences等等。</li>
  <li> SecurityManager（安全性管理器）：这工具使你能够管理用户,角色,权限及profiles。</li>
  <li> StorageManager（存储管理器）：这工具允许你创建和修改表空间,数据文件和回滚段.</li>
  <li> InstanceManager（实例管理器）：这工具允许你关闭,启动实例并且存储和管理数据库参数。</li>
  <li> SQL*Worksheet：这工具使你能够运行或创造SQL脚本并且存储在硬盘上。你能使用这工具重现最后执行的语句；同时，检查显示到屏幕上的执行结果。</li>
  <li> BackupManager（备份管理器）：这工具允许你管理备份和恢复为Oracle7和Oracle8数据库。在Oracle7此工具支持EnterpriseBackupUtility(EBU)，在Oracle8此工具支持恢复管理器RecoveryManager。</li>
  <li> SoftwareManager（软件管理器）：这允许你将远程软件安装到支持这一特性的远程服务器。</li>
</ul>
<h2>2.3 OEM安装与设置</h2>
<p>OEM 2.2需要单独安装，原来可以从ORACLE官方网站上下载，现在早已取消下载，所以SOURCE的取得只能是各显神通了。</p>
<p>1、启动智能代理</p>
<p>为了管理结点和结点上的oracle服务，必须在结点上配置并运行一个智能代理（Intelligent Agent）。智能代理可以从Oracle Server CD来安装。一般在数据库安装时都会选择安装的，如果你没有安装单独来安装。</p>
<p>如果被管理的结点是NT，在以前设置智能代理是很麻烦的，现在我想大家都用2k了，所以这一步你跟本就不用做了，只要你安装了，系统会自动起来一个Oracle&lt;oracle_home&gt;Agent的服务，也不需要其它设置。</p>
<p>如果被管理结点是个UNIX系统，正常安装之后可以通过lsnrctl dbsnmp_start| dbsnmp_stop|
  dbsnmp_status来启动、停止和检测状态。如果不行可能是执行权限问题，确认$ORACLE_HOME/bin/dbsnmp的权限为：-rwsr-xr-x，如果不是可能是安装时root.sh没有正确执行，一般不会出现这种情况，所以可以直接chmod 4755把它的权限改过来就可以了。</p>
<p>2、运行emca创建EM Repository</p>
<p>OMS需要有一个EM库(Repository，不是Database)，实际就是需要一个表空间，里面含有OMS所需要的表，视图，索引，存储过程等对象的集合，主要用于存储OMS的系统数据，应用数据和环境中被管理结点的状态。因此建议将这个EM Repository建在DBA的本地，而不要建在产品数据库上。</p>
<p>一般可以使用emca（Configuration Assistant）在一个现有的数据库上创建这个EM Repository表空间。当然使用emca还会完成下面的任务：</p>
<ul>
  <li> 创建repository用户</li>
  <li> 为repository用户创建模式/schema对象</li>
  <li> 向EM repository中加载OMS registry数据.</li>
  <li> 设置OMS将使用的配置文件</li>
  <li> 从一个用户模式中清除repository。</li>
  <li> 修改OMS连到哪个repository。</li>
</ul>
<p>3、启动OMS</p>
<p>在Windows中通过启动OracleManagementServer服务来启动OMS，在Solaris上使用oemctrl start oms&amp;来启动。相关日志在$ORACLE_HOME/sysman/log目录下。</p>
<p>4、启动EM Console控制台以添加被管理节点</p>
<p>windows中有个console的菜单，命令行使用oemapp console，缺省的OEM登录名是：sysman / oem_temp，在输入了缺省的登录名之后，你将被强制要求修改初始密码。值得注意的是这些用户只是EM console和OMS的用户，不是数据库账号，但是关于这些用户的信息是存储在EM Repository的一个表中。</p>
<p>接着你可以在图形界面下完成查找并添加节点，如果不能自动添加你可以选择用手工添加来完成。</p>
<p>5、启动相关工具</p>
<p>到此为止你就完成了OMS的设置工作，可以使用相关DBA工具来完成你的工作了。命令行方式分别如下：</p>
<p> oemapp dbastudio|security|schema|instance|storage|worksheet  <br>
</p>
</body>
</html>
