<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<title>权限设置</title>
<script language="javascript" src="css.js"></script>
</head>

<body>
<h1>第三章 权限设置</h1>
<hr>
<h2>3.1 前言</h2>
<p>如今随着软件项目规模的日益增大以及项目复杂性的不断加剧，软件配置管理（SCM）的重要性已越来越受到大家的认可。许多优秀的软件配置管理工具也应运而生，使得我们能够轻松有效地管理我们的软件项目，作为这其中的一员，Microsoft Visual SourceSafe具有简单易用、方便高效、与Windows操作系统及微软开发工具高度集成等优点。今天，我们就来讲讲VSS中的权限管理。</p>
<p>首先我将讲解VSS中权限机制实现的原理，这里面设计到VSS的默认安全访问机制、项目安全等内容，接着我将告诉实现权限机制的具体方法，最后我将结合一个软件移交项目的具体情况来谈谈权限管理如何应用到实际的项目过程中。</p>
<h2>3.2 VSS默认的安全访问控制
</h2>
<p>　　每次你安装VSS以后，系统自动激活默认的安全访问控制机制。这套机制非常简单，它包括两个等级的权限：
</p>
<p>　　1) 只读权限：用户可以查看VSS数据库中的所有对象，但是不能够修改
</p>
<p>　　2) 读写权限：用户可以查看和修改VSS数据库中的任何对象
</p>
<p>　　每次你增加新用户的时候，你可以决定该用户的权限等级。在“Add User”对话框中包含一个“Read Only”复选框，你可以通过它来确定用户具有的权限。
</p>
<p>　　我们前面说过这只是个极其简单、粗线条的解决方案，但同时也是最简单的。在实际过程中，你可能需要更细化的权限分配，甚至希望每个文件针对不同的用户都能设置不同的权限。那我们就得亲自动手设置我们项目的安全机制。 
</p>
<p>　　注意：SourceSafe中的所有安全设置都是在Visual SourceSafe Administrator中进行的，所以在深入以下细节之前，你必须确认一件事情：你的Admin密码足够安全，除你之外没有任何人可以随心所欲地进入Visual SourceSafe Administrator。否则，一切安全考虑都是徒劳。</p>
<h2>3.3 项目安全与用户访问权限
</h2>
<p>　　在讲解项目安全之前我们先来回顾一下VSS的基本组成框架，VSS包含多个数据库(database)，每个数据库又包含许多的项目，而且可能项目里嵌套着不同的子项目，最后才是你的源文件。你可以把这个类比成操作系统中的磁盘分区，目录，子目录，文件，每台机器包含许多的磁盘分区，每个分区中包含无数个目录、子目录，在子目录下才是你的文件。VSS中的用户是基于VSS数据库的，也就是说每个数据库都包含有自己的用户清单。用户访问权限意思是用户可以访问（包括查看、修改和执行命令等）数据库中的哪些项目，对项目来说就是它只能被那些已经授权的用户访问，也就是所谓的项目安全。
</p>
<p>　　很遗憾VSS只提供了到项目（对应于目录）的用户权限控制，并不能针对每个文件来设置不同的用户访问权限（比如Rational ClearCase等就提供此功能）。虽然你可以用某种变通的方法来做到这一点，比如增加子项目，不过那样就破坏了整个项目结构的规范性、可读性和合理性，甚至产生些无任何意义的子项目。
</p>
<p>　　VSS定义了四级用户访问权限，级别由低到高，后者包括所有前者的权限，比如说拥有Check Out权限就自动拥有了读的权限。
</p>
<p>　　1) 只读（R）：允许查看文件，对应于View、Get等命令
</p>
<p>　　2) Check Out（C）：可以使用Check Out，Check In，Undo Check Out等命令修改文件内容
</p>
<p>　　3) 文件增删（A）：可以在项目中增加、删除、重命名文件或者给文件加标签，对应的命令有Add，Delete，Label，Rename等
</p>
<p>　　4) 破坏（D）：这级权限对应于那些具有巨大破坏性的操作（就是那些一不小心就可能被炒鱿鱼的操作），请牢记它们的名字：Destroy，Purge，Rollback。所以亦有人戏称之为自杀权限。
</p>
<p>　　其实你可以发现默认安全机制中的两级权限是和这四者对应起来的，只不过后者把前者的读写权限细分为三个不同的级别。好啦，了解每级权限各自的含义之后我们就可以开始设置不同用户的权限啦。
</p>
<p>　　设置用户权限之前，你必须激活项目安全机制。打开VSS Administrator的Tools菜单，点击Options得到SourceSafe Options对话框，选取Project Security并且勾上Enable project security复选框。（如下图所示）
</p>
<p align="center"><img src="img/open_privilege.jpg" width="397" height="344"></p>
<p align="center">图一 激活项目安全机制</p>
<p>　　VSS中有三种方法可以设置用户的项目访问权限：针对项目设置每个用户的权限，针对用户设置访问每个项目的权限，拷贝用户权限，它们分别对应于Tools菜单下的Assign Rights by Project，Rights Assignments for User，Copy User Rights。我们以方法一为例做一简单说明。如下图所示，在左边框中选定项目，在右上框中选定用户，右下脚的User rights中就显示该用户现具有的权限，选中不同的复选框来设置你自己的权限。注意：对每个项目的用户权限设置自动反映到该项目的所有子项目中。 </p>
<p align="center"><img src="img/user_rights.jpg" width="464" height="321"> </p>
<p align="center">图二 用户授权
</p>
<h2>3.4 参考
</h2>
<p>　　1) 本文中会大量涉及到“项目”一词，有的时候它是指实际的软件项目，有时它又是指VSS数据库中的项目、子项目，请注意区分。
</p>
<p>　　2) 有关软件配置管理的更详细信息，可以参考本网站相关内容。软件配置管理主要包括版本管理、变更管理、权限管理等方面，本文主要涉及权限管理。
</p>
<p>　　3) 软件版本采用Microsoft Visual SourceSafe 6.0英文版，其他的版本请进行相应的对照。
</p>
<p>　　4) 所有这些命令的详细信息可以参考VSS帮助。
</p>
<p>　　5) 项目背景大致介绍：所移交的软件为一国外公司的软件，是基于Microsoft的DNA架构的三层应用，代码量为150万行左右。移交的目标：掌握现有系统，充分了解相关的商业逻辑，为以后开发出自己的符合中国国情的软件做好充分的准备。这其中可能涉及到需求的再分析、系统的重新架构以及向Java平台的迁移。
</p>
<p>　　6) 我们分别用R、C、A、D来表示VSS中的四级权限Read，Check Out，Add，Destroy。</p>
<p></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp; </p>
<script language="javascript" src="index.js"></script>
</body>
</html>
